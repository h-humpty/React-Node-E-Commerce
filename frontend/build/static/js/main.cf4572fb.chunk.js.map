{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","BACKYARD-BBQ.svg","components/Header.js","components/Footer.js","components/CheckoutButtonBar.js","components/Message.js","components/Loader.js","constants/productConstants.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductsScreen.js","components/Rating.js","screens/ProductScreen.js","constants/cartConstants.js","screens/CartScreen.js","actions/cartActions.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","components/Paginate.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","constants/inventoryConstants.js","actions/inventoryActions.js","screens/InventoryListScreen.js","constants/inventoryLevelConstants.js","actions/inventoryLevelActions.js","screens/InventoryCreateScreen.js","screens/inventoryEditScreen.js","constants/receiptConstants.js","actions/receiptActions.js","screens/ReceiptListScreen.js","screens/ReceiptDetailScreen.js","constants/recipeConstants.js","actions/recipeActions.js","screens/RecipeListScreen.js","screens/RecipeCreateScreen.js","screens/RecipeEditScreen.js","screens/InventoryLevelListScreen.js","screens/SalaryListScreen.js","screens/FinancialSummaryScreen.js","screens/BillScreen.js","App.js","constants/inventoryCategoryConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducers.js","reducers/inventoryReducers.js","reducers/inventoryCategoryReducers.js","reducers/receiptReducers.js","reducers/recipeReducers.js","reducers/inventoryLevelReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","logout","dispatch","localStorage","removeItem","type","document","location","href","getUserDetails","id","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","message","response","Header","useDispatch","useSelector","state","Navbar","style","backgroundColor","height","variant","expand","collapseOnSelect","Container","to","width","cursor","src","logo","alt","Toggle","aria-controls","Collapse","Nav","textTransform","className","NavDropdown","title","name","Item","onClick","Link","isAdmin","display","boxShadow","justifyContent","textAlign","alignItems","target","rel","marginRight","color","alignSelf","fontSize","class","fontWeight","letterSpacing","Footer","alignContent","Row","Col","fontFamily","marginBottom","marginInline","padding","window","open","CheckoutButtonBar","history","useHistory","cartItems","cart","lineHeight","top","position","right","minWidth","Button","disabled","length","push","borderRadius","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","margin","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_FILTERED_REQUEST","PRODUCT_FILTERED_SUCCESS","PRODUCT_FILTERED_FAIL","listProducts","keyword","pageNumber","listProductFiltered","listProductDetails","HomeScreen","match","productTopRated","loading","error","products","useState","index","setIndex","console","log","useEffect","Helmet","content","backgroundImage","variants","variant_image","backgroundSize","flex","justifyItems","textShadow","requestToChangeActive","activeItemIndex","numberOfCards","gutter","leftChevron","rightChevron","outsideChevron","chevronWidth","slidesToScroll","alwaysShowChevrons","map","product","idx","Card","border","Img","objectFit","Body","Title","as","option1_value","_id","backgroundPosition","flexDirection","marginTop","ProductsScreen","productList","item_name","sm","md","lg","xl","image_url","Rating","value","text","ProductScreen","setRating","setComment","setProductList","productDetails","productReviewCreate","successProductReview","success","filter","x","params","obj","items","pName","useMemo","list","index1","index2","vid","variant_id","qty","item","Text","marginBotton","option2_value","default_price","decrement","Subtitle","increment","addToCartHandler","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CartScreen","productId","search","Number","split","pd","image","price","setItem","JSON","stringify","addToCart","removeFromCartHandler","removeFromCart","flexBasis","Image","fluid","rounded","ListGroup","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","Form","onSubmit","e","preventDefault","post","login","Group","controlId","Label","Control","placeholder","onChange","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","createOrder","orderItems","OrderScreen","orderId","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","deliverOrder","payOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","Paginate","pages","page","Pagination","Array","keys","active","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","option1_name","ProductEditScreen","setPrice","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","INVENTORY_LIST_REQUEST","INVENTORY_LIST_SUCCESS","INVENTORY_LIST_FAIL","INVENTORY_SALARY_REQUEST","INVENTORY_SALARY_SUCCESS","INVENTORY_SALARY_FAIL","INVENTORY_UNPAID_REQUEST","INVENTORY_UNPAID_SUCCESS","INVENTORY_UNPAID_FAIL","INVENTORY_COST_REQUEST","INVENTORY_COST_SUCCESS","INVENTORY_COST_FAIL","INVENTORY_CREATE_REQUEST","INVENTORY_CREATE_SUCCESS","INVENTORY_CREATE_FAIL","INVENTORY_CREATE_RESET","INVENTORY_DELETE_REQUEST","INVENTORY_DELETE_SUCCESS","INVENTORY_DELETE_FAIL","INVENTORY_UPDATE_REQUEST","INVENTORY_UPDATE_SUCCESS","INVENTORY_UPDATE_FAIL","INVENTORY_UPDATE_RESET","INVENTORY_DETAILS_REQUEST","INVENTORY_DETAILS_SUCCESS","INVENTORY_DETAILS_FAIL","INVENTORY_GROUP_REQUEST","INVENTORY_GROUP_SUCCESS","INVENTORY_GROUP_FAIL","INVENTORY_DATES_REQUEST","INVENTORY_DATES_SUCCESS","INVENTORY_DATES_FAIL","listDatesInventory","startDate","endDate","updateInventory","inventory","InventoryListScreen","inventoryList","inventoryDelete","inventoryDatesList","inventoryDates","loadingDates","Date","setStartDate","setEndDate","showSearch","setShowSearch","deleteInventory","selectionRange","key","handleSelect","ranges","selection","handleSubmit","toISOString","reduceTotalCost","TotalCost","total_cost","b","bottom","toLocaleString","edited_by","slice","vendor","category_name","item_quantity","item_cost","paid","date_paid","INVENTORYLEVEL_LIST_REQUEST","INVENTORYLEVEL_LIST_SUCCESS","INVENTORYLEVEL_LIST_FAIL","INVENTORYLEVEL_SALARY_REQUEST","INVENTORYLEVEL_SALARY_SUCCESS","INVENTORYLEVEL_SALARY_FAIL","INVENTORYLEVEL_GROUPED_REQUEST","INVENTORYLEVEL_GROUPED_SUCCESS","INVENTORYLEVEL_GROUPED_FAIL","INVENTORYLEVEL_CREATE_REQUEST","INVENTORYLEVEL_CREATE_SUCCESS","INVENTORYLEVEL_CREATE_FAIL","INVENTORYLEVEL_CREATE_RESET","INVENTORYLEVEL_DELETE_REQUEST","INVENTORYLEVEL_DELETE_SUCCESS","INVENTORYLEVEL_DELETE_FAIL","INVENTORYLEVEL_UPDATE_REQUEST","INVENTORYLEVEL_UPDATE_SUCCESS","INVENTORYLEVEL_UPDATE_FAIL","INVENTORYLEVEL_UPDATE_RESET","INVENTORYLEVEL_DETAILS_REQUEST","INVENTORYLEVEL_DETAILS_SUCCESS","INVENTORYLEVEL_DETAILS_FAIL","listInventoryLevel","InventoryCreateScreen","date","day","getDate","month","getMonth","year","getFullYear","todayDate","undefine","inventoryCreate","inventoryLevelList","loadingList","errorList","inventoryLevel","setUser","categoryList","arr","ret_arr","i","remove_duplicates","cost","setCost","size","setSize","quantity","setQuantity","totalCost","setTotalCost","setPaid","datePaid","setDatePaid","setVendor","IL","classNamePrefix","isDisabled","isLoading","isClearable","isRtl","isSearchable","options","inline","inventoryId","inventoryDetail","inventoryUpdate","item_size","RECEIPT_LIST_REQUEST","RECEIPT_LIST_SUCCESS","RECEIPT_LIST_FAIL","RECEIPT_UNPAID_REQUEST","RECEIPT_UNPAID_SUCCESS","RECEIPT_UNPAID_FAIL","RECEIPT_PAID_REQUEST","RECEIPT_PAID_SUCCESS","RECEIPT_PAID_FAIL","RECEIPT_REMOVE_REQUEST","RECEIPT_REMOVE_SUCCESS","RECEIPT_REMOVE_FAIL","RECEIPT_DETAILS_REQUEST","RECEIPT_DETAILS_SUCCESS","RECEIPT_DETAILS_FAIL","RECEIPT_DETAILS_RESET","listReceipt","listReceiptDetails","ReceiptListScreen","receiptList","receipt","setPageNumber","receipts","receipt_date","receipt_number","points_earned","points_balance","total_discount","total_money","Stack","spacing","count","event","ReceiptDetailScreen","receiptId","receiptDetails","customer_id","line_items","variant_name","RECIPE_LIST_REQUEST","RECIPE_LIST_SUCCESS","RECIPE_LIST_FAIL","RECIPE_DETAILS_REQUEST","RECIPE_DETAILS_SUCCESS","RECIPE_DETAILS_FAIL","RECIPE_DETAILS_RESET","RECIPE_CREATE_REQUEST","RECIPE_CREATE_SUCCESS","RECIPE_CREATE_FAIL","RECIPE_CREATE_RESET","RECIPE_DELETE_REQUEST","RECIPE_DELETE_SUCCESS","RECIPE_DELETE_FAIL","RECIPE_UPDATE_REQUEST","RECIPE_UPDATE_SUCCESS","RECIPE_UPDATE_FAIL","RECIPE_UPDATE_RESET","listRecipes","RecipeListScreen","recipeList","recipe","recipeDelete","deleteRecipe","minHeight","RecipeCreateScreen","setLabel","weight","average_cost","ingredients","setIngredients","setVariant_id","recipeCreate","productFiltered","loadingFiltered","errorFiltered","successInventoryLevelSuccess","selectProducts","filtered","filteredCategories","handleInputChange","findCategory","handleAddClick","createRecipe","defaultValue","handleInputChangeProducts","readOnly","splice","handleRemoveClick","placeItems","RecipeEditScreen","recipeId","recipeUpdate","successLevelList","recipeDetails","setFilteredCategories","productDetail","setProductDetail","averageCost","backgroundRepeat","updateRecipe","InventoryLevelListScreen","inventoryLevelGroups","inventoryLevelGrouped","loadingInventoryLevel","inventoryLevels","inventoryCosts","inventoryCost","loadingCost","TotalQuantity","Accordion","AccordionSummary","expandIcon","AccordionDetails","updated_at","in_stock","useStyles","makeStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","verticalAlign","details","column","helper","borderLeft","divider","link","primary","main","textDecoration","SalaryListScreen","show","setShow","updateShow","setUpdateShow","setId","salary","setSalary","jobTitle","setJobTitle","dateEmployeed","setDateEmployeed","employeed","setEmployeed","updatedSalary","setUpdatedSalary","updatedJobTitle","setUpdatedJobTitle","updatedId","setUpdatedId","updatedStartDate","setUpdatedStartDate","classes","inventorySalary","inventoryLevelSalary","inventoryLevelCreate","inventoryLevelUpdate","filteredList","monthly_salary","updateList","uniqueNames","from","Set","sort","localeCompare","reactSelectList","totes","sum","total_paid","iL","total","monthlySalary","firstDate","start_date","secondDate","end_date","diffDays","abs","dailySalary","parseInt","total_payable","Modal","onHide","closeButton","createInventoryLevel","created_at","updateInventoryLevel","defaultChecked","Typography","toLocaleDateString","inventoryGroup","totalSale","Total","expectedCash","BillScreen","payableShow","setPayableShow","setReceiptId","setDate","payableDate","setPayableDate","payableId","setPayableId","receiptUnpaid","loadingUnpaid","errorUnpaid","receiptPaid","successPaid","receiptRemove","successRemove","inventoryUnpaid","loadingInventory","errorInventory","successInventory","successInventoryUpdate","successDetails","showArr","setShowArr","submitPaid","handleClose","receiptNumber","paidReceipt","submitPayableHandler","Tabs","defaultActiveKey","Tab","eventKey","handleOpen","reduceBillsRecievable","reduceBillsPayable","App","exact","path","component","InventoryEditScreen","FinancialSummaryScreen","INVENTORYCATEGORY_LIST_REQUEST","INVENTORYCATEGORY_LIST_SUCCESS","INVENTORYCATEGORY_LIST_FAIL","INVENTORYCATEGORY_DETAILS_REQUEST","INVENTORYCATEGORY_DETAILS_SUCCESS","INVENTORYCATEGORY_DETAILS_FAIL","reducer","combineReducers","action","existItem","find","inventoryCategoryList","inventoryCategory","inventoryCategoryDetails","inventoryLevelDetail","inventoryLevelDelete","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"uUAAaA,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA4B,4BAE5BC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAkB,kBAElBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBC/BpBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAoB,oBACpBC,EAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCsCtBC,GAAS,kBAAM,SAACC,GAC3BC,aAAaC,WAAW,YACxBD,aAAaC,WAAW,aACxBD,aAAaC,WAAW,mBACxBD,aAAaC,WAAW,iBACxBF,EAAS,CAAEG,KAAMjD,IACjB8C,EAAS,CAAEG,KAAM1C,IACjBuC,EAAS,CAAEG,KAAMZ,KACjBS,EAAS,CAAEG,KAAMlC,IACjBmC,SAASC,SAASC,KAAO,WA2CdC,GAAiB,SAACC,GAAD,8CAAQ,WAAOR,EAAUS,GAAjB,yBAAAC,EAAA,sEAElCV,EAAS,CACPG,KAAM7C,IAH0B,EAQ9BmD,IADWE,EAPmB,EAOhCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZJ,SAgBXC,IAAMC,IAAN,qBAAwBV,GAAMK,GAhBnB,gBAgB1BM,EAhB0B,EAgB1BA,KAERnB,EAAS,CACPG,KAAM5C,EACN6D,QAASD,IApBuB,kDA2BlB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM3C,EACN4D,QAASC,IAhCuB,0DAAR,yDCpHf,OAA0B,yC,QCgJ1BE,GAzIA,WACb,IAAMvB,EAAWwB,cAGTb,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAMR,OACE,oCACE,eAACgB,EAAA,EAAD,CACEC,MAAO,CAAEC,gBAAiB,UAAWC,OAAQ,SAE7CC,QAAQ,OACRC,OAAO,KACPC,kBAAgB,EALlB,SAOE,gBAACC,EAAA,EAAD,WACE,eAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,sBACEP,MAAO,CAAEE,OAAQ,OAAQM,MAAO,QAASC,OAAQ,WACjDC,IAAKC,GACLC,IAAI,8BAIR,eAACb,EAAA,EAAOc,OAAR,CAAeC,gBAAc,qBAC7B,eAACf,EAAA,EAAOgB,SAAR,CAAiBnC,GAAG,mBAApB,SACE,gBAACoC,EAAA,EAAD,CAAKhB,MAAO,CAACiB,cAAe,aAAcC,UAAU,WAApD,UACGnC,EACC,gBAACoC,EAAA,EAAD,CAAaC,MAAOrC,EAASsC,KAAMzC,GAAG,WAAtC,UACE,eAAC,gBAAD,CAAe2B,GAAG,WAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,wBAEF,eAACH,EAAA,EAAYG,KAAb,CAAkBC,QA9BZ,WACpBnD,EAASD,OA6BK,uBAKF,eAAC,gBAAD,CAAeoC,GAAG,SAAlB,SACE,gBAACS,EAAA,EAAIQ,KAAL,WACE,oBAAGN,UAAU,gBADf,gBAKHnC,GAAYA,EAAS0C,SACpB,gBAACN,EAAA,EAAD,CAAcC,MAAM,QAAQxC,GAAG,YAA/B,UAEE,eAAC,gBAAD,CAAe2B,GAAG,kBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,sBAEF,eAAC,gBAAD,CAAef,GAAG,qBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,yBAEF,eAAC,gBAAD,CAAef,GAAG,mBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,uBAEF,eAAC,gBAAD,CAAef,GAAG,uBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,yBAEF,eAAC,gBAAD,CAAef,GAAG,qBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,yBAEF,eAAC,gBAAD,CAAef,GAAG,oBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,yBAEF,eAAC,gBAAD,CAAef,GAAG,oBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,wBAEF,eAAC,gBAAD,CAAef,GAAG,4BAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,iCAEF,eAAC,gBAAD,CAAef,GAAG,kBAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,2CAIF,eAAC,gBAAD,CAAef,GAAG,0BAAlB,SACE,eAACY,EAAA,EAAYG,KAAb,qCAIN,eAAC,gBAAD,CAAef,GAAG,YAAlB,SACE,eAACS,EAAA,EAAIQ,KAAL,CAAUN,UAAU,cAApB,oBAEF,eAAC,gBAAD,CAAeX,GAAG,QAAlB,SACE,gBAACS,EAAA,EAAIQ,KAAL,CAAUN,UAAU,cAApB,UACE,oBAAGA,UAAU,yBADf,uBAQV,sBACElB,MAAO,CACLE,OAAQ,OACRD,gBAAiB,cACjByB,QAAS,OACTC,UAAW,qCACXC,eAAgB,SAChBC,UAAW,SACXC,WAAY,UARhB,SAWE,qBACEpD,KAAM,wCACNqD,OAAO,SACPC,IAAI,aAHN,UAKE,oBACEhC,MAAO,CACLiC,YAAa,MACbC,MAAO,UACPC,UAAW,SACXC,SAAU,QAEZC,MAAM,0BAER,uBACErC,MAAO,CACLkC,MAAO,aACPE,SAAU,OACVE,WAAY,MACZC,cAAe,UALnB,6C,oBCpCKC,GAzFA,WACb,OACE,yBACExC,MAAO,CACL0B,QAAS,OACTxB,OAAQ,QACRD,gBAAiB,cACjBwC,aAAc,UALlB,SAQE,eAACnC,EAAA,EAAD,UACE,gBAACoC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACE3C,MAAO,CACL4C,WAAY,8BACZN,WAAY,MACZO,aAAc,QAEhB3B,UAAU,mBANZ,8DAUA,gBAACyB,GAAA,EAAD,CAAKzB,UAAU,mBAAf,UAmBE,0BACElB,MAAO,CACLC,gBAAiB,UACjB6C,aAAc,OACdL,aAAc,SACdf,QAAS,cACTlB,MAAO,QACPoB,eAAgB,SAChBW,cAAe,MACfQ,QAAS,QAEXxB,QAAS,kBAAKyB,OAAOC,KAAK,sEAC1B/B,UAAU,eAZZ,UAcE,oBACElB,MAAO,CAAEoC,SAAU,SAAUH,YAAa,OAC1CI,MAAM,2BACF,IAjBR,yBAqBA,0BACErC,MAAO,CACLC,gBAAiB,UACjB6C,aAAc,OACdL,aAAc,SACdf,QAAS,cACTlB,MAAO,QACPoB,eAAgB,SAChBW,cAAe,MACfQ,QAAS,QAEXxB,QAAS,kBAAKyB,OAAOC,KAAK,6DAC1B/B,UAAU,eAZZ,UAcE,oBACElB,MAAO,CAAEoC,SAAU,SAAUH,YAAa,OAC1CI,MAAM,qBACF,IAjBR,uC,UCbGa,GA/CW,WACxB,IAAMC,EAAUC,cAGRC,EADKxD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,QAClCD,UAQR,OACE,uBAAKrD,MAAO,CAAEC,gBAAiB,UAAWC,OAAQ,OAAQM,MAAO,QAAjE,UACE,uBAAMR,MAAO,CAAEuD,WAAY,QAA3B,SACE,uBAAMvD,MAAO,CAAE0B,QAAS,oBAG1B,sBACE1B,MAAO,CACLwD,IAAK,MACLC,SAAU,WACVC,MAAO,KACPC,SAAU,SALd,SAQE,eAACC,GAAA,EAAD,CACErF,KAAK,SACL2C,UAAU,YACV2C,SAA+B,IAArBR,EAAUS,OACpBvC,QAtBgB,WACtB4B,EAAQY,KAAK,6BAsBP/D,MAAO,CACLkC,MAAO,OACPjC,gBAAiB,UACjB0B,UAAW,+BACXS,SAAU,OACV4B,aAAc,MACdxD,MAAO,QAXX,4B,sCC5BFyD,GAAU,SAAC,GAAyB,IAAxB9D,EAAuB,EAAvBA,QAAS+D,EAAc,EAAdA,SACvB,OACI,eAACC,GAAA,EAAD,CAAOhE,QAASA,EAAhB,SACK+D,KAKbD,GAAQG,aAAe,CACnBjE,QAAQ,QAGG8D,U,UCMAI,GAlBA,WACb,OACE,eAACC,GAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLxE,MAAO,CACLQ,MAAO,QACPN,OAAQ,QACRuE,OAAQ,OACR/C,QAAS,SAPb,SAUI,uBAAMR,UAAU,UAAhB,2BCfKwD,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBAEvBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA8B,8BAE9BC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBCJxBC,GACX,eAACC,EAAD,uDAAW,GAAIC,EAAf,uDAA4B,GAA5B,8CACA,WAAOnI,GAAP,iBAAAU,EAAA,sEAEIV,EAAS,CAAEG,KAAMmG,KAFrB,SAI2BrF,IAAMC,IAAN,gCACIgH,EADJ,uBAC0BC,IALrD,gBAIYhH,EAJZ,EAIYA,KAIRnB,EAAS,CACPG,KAAMoG,GACNnF,QAASD,IAVf,gDAaInB,EAAS,CACPG,KAAMqG,GACNpF,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAlBlB,yDADA,uDAwBW+G,GAAsB,yDAAM,WAAOpI,GAAP,iBAAAU,EAAA,sEAErCV,EAAS,CAAEG,KAAM2H,KAFoB,SAGd7G,IAAMC,IAAN,0BAHc,gBAG7BC,EAH6B,EAG7BA,KAERnB,EAAS,CACPG,KAAM4H,GACN3G,QAASD,IAP0B,gDAUrCnB,EAAS,CACPG,KAAM6H,GACN5G,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAfuB,yDAAN,uDAoBtBgH,GAAqB,SAAC7H,GAAD,8CAAQ,WAAOR,GAAP,iBAAAU,EAAA,sEAEtCV,EAAS,CAAEG,KAAMsG,KAFqB,SAIfxF,IAAMC,IAAN,wBAA2BV,IAJZ,gBAI9BW,EAJ8B,EAI9BA,KAERnB,EAAS,CACPG,KAAMuG,GACNtF,QAASD,IAR2B,gDAWtCnB,EAAS,CACPG,KAAMwG,GACNvF,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAhBwB,yDAAR,uD,qBCoOnBiH,GAnSI,SAAC,GAAuB,EAArBC,MAAsB,IAAfxD,EAAc,EAAdA,QACrB/E,EAAWwB,cAEXgH,EAAkB/G,aAAY,SAACC,GAAD,OAAWA,EAAM8G,mBAC7CC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAJiB,EAMfC,mBAAS,GANM,oBAMlCC,EANkC,KAM3BC,EAN2B,KAQzCC,QAAQC,IAAIH,GAEZI,qBAAU,WACRjJ,EDmO2B,uCAAM,WAAOA,GAAP,iBAAAU,EAAA,sEAEjCV,EAAS,CAAEG,KAAMwH,KAFgB,SAIV1G,IAAMC,IAAN,qBAJU,gBAIzBC,EAJyB,EAIzBA,KAERnB,EAAS,CACPG,KAAMyH,GACNxG,QAASD,IARsB,gDAWjCnB,EAAS,CACPG,KAAM0H,GACNzG,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAhBmB,yDAAN,yDClO1B,CAACrB,IAMJ,OACE,uCACE,gBAACkJ,GAAA,EAAD,WACE,6DACA,uBACEjG,KAAK,cACLkG,QAAQ,6CAIVV,GACA,sBACE7G,MAAO,CACLwH,gBAAgB,OAAD,OAAST,EAAS,GAAGU,SAASC,cAA9B,KACflH,MAAO,OACPN,OAAQ,QACRyH,eAAgB,QAChBC,KAAM,GAER1G,UAAU,YARZ,SAUE,uBACElB,MAAO,CACL0B,QAAS,OACTxB,OAAQ,OACR2H,aAAc,SACdpF,aAAc,UALlB,UAQE,qBACEzC,MAAO,CACLkC,MAAO,QACPE,SAAU,OACV0F,WAAY,gBACZjG,UAAW,UALf,8CAUA,qBACE7B,MAAO,CACLkC,MAAO,QACPE,SAAU,OACVP,UAAW,SACXiG,WAAY,iBALhB,qCAUA,eAAC,OAAD,CACE9H,MAAO,CAAE4B,eAAgB,SAAUF,QAAS,QAC5CnB,GAAG,YAFL,SAIE,yBAAQW,UAAU,SAASf,QAAQ,YAAnC,gCAOR,gBAACG,EAAA,EAAD,WACE,qBACEN,MAAO,CACL6B,UAAW,SACXe,WAAY,wBACZN,WAAY,MACZJ,MAAO,UACPE,SAAU,UANd,kCAWCyE,EACC,eAAC,GAAD,IACEC,EACF,gBAAC,GAAD,CAAS3G,QAAQ,SAAjB,UAA2B2G,EAA3B,OAEA,+BAOE,eAAC,KAAD,CACEiB,sBAAuBb,EACvBc,gBAAiBf,EACjBgB,cAAe,EACfC,OAAQ,GACRC,YACE,oBACEnI,MAAO,CAAEkC,MAAO,SAChBG,MAAM,+BAGV+F,aACE,oBACEpI,MAAO,CAAEkC,MAAO,SAChBG,MAAM,gCAGVgG,gBAAc,EACdC,aAAc,GACdC,eAAgB,EAChBC,oBAAoB,EApBtB,SAsBGzB,EAAS0B,KAAI,SAACC,EAASC,GACtB,OACE,gBAACC,GAAA,EAAD,CACE5I,MAAO,CAAE6I,OAAQ,kCAEjB3H,UAAU,mBAHZ,UAKE,eAAC0H,GAAA,EAAKE,IAAN,CACE9I,MAAO,CACLQ,MAAO,OACPN,OAAQ,QACR8D,aAAc,EACd+E,UAAW,QACXtI,OAAQ,WAEVC,IAAKgI,EAAQjB,SAASC,cACtBvH,QAAQ,QAGV,eAACyI,GAAA,EAAKI,KAAN,UACE,eAACJ,GAAA,EAAKK,MAAN,CAAYC,GAAG,MAAf,SACE,kCAASR,EAAQjB,SAAS0B,oBAG9B,yBACE5H,QAAS,kBAvIR3C,EAuI0B8J,EAAQU,SAtIrDjG,EAAQY,KAAR,mBAAyBnF,IADP,IAACA,GAwIDsC,UAAU,iBAFZ,4BApBKyH,cAiCjB9B,GACA,uBACE7G,MAAO,CACL0B,QAAS,OACTlB,MAAO,OACPoH,KAAM,EACN1H,OAAQ,SALZ,UAQE,sBACEF,MAAO,CACLwH,gBAAgB,iFAChBhH,MAAO,OAEPmH,eAAgB,QAChBC,KAAM,EACNyB,mBAAoB,SACpB3H,QAAS,QAEXR,UAAU,cAEZ,uBACElB,MAAO,CACL0B,QAAS,OACTxB,OAAQ,OACRM,MAAO,OACPoH,KAAM,EACN0B,cAAe,SACfrJ,gBAAiB,eACjB2B,eAAgB,UARpB,UAWE,qBACE5B,MAAO,CACLkC,MAAO,UACPE,SAAU,OACVE,WAAY,MACZT,UAAW,SACXe,WAAY,wBACZG,QAAS,QAPb,0CAYA,qBACE/C,MAAO,CACLkC,MAAO,UACPE,SAAU,OACVP,UAAW,SACXkB,QAAS,OACTQ,WAAY,QANhB,8OAgBA,eAAC,OAAD,CACEvD,MAAO,CAAE4B,eAAgB,SAAUF,QAAS,OAAQS,UAAU,SAAUoH,UAAW,QACnFhJ,GAAG,YAFL,SAIE,yBAAQW,UAAU,SAASf,QAAQ,YAAnC,iCAQN0G,GACA,sBACE7G,MAAO,CACLwH,gBAAgB,kLAChBhH,MAAO,OACPN,OAAQ,QACRyH,eAAgB,QAChBC,KAAM,EACNyB,mBAAoB,UAEtBnI,UAAU,YATZ,SAWE,uBACElB,MAAO,CACL0B,QAAS,OACTxB,OAAQ,OACR2H,aAAc,SACdpF,aAAc,UALlB,UAQE,qBACEzC,MAAO,CACLkC,MAAO,QACPE,SAAU,OACVE,WAAY,MACZT,UAAW,SACXe,WAAY,yBANhB,2DAWA,qBACE5C,MAAO,CACLkC,MAAO,QACPE,SAAU,OACVP,UAAW,SACX0B,WAAY,QALhB,kFAYA,eAAC,OAAD,CACEvD,MAAO,CAAE4B,eAAgB,SAAUF,QAAS,OAAQqB,QAAQ,QAC5DxC,GAAG,YAFL,SAIE,yBAAQW,UAAU,SAASf,QAAQ,YAAnC,kCCvMCqJ,GAnFQ,SAAC,GAAc,EAAZ7C,MAAa,IAI/BvI,EAAWwB,cAEX6J,EAAc5J,aAAY,SAACC,GAAD,OAAWA,EAAM2J,eACzC5C,EAA6B4C,EAA7B5C,QAASC,EAAoB2C,EAApB3C,MAAOC,EAAa0C,EAAb1C,SAQxB,OANAM,qBAAU,WACRjJ,EAASiI,QACR,CAACjI,IAEJ+I,QAAQC,IAAIqC,GAGV,uCACE,gBAACnC,GAAA,EAAD,WACE,6DACA,uBACEjG,KAAK,cACLkG,QAAQ,2CAKZ,qBAAIvH,MAAO,CAAE6B,UAAW,UAAxB,iCACCgF,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,eAACpE,GAAA,EAAD,CAAK1C,MAAO,CAAE0B,QAAS,QAAvB,SACGqF,EAAS0B,KAAI,SAACC,EAASC,GACtB,GACwB,cAAtBD,EAAQgB,WACc,qBAAtBhB,EAAQgB,WACc,aAAtBhB,EAAQgB,UAER,OACE,eAAC/G,GAAA,EAAD,CACE3C,MAAO,CAAEQ,MAAO,OAEhBmJ,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EANN,SAQE,gBAAClB,GAAA,EAAD,CAAgB1H,UAAU,mBAA1B,UACE,eAAC,OAAD,CACElB,MAAO,CACL2B,UAAW,uCAEbpB,GAAE,mBAAcmI,EAAQU,KAJ1B,SAME,eAACR,GAAA,EAAKE,IAAN,CACE9I,MAAO,CACLQ,MAAO,OACPN,OAAQ,QACR8D,aAAc,EACd+E,UAAW,SAEbrI,IAAKgI,EAAQqB,UACb5J,QAAQ,UAIZ,eAACyI,GAAA,EAAKI,KAAN,UACE,eAACJ,GAAA,EAAKK,MAAN,CAAYC,GAAG,MAAf,SACE,kCAASR,EAAQgB,kBArBZf,IANNA,Y,SChDjBqB,GAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMhI,EAAY,EAAZA,MAC3B,OACE,uBAAKhB,UAAU,SAAf,UACE,gCACE,oBACElB,MAAO,CAAEkC,SACThB,UACE+I,GAAS,EACL,cACAA,GAAS,GACT,uBACA,kBAIV,gCACE,oBACEjK,MAAO,CAAEkC,SACThB,UACE+I,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,gCACE,oBACEjK,MAAO,CAAEkC,SACThB,UACE+I,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,gCACE,oBACEjK,MAAO,CAAEkC,SACThB,UACE+I,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,gCACE,oBACEjK,MAAO,CAAEkC,SACThB,UACE+I,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,gCAAOC,GAAQA,QAMvBF,GAAO5F,aAAe,CAClBlC,MAAO,WAOI8H,ICqPAG,GAvTO,SAAC,GAAwB,IAAtBxD,EAAqB,EAArBA,MAAOxD,EAAc,EAAdA,QAAc,EACtB6D,mBAAS,IADa,iCAEhBA,mBAAS,IAFO,oBAE7BoD,GAF6B,aAGdpD,mBAAS,IAHK,oBAG5BqD,GAH4B,aAINrD,mBAAS,IAJH,oBAIrCyC,EAJqC,KAIxBa,EAJwB,KAMtClM,EAAWwB,cAEX2K,EAAiB1K,aAAY,SAACC,GAAD,OAAWA,EAAMyK,kBAC5CzD,EAA4ByD,EAA5BzD,MAAOD,EAAqB0D,EAArB1D,QAAS6B,EAAY6B,EAAZ7B,QAGhBrF,EADKxD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,QAClCD,UAEFmH,EAAsB3K,aAAY,SAACC,GAAD,OAAWA,EAAM0K,uBACxCC,EACfD,EADME,QACNF,EADqC1D,MAGrBjH,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAGN0K,GACAf,EAAQjB,UACRiB,EAAQjB,SAASkD,QACf,SAACC,GAAD,OAAOA,EAAEzB,gBAAkBM,EAAYmB,EAAEzB,kBAQ7C9B,qBAAU,WACRjJ,EAASqI,GAAmBE,EAAMkE,OAAOjM,KAEzC,IAAIkM,EAAM,GAEVpC,EAAQjB,UACNiB,EAAQjB,SAASgB,KAAI,SAACsC,GACpB,IAAMC,EAAQD,EAAM5B,cAChB4B,EAAM5B,cACNT,EAAQgB,UAEZoB,EAAIE,GAAS,KAGjBV,GAAe,kCAAYQ,MAEvBL,IACFL,EAAU,GACVC,EAAW,KAkBTI,GACFrM,EAAS,CAAEG,KAAMuH,OAElB,CAAC1H,EAAUuI,EAAO+B,EAAQU,MAG5B6B,mBAAQ,WAEP,GAAGxB,EAAa,CACd,IAAIyB,EAAI,gBAAOzB,GACff,EAAQjB,UACNiB,EAAQjB,SAASgB,KAAI,SAACsC,EAAOI,GAC3B9H,EAAUoF,KAAI,SAACnF,EAAM8H,GACf9H,EAAK+H,MAAQN,EAAMO,aACrBJ,EAAK5H,EAAK6F,eAAiB7F,EAAKiI,WAKxCjB,GAAe,kCAAYY,SAG5B,CAAC7H,EAAWqF,EAAQjB,WAiCvB,OACE,qCAIGZ,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,uCACE,qBAAI9G,MAAO,CAAE6B,UAAW,UAAxB,SACE,kCAAS6G,EAAQgB,cAEnB,eAAChH,GAAA,EAAD,CAAK1C,MAAO,CAAE0B,QAAS,OAAQE,eAAgB,UAA/C,SACG8G,EAAQjB,SAASgB,KAAI,SAAC+C,EAAMvE,GAC3B,OACE,eAACtE,GAAA,EAAD,CACE3C,MAAO,CAAE+C,QAAS,OAClB4G,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EALN,SAQE,gBAAClB,GAAA,EAAD,CAAM1H,UAAU,mBAAhB,UACGsK,EAAKrC,eACJ,eAACP,GAAA,EAAK6C,KAAN,CACEzL,MAAO,CAAE6B,UAAW,SAAU6J,aAAc,QAC5CxC,GAAG,MAFL,SAIE,wCAAUsC,EAAKrC,cAAf,SAGJ,eAACP,GAAA,EAAKE,IAAN,CACE9I,MAAO,CACLQ,MAAO,OACPN,OAAQ,QACR8D,aAAc,EACd+E,UAAW,SAEbrI,IAAKgI,EAAQqB,UACb5J,QAAQ,QAGV,gBAACyI,GAAA,EAAKI,KAAN,WACGwC,EAAKG,eACJ,eAAC/C,GAAA,EAAK6C,KAAN,UAAYD,EAAKG,gBAEnB,gBAAC/C,GAAA,EAAKK,MAAN,kBAAiBuC,EAAKI,iBAEtB,gBAACjJ,GAAA,EAAD,CACE3C,MAAO,CACLuJ,UAAW,OACX1G,aAAc,MACdrC,MAAO,QAETU,UAAU,mBANZ,UAQE,eAAC0C,GAAA,EAAD,CACE1C,UAAU,eACV3C,KAAK,SACLgD,QAAS,kBAnFf,SAAC0F,GACjB,IAAMiE,EAAI,gBAAQzB,GAEdyB,EAAKjE,GAAS,IAChBiE,EAAKjE,KAAW,EAChBqD,EAAeY,IA8EoBW,CAAUL,EAAKrC,gBAC9BnJ,MAAO,CACLC,gBAAiB,MACjBwC,aAAc,SACdf,QAAS,cACToB,aAAc,QARlB,SAWE,oBACE9C,MAAO,CAAEoC,SAAU,SACnBlB,UAAU,0BAId,gBAAC0H,GAAA,EAAKkD,SAAN,CACE9L,MAAO,CACL8C,aAAc,OACdL,aAAc,SACdf,QAAS,eAJb,wBAOc+H,EAAY+B,EAAKrC,kBAG/B,eAACvF,GAAA,EAAD,CACErF,KAAK,SACL2C,UAAU,eACVK,QAAS,kBArGf,SAAC0F,GACjB,IAAMiE,EAAI,gBAAQzB,GAClByB,EAAKjE,IAAU,EACfqD,EAAeY,GAkGsBa,CAAUP,EAAKrC,gBAC9BnJ,MAAO,CACLC,gBAAiB,MACjBwC,aAAc,SACdf,QAAS,cACToB,aAAc,QARlB,SAWE,oBACE9C,MAAO,CAAEoC,SAAU,SACnBlB,UAAU,4BAKhB,eAAC0C,GAAA,EAAD,CACErC,QAAS,kBA/GN,SAAC8J,EAAKpE,GAC7B9D,EAAQY,KAAR,gBACW4C,EAAMkE,OAAOjM,GADxB,gBACkCyM,EADlC,gBAC6C5B,EAAYxC,KA8GnC+E,CAAiBR,EAAKF,WAAYE,EAAKrC,gBAEzCjI,UAAU,eACV3C,KAAK,SACLyB,MAAO,CACLQ,MAAO,OACPP,gBAAiB,MACjBmC,SAAU,SATd,gCAjFC6E,c,oBCjKVgF,GAAgB,gBAChBC,GAAmB,aACnBC,GAAmB,mBACnBC,GAA6B,6BAC7BC,GAA2B,2BC4KzBC,GAjKI,SAAC,GAAkC,IAAhC3F,EAA+B,EAA/BA,MAAOlI,EAAwB,EAAxBA,SACrB8N,GAD6C,EAAdpJ,QACnBwD,EAAMkE,OAAOjM,IAEzB2M,EAAM9M,EAAS+N,OAASC,OAAOhO,EAAS+N,OAAOE,MAAM,KAAK,IAAM,EAChErB,EAAM5M,EAAS+N,QAAU/N,EAAS+N,OAAOE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAElEtO,EAAWwB,cAGTyD,EADKxD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,QAClCD,UAERgE,qBAAU,WACJkF,GACFnO,ECpBmB,SAACQ,EAAI2M,EAAKF,GAAV,8CAAkB,WAAOjN,EAAUS,GAAjB,mBAAAC,EAAA,sEAClBO,IAAMC,IAAN,wBAA2BV,IADT,gBACjCW,EADiC,EACjCA,KACFoN,EAAKpN,EAAKkI,SAASkD,QAAO,SAACI,GAAD,OAAWA,EAAMO,aAAeD,KAIhEjN,EAAS,CACPG,KAAM0N,GACNzM,QAAS,CACPkJ,QAASnJ,EAAK6J,IACd/H,KAAM9B,EAAKmK,UACXkD,MAAOrN,EAAKwK,UACZ8C,MAAOF,EAAG,GAAGf,cACbzC,cAAewD,EAAG,GAAGxD,cACrBwC,cAAegB,EAAG,GAAGhB,cACrBJ,MACAF,SAIJhN,aAAayO,QAAQ,YAAaC,KAAKC,UAAUnO,IAAWyE,KAAKD,YApBxB,2CAAlB,wDDoBV4J,CAAUV,EAAWhB,EAAKF,MAEpC,CAACjN,EAAUmO,EAAWhB,EAAKF,IAE9B,IAAM6B,EAAwB,SAACtO,GAC7BR,ECF0B,SAACQ,GAAD,OAAQ,SAACR,EAAUS,GAC/CT,EAAS,CACPG,KAAM4N,GACN3M,QAASZ,IAGXP,aAAayO,QAAQ,YAAaC,KAAKC,UAAUnO,IAAWyE,KAAKD,aDJtD8J,CAAevO,KAS1B,OACE,gBAAC+D,GAAA,EAAD,WACE,sBACE3C,MAAO,CACL6B,UAAW,SACXe,WAAY,wBACZN,WAAY,MACZJ,MAAO,WALX,UAQG,IARH,UAWA,uBAAKlC,MAAO,CAAE0B,QAAS,cAAelB,MAAO,QAA7C,UACwB,IAArB6C,EAAUS,OACT,gBAAC,GAAD,iCACqB,eAAC,OAAD,CAAMvD,GAAG,IAAT,wBAGrB,sBAAKP,MAAO,CAAEQ,MAAO,QAArB,SACG6C,EAAUoF,KAAI,SAAC+C,EAAMvE,GACpB,OACE,gBAACvE,GAAA,EAAD,CAEE1C,MAAO,CACL0B,QAAS,OACT4H,cAAe,MACf8D,UAAW,QACXrK,QAAS,OACTjB,WAAY,SACZD,UAAW,UARf,UAWE,eAACc,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,eAAC,OAAD,CAAMrJ,GAAE,mBAAciL,EAAK9C,SAA3B,SACE,eAAC2E,GAAA,EAAD,CACErN,MAAO,CACL+I,UAAW,QACX7I,OAAQ,QACRM,MAAO,SAETE,IAAK8K,EAAKoB,MACVU,OAAK,EACLC,SAAO,QAIb,gBAAC5K,GAAA,EAAD,gBAAQ6I,EAAKD,OACb,gBAAC5I,GAAA,EAAD,CAAKiH,GAAI,EAAT,UACE,eAAClH,GAAA,EAAD,UACE,8BAAK8I,EAAKrC,kBAEZ,eAACzG,GAAA,EAAD,UAAM8I,EAAKG,gBACX,eAACjJ,GAAA,EAAD,UAAM8I,EAAKnK,UAGb,gBAACsB,GAAA,EAAD,CAAKiH,GAAI,EAAT,gBAAgB4B,EAAKqB,SA8BrB,eAAClK,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,eAAChG,GAAA,EAAD,CACErF,KAAK,SACL4B,QAAQ,QACRoB,QAAS,kBAAM2L,EAAsB1B,EAAKH,MAH5C,SAKE,oBAAGnK,UAAU,uBArEZsK,EAAKH,UA8EpB,eAACzC,GAAA,EAAD,CAAM5I,MAAO,CAAEQ,MAAO,MAAON,OAAQ,eAArC,SACE,eAACsN,GAAA,EAAD,CAAW/F,SAAS,QAApB,SACE,gBAAC+F,GAAA,EAAUlM,KAAX,WACE,4CAIA,wCAEG+B,EACEoK,QAAO,SAACC,EAAKlC,GAAN,OAAekC,EAAMlC,EAAKD,IAAMC,EAAKqB,QAAO,GACnDc,QAAQ,oB,UEpIZC,GAnBO,SAAC,GAAkB,IAAhB1J,EAAe,EAAfA,SACvB,OACE,eAAC5D,EAAA,EAAD,UACE,eAACoC,GAAA,EAAD,CAAKxB,UAAU,4BAAf,SACE,eAACyB,GAAA,EAAD,CACE3C,MAAO,CACL0B,QAAS,OACTe,aAAc,SACdjC,MAAO,QAEToJ,GAAI,GANN,SAQG1F,SC2DI2J,GAjEK,SAAC,GAA2B,IAAzBpP,EAAwB,EAAxBA,SAAU0E,EAAc,EAAdA,QAAc,EACnB6D,mBAAS,IADU,oBACtC8G,EADsC,KAC/BC,EAD+B,OAEb/G,mBAAS,IAFI,oBAEtCgH,EAFsC,KAE5BC,EAF4B,KAIvC7P,EAAWwB,cAEXZ,EAAYa,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvC6H,EAA6B7H,EAA7B6H,QAASC,EAAoB9H,EAApB8H,MAAO/H,EAAaC,EAAbD,SAElBmP,EAAWzP,EAAS+N,OAAS/N,EAAS+N,OAAOE,MAAM,KAAK,GAAK,IAEnErF,qBAAU,WACJtI,GACFoE,EAAQY,KAAKmK,KAEd,CAAC/K,EAASpE,EAAUmP,IAOvB,OACE,gBAAC,GAAD,WACE,0CACCpH,GAAS,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IACpCD,GAAW,eAAC,GAAD,IACZ,gBAACsH,GAAA,EAAD,CAAMC,SAVY,SAACC,GACrBA,EAAEC,iBACFlQ,EjBCiB,SAAC0P,EAAOE,GAAR,8CAAqB,WAAO5P,GAAP,mBAAAU,EAAA,sEAEtCV,EAAS,CACPG,KAAMpD,IAGF8D,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYfG,IAAMkP,KAC3B,mBACA,CAAET,QAAOE,YACT/O,GAfoC,gBAY9BM,EAZ8B,EAY9BA,KAMRnB,EAAS,CACPG,KAAMnD,EACNoE,QAASD,IAGXlB,aAAayO,QAAQ,WAAYC,KAAKC,UAAUzN,IAvBV,kDAyBtCnB,EAAS,CACPG,KAAMlD,EACNmE,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UA9BwB,0DAArB,sDiBDR+O,CAAMV,EAAOE,KAQpB,UACE,gBAACG,GAAA,EAAKM,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,4BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,QACLsQ,YAAY,cACZ5E,MAAO6D,EACPgB,SAAU,SAACT,GAAD,OAAON,EAASM,EAAEtM,OAAOkI,aAIvC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,WACLsQ,YAAY,iBACZ5E,MAAO+D,EACPc,SAAU,SAACT,GAAD,OAAOJ,EAAYI,EAAEtM,OAAOkI,aAI1C,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,wBAKF,eAACuC,GAAA,EAAD,CAAKxB,UAAU,OAAf,SACE,gBAACyB,GAAA,EAAD,2BACgB,IACd,eAAC,OAAD,CAAMpC,GAAI2N,EAAQ,6BAAyBA,GAAa,YAAxD,+BCqCKa,GA7FQ,SAAC,GAA2B,IAAzBtQ,EAAwB,EAAxBA,SAAU0E,EAAc,EAAdA,QAAc,EACxB6D,mBAAS,IADe,oBACzC3F,EADyC,KACnC2N,EADmC,OAEtBhI,mBAAS,IAFa,oBAEzC8G,EAFyC,KAElCC,EAFkC,OAGhB/G,mBAAS,IAHO,oBAGzCgH,EAHyC,KAG/BC,EAH+B,OAIFjH,mBAAS,IAJP,oBAIzCiI,EAJyC,KAIxBC,EAJwB,OAKlBlI,mBAAS,MALS,oBAKzCvH,EALyC,KAKhC0P,EALgC,KAO1C/Q,EAAWwB,cAEXwP,EAAevP,aAAY,SAACC,GAAD,OAAWA,EAAMsP,gBAC1CvI,EAA6BuI,EAA7BvI,QAASC,EAAoBsI,EAApBtI,MAAO/H,EAAaqQ,EAAbrQ,SAElBmP,EAAWzP,EAAS+N,OAAS/N,EAAS+N,OAAOE,MAAM,KAAK,GAAK,IAEnErF,qBAAU,WACJtI,GACFoE,EAAQY,KAAKmK,KAEd,CAAC/K,EAASpE,EAAUmP,IAWvB,OACE,gBAAC,GAAD,WACE,0CACCzO,GAAW,eAAC,GAAD,CAASU,QAAQ,SAAjB,SAA2BV,IACtCqH,GAAS,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IACpCD,GAAW,eAAC,GAAD,IACZ,gBAACsH,GAAA,EAAD,CAAMC,SAfY,SAACC,GACrBA,EAAEC,iBACEN,IAAaiB,EACfE,EAAW,0BAEX/Q,ElB0CkB,SAACiD,EAAMyM,EAAOE,GAAd,8CAA2B,WAAO5P,GAAP,mBAAAU,EAAA,sEAE/CV,EAAS,CACPG,KAAMhD,IAGF0D,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxBG,IAAMkP,KAC3B,aACA,CAAElN,OAAMyM,QAAOE,YACf/O,GAf6C,gBAYvCM,EAZuC,EAYvCA,KAMRnB,EAAS,CACPG,KAAM/C,EACNgE,QAASD,IAGXnB,EAAS,CACPG,KAAMnD,EACNoE,QAASD,IAGXlB,aAAayO,QAAQ,WAAYC,KAAKC,UAAUzN,IA5BD,kDA8B/CnB,EAAS,CACPG,KAAM9C,EACN+D,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAnCiC,0DAA3B,sDkB1CT4P,CAAShO,EAAMyM,EAAOE,KAU/B,UACE,gBAACG,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAO5I,EACPyN,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,4BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,QACLsQ,YAAY,cACZ5E,MAAO6D,EACPgB,SAAU,SAACT,GAAD,OAAON,EAASM,EAAEtM,OAAOkI,aAIvC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,WACLsQ,YAAY,iBACZ5E,MAAO+D,EACPc,SAAU,SAACT,GAAD,OAAOJ,EAAYI,EAAEtM,OAAOkI,aAI1C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,kBAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,+BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,WACLsQ,YAAY,mBACZ5E,MAAOgF,EACPH,SAAU,SAACT,GAAD,OAAOa,EAAmBb,EAAEtM,OAAOkI,aAIjD,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,yBAKF,eAACuC,GAAA,EAAD,CAAKxB,UAAU,OAAf,SACE,gBAACyB,GAAA,EAAD,8BACmB,IACjB,eAAC,OAAD,CAAMpC,GAAI2N,EAAQ,0BAAsBA,GAAa,SAArD,4B,UC4EKoB,GA/JO,SAAC,GAA0B,EAAxB7Q,SAAyB,IAAf0E,EAAc,EAAdA,QAAc,EACvB6D,mBAAS,IADc,oBACxC3F,EADwC,KAClC2N,EADkC,OAErBhI,mBAAS,IAFY,oBAExC8G,EAFwC,KAEjCC,EAFiC,OAGf/G,mBAAS,IAHM,oBAGxCgH,EAHwC,KAG9BC,EAH8B,OAIDjH,mBAAS,IAJR,oBAIxCiI,EAJwC,KAIvBC,EAJuB,OAKjBlI,mBAAS,MALQ,oBAKxCvH,EALwC,KAK/B0P,EAL+B,KAOzC/Q,EAAWwB,cAEX2P,EAAc1P,aAAY,SAACC,GAAD,OAAWA,EAAMyP,eACzC1I,EAAyB0I,EAAzB1I,QAASC,EAAgByI,EAAhBzI,MAAO0I,EAASD,EAATC,KAGhBzQ,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAGA2L,EADkB7K,aAAY,SAACC,GAAD,OAAWA,EAAM2P,qBAC/C/E,QAEFgF,EAAc7P,aAAY,SAACC,GAAD,OAAWA,EAAM4P,eAChCC,EAA8CD,EAAvD7I,QAA+B+I,EAAwBF,EAA/B5I,MAAoB+I,EAAWH,EAAXG,OAEpDxI,qBAAU,WACHtI,EAGEyQ,GAASA,EAAKnO,OAAQqJ,GAKzBsE,EAAQQ,EAAKnO,MACb0M,EAASyB,EAAK1B,SALd1P,EAAS,CAAEG,KAAMtC,IACjBmC,EAASO,GAAe,YACxBP,ECqJoB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAE9BV,EAAS,CACPG,KAAMf,KAHsB,EAQ1BqB,IADWE,EAPe,EAO5BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZR,SAgBPC,IAAMC,IAAN,uBAAkCL,GAhB3B,gBAgBtBM,EAhBsB,EAgBtBA,KAERnB,EAAS,CACPG,KAAMd,GACN+B,QAASD,IApBmB,kDA2Bd,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMb,GACN8B,QAASC,IAhCmB,0DAAN,0DD1JtB0D,EAAQY,KAAK,YAWd,CAAC3F,EAAU+E,EAASpE,EAAUyQ,EAAM9E,IAWvC,OACE,gBAAChI,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKiH,GAAI,EAAT,UACE,+CACCnK,GAAW,eAAC,GAAD,CAASU,QAAQ,SAAjB,SAA2BV,IAEtCiL,GAAW,eAAC,GAAD,CAASvK,QAAQ,UAAjB,6BACX0G,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,gBAACqH,GAAA,EAAD,CAAMC,SArBQ,SAACC,GACrBA,EAAEC,iBACEN,IAAaiB,EACfE,EAAW,0BAEX/Q,EnBsG2B,SAACoR,GAAD,8CAAU,WAAOpR,EAAUS,GAAjB,yBAAAC,EAAA,sEAEvCV,EAAS,CACPG,KAAMzC,IAH+B,EAQnC+C,IADWE,EAPwB,EAOrCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbC,SAiBhBC,IAAMyQ,IAAN,qBAAgCN,EAAMvQ,GAjBtB,gBAiB/BM,EAjB+B,EAiB/BA,KAERnB,EAAS,CACPG,KAAMxC,EACNyD,QAASD,IAEXnB,EAAS,CACPG,KAAMnD,EACNoE,QAASD,IAEXlB,aAAayO,QAAQ,WAAYC,KAAKC,UAAUzN,IA3BT,kDAiCvB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMvC,EACNwD,QAASC,IAtC4B,0DAAV,wDmBtGlBsQ,CAAkB,CAAEnR,GAAI4Q,EAAKpG,IAAK/H,OAAMyM,QAAOE,eAgBpD,UACE,gBAACG,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAO5I,EACPyN,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,4BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,QACLsQ,YAAY,cACZ5E,MAAO6D,EACPgB,SAAU,SAACT,GAAD,OAAON,EAASM,EAAEtM,OAAOkI,aAIvC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,WACLsQ,YAAY,iBACZ5E,MAAO+D,EACPc,SAAU,SAACT,GAAD,OAAOJ,EAAYI,EAAEtM,OAAOkI,aAI1C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,kBAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,+BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,WACLsQ,YAAY,mBACZ5E,MAAOgF,EACPH,SAAU,SAACT,GAAD,OAAOa,EAAmBb,EAAEtM,OAAOkI,aAIjD,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,0BAMN,gBAACwC,GAAA,EAAD,CAAKiH,GAAI,EAAT,UACE,4CACC+F,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAASzP,QAAQ,SAAjB,SAA2ByP,IAE3B,gBAACI,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,uCACA,4CACA,6BAGJ,iCACG2O,EAAOpH,KAAI,SAAC4H,GAAD,OACV,gCACE,8BAAKA,EAAMjH,MACX,8BAAKiH,EAAMC,UAAUC,UAAU,EAAG,MAClC,8BAAKF,EAAMG,aACX,8BACGH,EAAMI,OACLJ,EAAMK,OAAOH,UAAU,EAAG,IAE1B,oBAAGrP,UAAU,eAAelB,MAAO,CAAEkC,MAAO,WAGhD,8BACGmO,EAAMM,YACLN,EAAMO,YAAYL,UAAU,EAAG,IAE/B,oBAAGrP,UAAU,eAAelB,MAAO,CAAEkC,MAAO,WAGhD,8BACE,eAAC,gBAAD,CAAe3B,GAAE,iBAAY8P,EAAMjH,KAAnC,SACE,eAACxF,GAAA,EAAD,CAAQ1C,UAAU,SAASf,QAAQ,QAAnC,2BApBGkQ,EAAMjH,oBEpFhByH,GA9CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,gBAACjQ,EAAA,EAAD,CAAKE,UAAU,8BAAf,UACE,eAACF,EAAA,EAAIM,KAAL,UACGwP,EACC,eAAC,gBAAD,CAAevQ,GAAG,SAAlB,SACE,eAACS,EAAA,EAAIQ,KAAL,wBAGF,eAACR,EAAA,EAAIQ,KAAL,CAAUqC,UAAQ,EAAlB,uBAIJ,eAAC7C,EAAA,EAAIM,KAAL,UACGyP,EACC,eAAC,gBAAD,CAAexQ,GAAG,YAAlB,SACE,eAACS,EAAA,EAAIQ,KAAL,iCAGF,eAACR,EAAA,EAAIQ,KAAL,CAAUqC,UAAQ,EAAlB,gCAIJ,eAAC7C,EAAA,EAAIM,KAAL,UACG0P,EACC,eAAC,gBAAD,CAAezQ,GAAG,WAAlB,SACE,eAACS,EAAA,EAAIQ,KAAL,wBAGF,eAACR,EAAA,EAAIQ,KAAL,CAAUqC,UAAQ,EAAlB,uBAIJ,eAAC7C,EAAA,EAAIM,KAAL,UACG2P,EACC,eAAC,gBAAD,CAAe1Q,GAAG,cAAlB,SACE,eAACS,EAAA,EAAIQ,KAAL,4BAGF,eAACR,EAAA,EAAIQ,KAAL,CAAUqC,UAAQ,EAAlB,+BCyCKqN,GA7EQ,SAAC,GAAiB,IAAf/N,EAAc,EAAdA,QAClBG,EAAOzD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,QAClC6N,EAAoB7N,EAApB6N,gBAERhK,QAAQC,IAAI9D,GAJ0B,MAKR0D,mBAASmK,EAAgBC,SALjB,oBAK/BA,EAL+B,KAKtBC,EALsB,OAMdrK,mBAASmK,EAAgBG,MANX,oBAM/BA,EAN+B,KAMzBC,EANyB,OAOFvK,mBAASmK,EAAgBK,YAPvB,oBAO/BA,EAP+B,KAOnBC,EAPmB,OAQRzK,mBAASmK,EAAgBO,SARjB,oBAQ/BA,EAR+B,KAQtBC,EARsB,KAUhCvT,EAAWwB,cAQjB,OACE,gBAAC,GAAD,WAGE,eAAC,GAAD,CAAekR,OAAK,EAACC,OAAK,IAC1B,mDACA,gBAAC5C,GAAA,EAAD,CAAMC,SAZY,SAACC,GPqBU,IAAC9O,EOpBhC8O,EAAEC,iBACFlQ,GPmBgCmB,EOnBH,CAAE6R,UAASE,OAAME,aAAYE,WPmBjB,SAACtT,GAC5CA,EAAS,CACPG,KAAM6N,GACN5M,QAASD,IAGXlB,aAAayO,QAAQ,kBAAmBC,KAAKC,UAAUzN,OOxBrD4D,EAAQY,KAAK,aASX,UACE,gBAACoK,GAAA,EAAKM,MAAN,CAAYC,UAAU,UAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,sBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,gBACZ5E,MAAOmH,EACPQ,UAAQ,EACR9C,SAAU,SAACT,GAAD,OAAOgD,EAAWhD,EAAEtM,OAAOkI,aAIzC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAOqH,EACPM,UAAQ,EACR9C,SAAU,SAACT,GAAD,OAAOkD,EAAQlD,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,aAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,0BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,oBACZ5E,MAAOuH,EACPI,UAAQ,EACR9C,SAAU,SAACT,GAAD,OAAOoD,EAAcpD,EAAEtM,OAAOkI,aAI5C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,UAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,sBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,gBACZ5E,MAAOyH,EACPE,UAAQ,EACR9C,SAAU,SAACT,GAAD,OAAOsD,EAAWtD,EAAEtM,OAAOkI,aAIzC,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,6BCfO0R,GAtDO,SAAC,GAAiB,IAAf1O,EAAc,EAAdA,QACVtD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,QAClC6N,gBAEaC,SACnBjO,EAAQY,KAAK,aALsB,MAQKiD,mBAAS,UARd,oBAQ9B8K,EAR8B,KAQfC,EARe,KAU/B3T,EAAWwB,cAQjB,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAekR,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,iDACA,gBAAC7C,GAAA,EAAD,CAAMC,SAVY,SAACC,GR8BQ,IAAC9O,EQ7B9B8O,EAAEC,iBACFlQ,GR4B8BmB,EQ5BHuS,ER4BY,SAAC1T,GAC1CA,EAAS,CACPG,KAAM8N,GACN7M,QAASD,IAGXlB,aAAayO,QAAQ,gBAAiBC,KAAKC,UAAUzN,OQjCnD4D,EAAQY,KAAK,gBAOX,UACE,gBAACoK,GAAA,EAAKM,MAAN,WACE,eAACN,GAAA,EAAKQ,MAAN,CAAYzF,GAAG,SAAf,2BACA,eAACvG,GAAA,EAAD,UACE,eAACwL,GAAA,EAAK6D,MAAN,CACEzT,KAAK,QACL0T,MAAM,OACNrT,GAAG,SACHyC,KAAK,gBACL4I,MAAM,SACNiI,SAAO,EACPpD,SAAU,SAACT,GAAD,OAAO0D,EAAiB1D,EAAEtM,OAAOkI,eAajD,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,6BCqHOgS,GAhKU,SAAC,GAAiB,IAAfhP,EAAc,EAAdA,QACpB/E,EAAWwB,cAEX0D,EAAOzD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,QAErCA,EAAK6N,gBAAgBC,QAEd9N,EAAKwO,eACf3O,EAAQY,KAAK,YAFbZ,EAAQY,KAAK,aAKf,IAAMqO,EAAc,SAACC,GACnB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAK1E,QAAQ,IAG/CrK,EAAKkP,WAAaJ,EAChB9O,EAAKD,UAAUoK,QAAO,SAACC,EAAKlC,GAAN,OAAekC,EAAMlC,EAAKqB,MAAQrB,EAAKD,MAAK,IAEpEjI,EAAKmP,cAAgBL,EAAY9O,EAAKkP,WAAa,IAAM,EAAI,KAC7DlP,EAAKoP,SAAWN,EAAY3F,QAAQ,IAAOnJ,EAAKkP,YAAY7E,QAAQ,KACpErK,EAAKkN,YACH/D,OAAOnJ,EAAKkP,YACZ/F,OAAOnJ,EAAKmP,eACZhG,OAAOnJ,EAAKoP,WACZ/E,QAAQ,GAEV,IAAMgF,EAAc9S,aAAY,SAACC,GAAD,OAAWA,EAAM6S,eACzCtC,EAA0BsC,EAA1BtC,MAAO3F,EAAmBiI,EAAnBjI,QAAS5D,EAAU6L,EAAV7L,MAExBO,qBAAU,WACJqD,IACFvH,EAAQY,KAAR,iBAAuBsM,EAAMjH,MAC7BhL,EAAS,CAAEG,KAAM1C,IACjBuC,EAAS,CAAEG,KAAMvB,OAGlB,CAACmG,EAASuH,IAEbvD,QAAQC,IAAI9D,GAgBZ,OACE,uCACE,eAAC,GAAD,CAAewN,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAACvO,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,gBAAC4D,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,UACE,gBAACqN,GAAA,EAAUlM,KAAX,WACE,2CACA,+BACE,+CACCgC,EAAK6N,gBAAgBC,QAFxB,KAEmC9N,EAAK6N,gBAAgBG,KAAM,IAC3DhO,EAAK6N,gBAAgBK,WAHxB,IAGqC,IAClClO,EAAK6N,gBAAgBO,cAI1B,gBAAClE,GAAA,EAAUlM,KAAX,WACE,iDACA,+CACCgC,EAAKwO,iBAGR,gBAACtE,GAAA,EAAUlM,KAAX,WACE,8CAC2B,IAA1BgC,EAAKD,UAAUS,OACd,eAAC,GAAD,iCAEA,eAAC0J,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,SACGmD,EAAKD,UAAUoF,KAAI,SAAC+C,EAAMvE,GAAP,OAClB,eAACuG,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,eAACyD,GAAA,EAAD,CACE3M,IAAK8K,EAAKoB,MACVhM,IAAK4K,EAAKnK,KACViM,OAAK,EACLC,SAAO,MAGX,eAAC5K,GAAA,EAAD,UACE,eAAC,OAAD,CAAMpC,GAAE,mBAAciL,EAAK9C,SAA3B,SACG8C,EAAKnK,SAGV,gBAACsB,GAAA,EAAD,CAAKiH,GAAI,EAAT,UACG4B,EAAKD,IADR,OACiBC,EAAKqB,MADtB,OACiCrB,EAAKD,IAAMC,EAAKqB,aAhBhC5F,gBA0BjC,eAACtE,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,eAAChB,GAAA,EAAD,UACE,gBAAC4E,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,UACE,eAACqN,GAAA,EAAUlM,KAAX,UACE,kDAEF,eAACkM,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOW,EAAKkP,mBAGhB,eAAChF,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOW,EAAKmP,sBAGhB,eAACjF,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOW,EAAKoP,iBAGhB,eAAClF,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOW,EAAKkN,mBAGhB,eAAChD,GAAA,EAAUlM,KAAX,UACGwF,GAAS,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,MAEvC,eAAC0G,GAAA,EAAUlM,KAAX,UACE,eAACsC,GAAA,EAAD,CACErF,KAAK,SACL2C,UAAU,YACV2C,SAA6B,IAAnBP,EAAKD,UACf9B,QA3GU,WACxBnD,EJ3BuB,SAACiS,GAAD,8CAAW,WAAOjS,EAAUS,GAAjB,yBAAAC,EAAA,sEAElCV,EAAS,CACPG,KAAM1B,IAH0B,EAQ9BgC,IADWE,EAPmB,EAOhCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbJ,SAiBXC,IAAMkP,KAAN,cAA0B8B,EAAOpR,GAjBtB,gBAiB1BM,EAjB0B,EAiB1BA,KAERnB,EAAS,CACPG,KAAMzB,EACN0C,QAASD,IAEXnB,EAAS,CACPG,KAAM2N,GACN1M,QAASD,IAEXlB,aAAaC,WAAW,aA3BU,kDAiClB,kCAJVmB,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMxB,EACNyC,QAASC,IAtCuB,0DAAX,wDI4BrBmT,CAAY,CACVC,WAAYvP,EAAKD,UACjB8N,gBAAiB7N,EAAK6N,gBACtBW,cAAexO,EAAKwO,cACpBU,WAAYlP,EAAKkP,WACjBC,cAAenP,EAAKmP,cACpBC,SAAUpP,EAAKoP,SACflC,WAAYlN,EAAKkN,eA8FT,yCC+EDsC,GAxNK,SAAC,GAAwB,IAmBpBT,EAnBF1L,EAAqB,EAArBA,MAAOxD,EAAc,EAAdA,QACtB4P,EAAUpM,EAAMkE,OAAOjM,GAEvBR,EAAWwB,cAEXoT,EAAenT,aAAY,SAACC,GAAD,OAAWA,EAAMkT,gBAC1C3C,EAA0B2C,EAA1B3C,MAAOxJ,EAAmBmM,EAAnBnM,QAASC,EAAUkM,EAAVlM,MAElBmM,EAAWpT,aAAY,SAACC,GAAD,OAAWA,EAAMmT,YAC7BC,EAAoCD,EAA7CpM,QAA8BsM,EAAeF,EAAxBvI,QAEvB0I,EAAevT,aAAY,SAACC,GAAD,OAAWA,EAAMsT,gBACjCC,EAA4CD,EAArDvM,QAAkCyM,EAAmBF,EAA5B1I,QAGzB3L,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAER,IAAK8H,EAAS,CAMZwJ,EAAMmC,YAJeH,EAKnBhC,EAAMwC,WAAWpF,QAAO,SAACC,EAAKlC,GAAN,OAAekC,EAAMlC,EAAKqB,MAAQrB,EAAKD,MAAK,IAJ5D+G,KAAKC,MAAY,IAANF,GAAa,KAAK1E,QAAQ,IAQjDtG,qBAAU,WLuBmB,IAACzI,EKtBvBG,GACHoE,EAAQY,KAAK,YAcVsM,GAAS8C,GAAcG,GAAkBjD,EAAMjH,MAAQ2J,KAE1D3U,EAAS,CAAEG,KAAMhB,KACjBa,EAAS,CAAEG,KAAML,KACjBE,GLG0BQ,EKHDmU,ELGA,uCAAQ,WAAO3U,EAAUS,GAAjB,yBAAAC,EAAA,sEAEnCV,EAAS,CACPG,KAAMtB,IAH2B,EAQ/B4B,IADWE,EAPoB,EAOjCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZH,SAgBZC,IAAMC,IAAN,sBAAyBV,GAAMK,GAhBnB,gBAgB3BM,EAhB2B,EAgB3BA,KAERnB,EAAS,CACPG,KAAMrB,EACNsC,QAASD,IApBwB,kDA2BnB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMpB,EACNqC,QAASC,IAhCwB,0DAAR,6DKD1B,CAACrB,EAAU2U,EAAS1C,EAAOlN,EAASpE,EAAUoU,EAAYG,IAU7D,OAAOzM,EACL,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,uCACE,yCAAWuJ,EAAMjH,OACjB,gBAAC1G,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,gBAAC4D,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,UACE,gBAACqN,GAAA,EAAUlM,KAAX,WACE,2CACA,+BACE,6CADF,IAC2B+O,EAAMb,KAAKnO,QAEtC,+BACE,8CAAyB,IACzB,oBAAG3C,KAAI,iBAAY2R,EAAMb,KAAK1B,OAA9B,SAAwCuC,EAAMb,KAAK1B,WAErD,+BACE,+CACCuC,EAAMc,gBAAgBC,QAFzB,KAEoCf,EAAMc,gBAAgBG,KAAM,IAC7DjB,EAAMc,gBAAgBK,WAHzB,IAGsC,IACnCnB,EAAMc,gBAAgBO,WAExBrB,EAAMM,YACL,gBAAC,GAAD,CAASxQ,QAAQ,UAAjB,0BACgBkQ,EAAMO,eAGtB,eAAC,GAAD,CAASzQ,QAAQ,SAAjB,8BAIJ,gBAACqN,GAAA,EAAUlM,KAAX,WACE,iDACA,+BACE,+CACC+O,EAAMyB,iBAERzB,EAAMI,OACL,gBAAC,GAAD,CAAStQ,QAAQ,UAAjB,qBAAoCkQ,EAAMK,UAE1C,eAAC,GAAD,CAASvQ,QAAQ,SAAjB,yBAIJ,gBAACqN,GAAA,EAAUlM,KAAX,WACE,8CAC6B,IAA5B+O,EAAMwC,WAAW/O,OAChB,eAAC,GAAD,6BAEA,eAAC0J,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,SACGkQ,EAAMwC,WAAWpK,KAAI,SAAC+C,EAAMvE,GAAP,OACpB,eAACuG,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,eAACyD,GAAA,EAAD,CACE3M,IAAK8K,EAAKoB,MACVhM,IAAK4K,EAAKnK,KACViM,OAAK,EACLC,SAAO,MAGX,eAAC5K,GAAA,EAAD,UACE,eAAC,OAAD,CAAMpC,GAAE,mBAAciL,EAAK9C,SAA3B,SACG8C,EAAKnK,SAGV,gBAACsB,GAAA,EAAD,CAAKiH,GAAI,EAAT,UACG4B,EAAKD,IADR,UACoBC,EAAKqB,MADzB,UACuCrB,EAAKD,IAAMC,EAAKqB,aAhBtC5F,gBA0BjC,eAACtE,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,eAAChB,GAAA,EAAD,UACE,gBAAC4E,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,UACE,eAACqN,GAAA,EAAUlM,KAAX,UACE,kDAEF,eAACkM,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,kBAAU0N,EAAMmC,mBAGpB,eAAChF,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,kBAAU0N,EAAMoC,sBAGpB,eAACjF,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,kBAAU0N,EAAMqC,iBAGpB,eAAClF,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,kBAAU0N,EAAMG,mBAcrB6C,GAAkB,eAAC,GAAD,IAChBtU,GACCA,EAAS0C,SACT4O,EAAMI,SACLJ,EAAMM,aACL,eAACnD,GAAA,EAAUlM,KAAX,UACE,eAACsC,GAAA,EAAD,CACErF,KAAK,SACL2C,UAAU,gBACVK,QAtIG,WACrBnD,ELyEwB,SAACiS,GAAD,8CAAW,WAAOjS,EAAUS,GAAjB,yBAAAC,EAAA,sEAEnCV,EAAS,CACPG,KAAMR,KAH2B,EAQ/Bc,IADWE,EAPoB,EAOjCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZH,SAgBZC,IAAMyQ,IAAN,sBACNO,EAAMjH,IADA,YAErB,GACAnK,GAnBiC,gBAgB3BM,EAhB2B,EAgB3BA,KAMRnB,EAAS,CACPG,KAAMP,GACNwB,QAASD,IAxBwB,kDA+BnB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMN,GACNuB,QAASC,IApCwB,0DAAX,wDKzEf8T,CAAalD,KAkIN,iCASP6C,GAAc,eAAC,GAAD,IACdnU,GACGA,EAAS0C,UACR4O,EAAMI,QACP,eAACjD,GAAA,EAAUlM,KAAX,UACI,gBAACsC,GAAA,EAAD,CACErF,KAAK,SACL2C,UAAU,gBACVK,QAxJG,WACtBnD,ELmCqB,SAACiS,GAAD,8CAAW,WAAOjS,EAAUS,GAAjB,yBAAAC,EAAA,sEAE/BV,EAAS,CACPG,KAAMnB,IAHuB,EAQ3ByB,IADWE,EAPgB,EAO7BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbP,SAiBRC,IAAMyQ,IAAN,sBACNO,EAAMjH,IADA,QAErB,GACAnK,GApB6B,gBAiBvBM,EAjBuB,EAiBvBA,KAMRnB,EAAS,CACPG,KAAMlB,EACNmC,QAASD,IAzBoB,kDAgCf,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMjB,GACNkC,QAASC,IArCoB,0DAAX,wDKnCZ+T,CAASnD,KAoJD,gBAIKA,EAAMG,8BCnIhBiD,GAlFQ,SAAC,GAAiB,IAAftQ,EAAc,EAAdA,QAClB/E,EAAWwB,cAEX8T,EAAW7T,aAAY,SAACC,GAAD,OAAWA,EAAM4T,YACtC7M,EAA0B6M,EAA1B7M,QAASC,EAAiB4M,EAAjB5M,MAAO6M,EAAUD,EAAVC,MAGhB5U,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAGS6U,EADE/T,aAAY,SAACC,GAAD,OAAWA,EAAM+T,cACxCnJ,QAERrD,qBAAU,WACJtI,GAAYA,EAAS0C,QACvBrD,E1B8KmB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAE3BV,EAAS,CACPG,KAAMrC,IAHmB,EAQvB2C,IADWE,EAPY,EAOzBC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZX,SAgBJC,IAAMC,IAAN,aAAwBL,GAhBpB,gBAgBnBM,EAhBmB,EAgBnBA,KAERnB,EAAS,CACPG,KAAMpC,EACNqD,QAASD,IApBgB,kDA2BX,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMnC,EACNoD,QAASC,IAhCgB,0DAAN,yD0B5KnB0D,EAAQY,KAAK,YAEd,CAAC3F,EAAU+E,EAASyQ,EAAe7U,IAEtC,IAAM+U,EAAgB,SAAClV,GACjBoE,OAAO+Q,QAAQ,iBACjB3V,E1B2MoB,SAACQ,GAAD,8CAAQ,WAAOR,EAAUS,GAAjB,qBAAAC,EAAA,sEAE9BV,EAAS,CACPG,KAAMjC,IAHsB,EAQ1BuC,IADWE,EAPe,EAO5BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZR,SAgBxBC,IAAM2U,OAAN,qBAA2BpV,GAAMK,GAhBT,OAkB9Bb,EAAS,CAAEG,KAAMhC,IAlBa,gDAwBd,kCAJVkD,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM/B,EACNgD,QAASC,IA7BmB,yDAAR,wD0B3MXwU,CAAWrV,KAIxB,OACE,uCACE,wCACCiI,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,gBAACkJ,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,wCACA,6BAGJ,iCACGyS,EAAMlL,KAAI,SAAC+G,GAAD,OACT,gCACE,8BAAKA,EAAKpG,MACV,8BAAKoG,EAAKnO,OACV,8BACE,oBAAG3C,KAAI,iBAAY8Q,EAAK1B,OAAxB,SAAkC0B,EAAK1B,UAEzC,8BACG0B,EAAK/N,QACJ,oBAAGP,UAAU,eAAelB,MAAO,CAAEkC,MAAO,WAE5C,oBAAGhB,UAAU,eAAelB,MAAO,CAAEkC,MAAO,WAGhD,gCACE,eAAC,gBAAD,CAAe3B,GAAE,sBAAiBiP,EAAKpG,IAAtB,SAAjB,SACE,eAACxF,GAAA,EAAD,CAAQzD,QAAQ,QAAQe,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAAC0C,GAAA,EAAD,CACEzD,QAAQ,SACRe,UAAU,SACVK,QAAS,kBAAMuS,EAActE,EAAKpG,MAHpC,SAKE,oBAAGlI,UAAU,wBAxBVsO,EAAKpG,iBCiDb8K,GA7FQ,SAAC,GAAwB,IAAtBvN,EAAqB,EAArBA,MAAOxD,EAAc,EAAdA,QACzBgR,EAASxN,EAAMkE,OAAOjM,GADiB,EAGrBoI,mBAAS,IAHY,oBAGtC3F,EAHsC,KAGhC2N,EAHgC,OAInBhI,mBAAS,IAJU,oBAItC8G,EAJsC,KAI/BC,EAJ+B,OAKf/G,oBAAS,GALM,oBAKtCvF,EALsC,KAK7B2S,EAL6B,KAOvChW,EAAWwB,cAEX2P,EAAc1P,aAAY,SAACC,GAAD,OAAWA,EAAMyP,eACzC1I,EAAyB0I,EAAzB1I,QAASC,EAAgByI,EAAhBzI,MAAO0I,EAASD,EAATC,KAElB6E,EAAaxU,aAAY,SAACC,GAAD,OAAWA,EAAMuU,cAErCC,EAGPD,EAHFxN,QACO0N,EAELF,EAFFvN,MACS0N,EACPH,EADF3J,QAGFrD,qBAAU,WACJmN,GACFpW,EAAS,CAAEG,KAAM3B,IACjBuG,EAAQY,KAAK,oBAERyL,EAAKnO,MAAQmO,EAAKpG,MAAQ+K,GAG7BnF,EAAQQ,EAAKnO,MACb0M,EAASyB,EAAK1B,OACdsG,EAAW5E,EAAK/N,UAJhBrD,EAASO,GAAewV,MAO3B,CAAC/V,EAAU+E,EAASgR,EAAQ3E,EAAMgF,IAOrC,OACE,uCACE,eAAC,OAAD,CAAMjU,GAAG,kBAAkBW,UAAU,qBAArC,qBAGA,gBAAC,GAAD,WACE,4CACCoT,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASpU,QAAQ,SAAjB,SAA2BoU,IAC1C1N,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,gBAACqH,GAAA,EAAD,CAAMC,SAnBQ,SAACC,GACrBA,EAAEC,iBACFlQ,E3B6NsB,SAACoR,GAAD,8CAAU,WAAOpR,EAAUS,GAAjB,yBAAAC,EAAA,sEAEhCV,EAAS,CACPG,KAAM9B,IAHwB,EAQ5BoC,IADWE,EAPiB,EAO9BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbN,SAiBTC,IAAMyQ,IAAN,qBAAwBN,EAAKpG,KAAOoG,EAAMvQ,GAjBjC,gBAiBxBM,EAjBwB,EAiBxBA,KAERnB,EAAS,CAAEG,KAAM7B,IAEjB0B,EAAS,CAAEG,KAAM5C,EAAsB6D,QAASD,IAEhDnB,EAAS,CAAEG,KAAM1C,IAvBe,kDA6BhB,kCAJV4D,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM5B,EACN6C,QAASC,IAlCqB,0DAAV,wD2B7NbgV,CAAW,CAAErL,IAAK+K,EAAQ9S,OAAMyM,QAAOrM,cAiB1C,UACE,gBAAC0M,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAO5I,EACPyN,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,4BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,QACLsQ,YAAY,cACZ5E,MAAO6D,EACPgB,SAAU,SAACT,GAAD,OAAON,EAASM,EAAEtM,OAAOkI,aAIvC,eAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,UAAtB,SACE,eAACP,GAAA,EAAK6D,MAAN,CACEzT,KAAK,WACL0T,MAAM,WACNC,QAASzQ,EACTqN,SAAU,SAACT,GAAD,OAAO+F,EAAW/F,EAAEtM,OAAOmQ,cAIzC,eAACtO,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,8B,mBCjEGuU,GAxBE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApCnT,eAAoC,aAAnB6E,eAAmB,MAAT,GAAS,EACnE,OACEqO,EAAQ,GACN,eAACE,GAAA,EAAD,UACG,aAAIC,MAAMH,GAAOI,QAAQtM,KAAI,SAACmC,GAAD,OAC5B,eAAC,gBAAD,CAEErK,GACGkB,EAAD,6BAKwBmJ,EAAI,GAJxBtE,EAAO,kBACMA,EADN,iBACsBsE,EAAI,GAD1B,gBAEKA,EAAI,GANxB,SAWE,eAACiK,GAAA,EAAWvT,KAAZ,CAAiB0T,OAAQpK,EAAI,IAAMgK,EAAnC,SAA0ChK,EAAI,KAVzCA,EAAI,SCiJNqK,GA7IW,SAAC,GAAwB,IAAtB9R,EAAqB,EAArBA,QACrBoD,EAD0C,EAAZI,MACXkE,OAAOtE,YAAc,EAExCnI,EAAWwB,cAEX6J,EAAc5J,aAAY,SAACC,GAAD,OAAWA,EAAM2J,eACzC5C,EAA0C4C,EAA1C5C,QAASC,EAAiC2C,EAAjC3C,MAAOC,EAA0B0C,EAA1B1C,SAAU6N,EAAgBnL,EAAhBmL,KAAMD,EAAUlL,EAAVkL,MAElCO,EAAgBrV,aAAY,SAACC,GAAD,OAAWA,EAAMoV,iBAExCC,EAGPD,EAHFrO,QACOuO,EAELF,EAFFpO,MACS8M,EACPsB,EADFxK,QAGI2K,EAAgBxV,aAAY,SAACC,GAAD,OAAWA,EAAMuV,iBAExCC,EAIPD,EAJFxO,QACO0O,EAGLF,EAHFvO,MACS0O,EAEPH,EAFF3K,QACS+K,EACPJ,EADF3M,QAIM3J,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAERsI,qBAAU,WACRjJ,EAAS,CAAEG,KAAM+G,KAEZvG,GAAaA,EAAS0C,SACzB0B,EAAQY,KAAK,UAGXyR,EACFrS,EAAQY,KAAR,yBAA+B0R,EAAerM,IAA9C,UAEAhL,EAASiI,GAAa,GAAIE,MAE3B,CACDnI,EACA+E,EACApE,EACA6U,EACA4B,EACAC,EACAlP,IAGF,IAAMuN,EAAgB,SAAClV,GACjBoE,OAAO+Q,QAAQ,iBACjB3V,ErB+BuB,SAACQ,GAAD,8CAAQ,WAAOR,EAAUS,GAAjB,qBAAAC,EAAA,sEAEjCV,EAAS,CACPG,KAAMyG,KAHyB,EAQ7BnG,IADWE,EAPkB,EAO/BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZL,SAgB3BC,IAAM2U,OAAN,wBAA8BpV,GAAMK,GAhBT,OAkBjCb,EAAS,CACPG,KAAM0G,KAnByB,gDA0BjB,kCAJVxF,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM2G,GACN1F,QAASC,IA/BsB,yDAAR,wDqB/BdiW,CAAc9W,KAQ3B,OACE,uCACE,gBAAC8D,GAAA,EAAD,CAAKxB,UAAU,qBAAf,UACE,eAACyB,GAAA,EAAD,UACE,6CAEF,eAACA,GAAA,EAAD,CAAKzB,UAAU,aAAf,SACE,gBAAC0C,GAAA,EAAD,CAAQ1C,UAAU,OAAOK,QAXJ,WAC3BnD,ErB8DyB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAE/BV,EAAS,CACPG,KAAM4G,KAHuB,EAQ3BtG,IADWE,EAPgB,EAO7BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZP,SAgBRC,IAAMkP,KAAN,gBAA4B,GAAItP,GAhBxB,gBAgBvBM,EAhBuB,EAgBvBA,KAERnB,EAAS,CACPG,KAAM6G,GACN5F,QAASD,IApBoB,kDA2Bf,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM8G,GACN7F,QAASC,IAhCoB,0DAAN,0DqBpDnB,UACE,oBAAGyB,UAAU,gBADf,0BAKHiU,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASjV,QAAQ,SAAjB,SAA2BiV,IAC1CE,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASpV,QAAQ,SAAjB,SAA2BoV,IAC1C1O,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,uCACE,gBAACkJ,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,6CACA,2CACA,gDACA,uCACA,6CAIJ,qCACC6F,EAAS0B,KAAI,SAACC,GACb,OACE,iCACGA,EAAQjB,SAASgB,KAAI,SAAC+C,GAErB,OADArE,QAAQC,IAAIoE,GAEV,gCACE,8BAAKA,EAAKF,aACV,8BAAK5C,EAAQgB,YACb,8BAC4B,SAAzBhB,EAAQiN,cACgB,OAAzBjN,EAAQiN,aACJnK,EAAKrC,cACLT,EAAQgB,YAEd,8BAAK8B,EAAKG,gBACV,sCAAQH,EAAKI,iBAEb,gCACE,eAAC,gBAAD,CACErL,GAAE,yBAAoBmI,EAAQU,IAA5B,SADJ,SAGE,eAACxF,GAAA,EAAD,CAAQzD,QAAQ,QAAQe,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAAC0C,GAAA,EAAD,CACEzD,QAAQ,SACRe,UAAU,SACVK,QAAS,kBAAMuS,EAAcpL,EAAQU,MAHvC,SAKE,oBAAGlI,UAAU,wBAzBVsK,EAAKF,gBAJR5C,EAAQU,aAwC1B,eAAC,GAAD,CAAUuL,MAAOA,EAAOC,KAAMA,EAAMnT,SAAS,WC+CxCmU,GAxLW,SAAC,GAAwB,IAAtBjP,EAAqB,EAArBA,MAAOxD,EAAc,EAAdA,QAC5BoJ,EAAY5F,EAAMkE,OAAOjM,GADiB,EAGxBoI,mBAAS,IAHe,oBAGzC3F,EAHyC,KAGnC2N,EAHmC,OAItBhI,mBAAS,GAJa,oBAIzC6F,EAJyC,KAIlCgJ,EAJkC,OAKtB7O,mBAAS,IALa,oBAKzC4F,EALyC,KAKlCkJ,EALkC,OAMtB9O,mBAAS,IANa,oBAMzC+O,EANyC,KAMlCC,EANkC,OAOhBhP,mBAAS,IAPO,oBAOzCiP,EAPyC,KAO/BC,EAP+B,OAQRlP,mBAAS,GARD,oBAQzCmP,EARyC,KAQ3BC,EAR2B,OASVpP,mBAAS,IATC,oBASzCqP,EATyC,KAS5BC,EAT4B,OAUdtP,oBAAS,GAVK,oBAUzCuP,EAVyC,KAU9BC,EAV8B,KAY1CpY,EAAWwB,cAEX2K,EAAiB1K,aAAY,SAACC,GAAD,OAAWA,EAAMyK,kBAC5C1D,EAA4B0D,EAA5B1D,QAASC,EAAmByD,EAAnBzD,MAAO4B,EAAY6B,EAAZ7B,QAElB+N,EAAgB5W,aAAY,SAACC,GAAD,OAAWA,EAAM2W,iBAExCnC,EAGPmC,EAHF5P,QACO0N,EAELkC,EAFF3P,MACS0N,EACPiC,EADF/L,QAGFrD,qBAAU,WACJmN,GACFpW,EAAS,CAAEG,KAAMmH,KACjBvC,EAAQY,KAAK,uBAER2E,EAAQgB,WAAahB,EAAQU,MAAQmD,GAGxCyC,EAAQtG,EAAQgB,WAChBmM,EAASnN,EAAQmE,OACjBiJ,EAASpN,EAAQqB,WACjBiM,EAAStN,EAAQqN,OACjBG,EAAYxN,EAAQuN,UACpBG,EAAgB1N,EAAQyN,cACxBG,EAAe5N,EAAQ2N,cARvBjY,EAASqI,GAAmB8F,MAW/B,CAACnO,EAAU+E,EAASoJ,EAAW7D,EAAS8L,IAE3C,IAAMkC,EAAiB,uCAAG,WAAOrI,GAAP,uBAAAvP,EAAA,6DAClB6X,EAAOtI,EAAEtM,OAAO6U,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBH,GAAa,GAJW,SAOhBvX,EAAS,CACbC,QAAS,CACP,eAAgB,wBATE,SAaCG,IAAMkP,KAAK,cAAesI,EAAU5X,GAbrC,gBAadM,EAbc,EAadA,KAERuW,EAASvW,GACTiX,GAAa,GAhBS,kDAkBtBrP,QAAQL,MAAR,MACA0P,GAAa,GAnBS,0DAAH,sDAuCvB,OACE,uCACE,eAAC,OAAD,CAAMjW,GAAG,qBAAqBW,UAAU,qBAAxC,qBAGA,gBAAC,GAAD,WACE,+CACCoT,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASpU,QAAQ,SAAjB,SAA2BoU,IAC1C1N,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,gBAACqH,GAAA,EAAD,CAAMC,SA9BQ,SAACC,GACrBA,EAAEC,iBACFlQ,EtByFyB,SAACsK,GAAD,8CAAa,WAAOtK,EAAUS,GAAjB,yBAAAC,EAAA,sEAEtCV,EAAS,CACPG,KAAMgH,KAH8B,EAQlC1G,IADWE,EAPuB,EAOpCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbA,SAiBfC,IAAMyQ,IAAN,wBACJpH,EAAQU,KACzBV,EACAzJ,GApBoC,gBAiB9BM,EAjB8B,EAiB9BA,KAMRnB,EAAS,CACPG,KAAMiH,GACNhG,QAASD,IAEXnB,EAAS,CAAEG,KAAMuG,GAAyBtF,QAASD,IA3Bb,kDAiCtB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMkH,GACNjG,QAASC,IAtC2B,0DAAb,wDsBxFvBuX,CAAc,CACZ5N,IAAKmD,EACLlL,OACAwL,QACAD,QACAmJ,QACAE,WACAI,cACAF,mBAmBE,UACE,gBAAChI,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAO5I,EACPyN,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,oBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,SACLsQ,YAAY,cACZ5E,MAAO4C,EACPiC,SAAU,SAACT,GAAD,OAAOwH,EAASxH,EAAEtM,OAAOkI,aAIvC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,oBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,kBACZ5E,MAAO2C,EACPkC,SAAU,SAACT,GAAD,OAAOyH,EAASzH,EAAEtM,OAAOkI,UAErC,eAACkE,GAAA,EAAK8I,KAAN,CACErY,GAAG,aACHqT,MAAM,cACNiF,QAAM,EACNpI,SAAU4H,IAEXH,GAAa,eAAC,GAAD,OAGhB,gBAACpI,GAAA,EAAKM,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,oBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,cACZ5E,MAAO8L,EACPjH,SAAU,SAACT,GAAD,OAAO2H,EAAS3H,EAAEtM,OAAOkI,aAIvC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,eAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,6BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,SACLsQ,YAAY,qBACZ5E,MAAOkM,EACPrH,SAAU,SAACT,GAAD,OAAO+H,EAAgB/H,EAAEtM,OAAOkI,aAI9C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,iBACZ5E,MAAOgM,EACPnH,SAAU,SAACT,GAAD,OAAO6H,EAAY7H,EAAEtM,OAAOkI,aAI1C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,cAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,0BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,oBACZ5E,MAAOoM,EACPvH,SAAU,SAACT,GAAD,OAAOiI,EAAejI,EAAEtM,OAAOkI,aAI7C,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,8BCvGGgX,GA1ES,SAAC,GAAiB,IAAfhU,EAAc,EAAdA,QACnB/E,EAAWwB,cAEXwX,EAAYvX,aAAY,SAACC,GAAD,OAAWA,EAAMsX,aACvCvQ,EAA2BuQ,EAA3BvQ,QAASC,EAAkBsQ,EAAlBtQ,MAAO+I,EAAWuH,EAAXvH,OAGhB9Q,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAUR,OARAsI,qBAAU,WACJtI,GAAYA,EAAS0C,QACvBrD,EX6MoB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAE5BV,EAAS,CACPG,KAAMX,KAHoB,EAQxBiB,IADWE,EAPa,EAO1BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZV,SAgBLC,IAAMC,IAAN,cAAyBL,GAhBpB,gBAgBpBM,EAhBoB,EAgBpBA,KAERnB,EAAS,CACPG,KAAMV,GACN2B,QAASD,IApBiB,kDA2BZ,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMT,GACN0B,QAASC,IAhCiB,0DAAN,yDW3MpB0D,EAAQY,KAAK,YAEd,CAAC3F,EAAU+E,EAASpE,IAGrB,uCACE,yCACC8H,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,gBAACkJ,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAGJ,iCACG2O,EAAOpH,KAAI,SAAC4H,GAAD,OACV,gCACE,8BAAKA,EAAMjH,MACX,8BAAKiH,EAAMb,MAAQa,EAAMb,KAAKnO,OAC9B,8BAAKgP,EAAMC,UAAUC,UAAU,EAAG,MAClC,oCAAMF,EAAMG,cACZ,8BACGH,EAAMI,OACLJ,EAAMK,OAAOH,UAAU,EAAG,IAE1B,oBAAGrP,UAAU,eAAelB,MAAO,CAAEkC,MAAO,WAGhD,8BACGmO,EAAMM,YACLN,EAAMO,YAAYL,UAAU,EAAG,IAE/B,oBAAGrP,UAAU,eAAelB,MAAO,CAAEkC,MAAO,WAGhD,8BACE,eAAC,gBAAD,CAAe3B,GAAE,iBAAY8P,EAAMjH,KAAnC,SACE,eAACxF,GAAA,EAAD,CAAQzD,QAAQ,QAAQe,UAAU,SAAlC,2BArBGmP,EAAMjH,iB,SC/ChBiO,I,cAAyB,0BACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBAExBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBAExBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAAyB,yBAEzBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBAExBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAAyB,yBAEzBC,GAA4B,4BAC5BC,GAA4B,4BAC5BC,GAAyB,yBAEzBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBAEvBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBC+GvBC,GAAqB,SAACC,EAAUC,GAAX,8CAAuB,WAAOnb,EAAUS,GAAjB,yBAAAC,EAAA,sEAErDV,EAAS,CAAEG,KAAM2a,KAFoC,EAMjDra,IADWE,EALsC,EAKnDC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVe,SAc9BC,IAAMC,IAAN,yCACaga,EADb,oBACkCC,GAAWta,GAff,gBAc7CM,EAd6C,EAc7CA,KAMRnB,EAAS,CACPG,KAAM4a,GACN3Z,QAASD,IAtB0C,kDA6BrC,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM6a,GACN5Z,QAASC,IAlC0C,0DAAvB,yDAqKrB+Z,GAAkB,SAACC,GAAD,8CAAe,WAAOrb,EAAUS,GAAjB,yBAAAC,EAAA,sEAE1CV,EAAS,CACPG,KAAMia,KAHkC,EAQtC3Z,IADWE,EAP2B,EAOxCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbI,SAiBnBC,IAAMyQ,IAAN,yBACH2J,EAAUrQ,KAC5BqQ,EACAxa,GApBwC,gBAiBlCM,EAjBkC,EAiBlCA,KAMRnB,EAAS,CACPG,KAAMka,GACNjZ,QAASD,IAEXnB,EAAS,CAAEG,KAAMsa,GAA2BrZ,QAASD,IA3BX,kDAiC1B,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMma,GACNlZ,QAASC,IAtC+B,0DAAf,yDC5BhBia,I,OA7Qa,SAAC,GAAwB,IAAtBvW,EAAqB,EAArBA,QACvB/E,GAD4C,EAAZuI,MACrB/G,eAEX+Z,EAAgB9Z,aAAY,SAACC,GAAD,OAAWA,EAAM6Z,iBAC3C9S,EAA8B8S,EAA9B9S,QAAgB4S,GAAcE,EAArB7S,MAAqB6S,EAAdF,WAElBG,EAAkB/Z,aAAY,SAACC,GAAD,OAAWA,EAAM8Z,mBAI1ChG,GACPgG,EAHF/S,QAGE+S,EAFF9S,MAEE8S,EADFlP,SAGImP,EAAqBha,aAAY,SAACC,GAAD,OAAWA,EAAMga,kBAE7CC,EAGPF,EAHFhT,QAEAiT,GACED,EAFF/S,MAEE+S,EADFC,gBAIM/a,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SArB0C,EAuBhBiI,mBAAS,IAAIgT,MAvBG,oBAuB3CV,EAvB2C,KAuBhCW,EAvBgC,OAwBpBjT,mBAAS,IAAIgT,MAxBO,oBAwB3CT,EAxB2C,KAwBlCW,EAxBkC,OAyBdlT,oBAAS,GAzBK,oBAyB3CmT,EAzB2C,KAyB/BC,EAzB+B,KA2BlD/S,qBAAU,WACHtI,GAAaA,EAAS0C,QAGzBrD,EDfuB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAE/BV,EAAS,CAAEG,KAAM8Y,KAFc,EAM3BxY,IADWE,EALgB,EAK7BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVP,SAcRC,IAAMC,IAAN,iBACHL,GAfW,gBAcvBM,EAduB,EAcvBA,KAKRnB,EAAS,CACPG,KAAM+Y,GACN9X,QAASD,IArBoB,kDA4Bf,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMgZ,GACN/X,QAASC,IAjCoB,0DAAN,yDCavB0D,EAAQY,KAAK,YAId,CAAC3F,EAAU+E,EAASpE,EAAU6U,IAEjC,IAAME,EAAgB,SAAClV,GACjBoE,OAAO+Q,QAAQ,iBACjB3V,ED+SyB,SAACQ,GAAD,8CAAQ,WAAOR,EAAUS,GAAjB,qBAAAC,EAAA,sEAEnCV,EAAS,CACPG,KAAM8Z,KAH2B,EAQ/BxZ,IADWE,EAPoB,EAOjCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZH,SAgB7BC,IAAM2U,OAAN,yBAA+BpV,GAAMK,GAhBR,OAkBnCb,EAAS,CACPG,KAAM+Z,KAnB2B,gDA0BnB,kCAJV7Y,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMga,GACN/Y,QAASC,IA/BwB,yDAAR,wDC/ShB4a,CAAgBzb,KAIvB0b,EAAiB,CACrBhB,UAAWA,EACXC,QAASA,EACTgB,IAAK,aAGP,SAASC,EAAaC,GACpBR,EAAaQ,EAAOC,UAAUpB,WAC9BY,EAAWO,EAAOC,UAAUnB,SAG9B,IAAMoB,EAAe,WACnBP,GAAc,GACdhc,EACEib,GAAmBC,EAAUsB,cAAerB,EAAQqB,iBAIlDC,EAAkB,WACtB,GAAId,IAAiBlT,EAAS,CAC5B,IAAMiU,EAAYrB,EACfhR,KAAI,SAACsC,GAAD,OAAWA,EAAMgQ,cACrBtN,QAAO,SAAC3O,EAAGkc,GAAJ,OAAUlc,EAAIkc,IAAG,GAC3B,OACE,eAACtY,GAAA,EAAD,CACE1C,MAAO,CACLQ,MAAO,OACPoH,KAAM,EACNqT,OAAQ,EACRxY,aAAc,WACdX,WAAY,YANhB,SASE,8CAAgBgZ,EAAUI,sBAGzB,IAAKnB,EAAc,CACxB,IAAMe,EAAYhB,EACfrR,KAAI,SAACsC,GAAD,OAAWA,EAAMgQ,cACrBtN,QAAO,SAAC3O,EAAGkc,GAAJ,OAAUlc,EAAIkc,IAAG,GAE3B,OACE,eAACtY,GAAA,EAAD,CAAK1C,MAAO,CAAE4H,KAAM,EAAGqT,OAAQ,GAA/B,SACE,8CAAgBH,EAAUI,wBAQlC,OAFA/T,QAAQC,IAAIqS,GAGV,uCACE,gBAAC/W,GAAA,EAAD,CAAKxB,UAAU,qBAAf,UACE,eAACyB,GAAA,EAAD,UACE,8CAEF,eAACA,GAAA,EAAD,CAAKzB,UAAU,aAAf,SACE,eAAC,gBAAD,CAAeX,GAAE,0BAAjB,SACE,gBAACqD,GAAA,EAAD,CAAQ1C,UAAU,OAAlB,UACE,oBAAGA,UAAU,gBADf,mCAUL6Y,IAAiBlT,EAChB,uCACE,uBAAK3F,UAAU,gBAAf,UACGiZ,GACC,uBAAKjZ,UAAU,SAAf,UACE,eAAC,mBAAD,CACEuZ,OAAQ,CAACH,GACTxL,SAAU0L,IAEZ,eAAC5W,GAAA,EAAD,CAAQrC,QAASoZ,EAAjB,iCAGJ,eAAC/W,GAAA,EAAD,CACE1C,UAAU,sBACVf,QAAQ,WACRoB,QAAS,kBAAM6Y,GAAeD,IAHhC,4BAQF,gBAACnK,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,uCACA,+CACA,yCACA,2CACA,uCACA,2CACA,uCACA,6CACA,uCACA,+CACA,mDAGJ,qCACGuY,GACCA,EAAUhR,KAAI,SAACgR,GACb,OACE,iCACE,gCACE,8BAAKA,EAAU0B,YACf,8BAAK1B,EAAUnJ,UAAU8K,MAAM,EAAG,MAClC,8BAAK3B,EAAU4B,SACf,8BAAK5B,EAAU6B,gBACf,8BAAK7B,EAAU/P,YACf,8BAAK+P,EAAU8B,gBACf,8BAAK9B,EAAU+B,YACf,8BAAK/B,EAAUsB,aACf,8BAAKtB,EAAUgC,MAAQ,SACvB,8BAAKhC,EAAUiC,UAAUN,MAAM,EAAG,MAClC,gCACE,eAAC,gBAAD,CACE7a,GAAE,2BAAsBkZ,EAAUrQ,IAAhC,SADJ,SAGE,eAACxF,GAAA,EAAD,CAAQzD,QAAQ,QAAQe,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAAC0C,GAAA,EAAD,CACEzD,QAAQ,SACRe,UAAU,SACVK,QAAS,kBAAMuS,EAAc2F,EAAUrQ,MAHzC,SAKE,oBAAGlI,UAAU,0BAzBTuY,EAAUrQ,aAmC/ByR,OAGH,uCACE,uBAAK3Z,UAAU,gBAAf,UACGiZ,GACC,uBAAKjZ,UAAU,SAAf,UACE,eAAC,mBAAD,CACEuZ,OAAQ,CAACH,GACTxL,SAAU0L,IAEZ,eAAC5W,GAAA,EAAD,CAAQrC,QAASoZ,EAAjB,iCAGJ,eAAC/W,GAAA,EAAD,CACE1C,UAAU,sBACVf,QAAQ,WACRoB,QAAS,kBAAM6Y,GAAeD,IAHhC,4BAQF,gBAACnK,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,uCACA,+CACA,yCACA,2CACA,uCACA,2CACA,uCACA,6CACA,uCACA,+CACA,mDAGJ,qCACG4Y,GACCA,EAAerR,KAAI,SAACgR,GAClB,OACE,iCACE,gCACE,8BAAKA,EAAU0B,YACf,8BAAK1B,EAAUnJ,UAAU8K,MAAM,EAAG,MAClC,8BAAK3B,EAAU4B,SACf,8BAAK5B,EAAU6B,gBACf,8BAAK7B,EAAU/P,YACf,8BAAK+P,EAAU8B,gBACf,8BAAK9B,EAAU+B,YACf,8BAAK/B,EAAUsB,aACf,8BAAKtB,EAAUgC,MAAQ,SACvB,8BAAKhC,EAAUiC,UAAUN,MAAM,EAAG,MAClC,gCACE,eAAC,gBAAD,CACE7a,GAAE,2BAAsBkZ,EAAUrQ,IAAhC,SADJ,SAGE,eAACxF,GAAA,EAAD,CAAQzD,QAAQ,QAAQe,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAGjB,eAAC0C,GAAA,EAAD,CACEzD,QAAQ,SACRe,UAAU,SACVK,QAAS,kBAAMuS,EAAc2F,EAAUrQ,MAHzC,SAKE,oBAAGlI,UAAU,0BAzBTuY,EAAUrQ,aAmC/ByR,YCzREc,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAE3BC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAE7BC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAE9BC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA8B,8BAE9BC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAE7BC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA8B,8BAE9BC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BCF9BC,GAAqB,yDAAM,WAAO9e,EAAUS,GAAjB,yBAAAC,EAAA,sEAEpCV,EAAS,CAAEG,KAAMod,KAFmB,EAMhC9c,IADWE,EALqB,EAKlCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVF,SAabC,IAAMC,IAAN,sBAAiCL,GAbpB,gBAa5BM,EAb4B,EAa5BA,KAERnB,EAAS,CACPG,KAAMqd,GACNpc,QAASD,IAjByB,kDAwBpB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMsd,GACNrc,QAASC,IA7ByB,0DAAN,yD,SC2UnB0d,GAxVe,SAAC,GAAiB,IAAfha,EAAc,EAAdA,QACzB/E,EAAWwB,cAEXwd,EAAO,IAAIpD,KACXqD,EAAMD,EAAKE,UAAY,GAAjB,WAA0BF,EAAKE,WAAcF,EAAKE,UACxDC,EACJH,EAAKI,WAAa,EAAI,GAAtB,WAA+BJ,EAAKI,WAAa,GAAMJ,EAAKI,WAAa,EACrEC,EAAOL,EAAKM,cACZC,EAAS,UAAMF,EAAN,YAAcF,EAAd,YAAuBF,GAEtClW,QAAQC,IAAIiW,GAEZ,IAoDIO,EApDEC,EAAkBhe,aAAY,SAACC,GAAD,OAAWA,EAAM+d,mBAE1CvI,EAGPuI,EAHFhX,QACO0O,EAELsI,EAFF/W,MACS0O,EACPqI,EADFnT,QAGIoT,EAAqBje,aAAY,SAACC,GAAD,OAAWA,EAAMge,sBAE7CC,EAIPD,EAJFjX,QACOmX,EAGLF,EAHFhX,MAEAmX,GACEH,EAFFpT,QAEEoT,EADFG,gBAMMlf,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SA9BqC,EAgCrBiI,mBAASjI,GAhCY,oBAgCtCyQ,EAhCsC,KAgChC0O,EAhCgC,KAkDvCC,EAZoB,SAACC,GAGzB,IAFA,IAAItT,EAAM,GACNuT,EAAU,GACLC,EAAI,EAAGA,EAAIF,EAAIta,OAAQwa,IAC9BxT,EAAIsT,EAAIE,KAAM,EAEhB,IAAK,IAAI/D,KAAOzP,EACduT,EAAQta,KAAK,CAAEkO,MAAOsI,EAAKtQ,OAAO,IAEpC,OAAOoU,EAGYE,CAhBVN,EAAexV,KAAI,SAAC+C,GAC7B,OAAOA,EAAKyK,aAnC+B,EAoDbjP,mBAASmX,EAAa,IApDT,oBAoDtClI,EApDsC,KAoD5BC,EApD4B,OAqDrBlP,mBAAS,IArDY,oBAqDtC3F,EArDsC,KAqDhC2N,EArDgC,OAsDrBhI,mBAAS,GAtDY,oBAsDtCwX,EAtDsC,KAsDhCC,EAtDgC,OAuDrBzX,mBAAS,GAvDY,oBAuDtC0X,EAvDsC,KAuDhCC,EAvDgC,OAwDb3X,mBAAS,GAxDI,oBAwDtC4X,EAxDsC,KAwD5BC,EAxD4B,OAyDX7X,mBAAS,GAzDE,oBAyDtC8X,EAzDsC,KAyD3BC,EAzD2B,OA0DrB/X,oBAAS,GA1DY,qBA0DtCyU,GA1DsC,MA0DhCuD,GA1DgC,SA2DbhY,mBAAS2W,GA3DI,sBA2DtCsB,GA3DsC,MA2D5BC,GA3D4B,SA4DjBlY,mBAAS,IA5DQ,sBA4DtCqU,GA5DsC,MA4D9B8D,GA5D8B,MAkE7C9X,qBAAU,WACHtI,GAAaA,EAAS0C,SACzB0B,EAAQY,KAAK,UAGXoa,GACFjI,EAAYiI,EAAa,IAGvB3I,GACFpX,EAAS,CAAEG,KAAM6Z,KACjBjV,EAAQY,KAAR,2BACAmS,EAAY,IACZlH,EAAQ,IACRyP,EAAQ,GACRE,EAAQ,GACRE,EAAY,GACZE,EAAa,GACbC,IAAQ,GACRE,GAAYvB,GACZO,EAAQnf,GACRogB,GAAU,KAEV/gB,EAAS8e,QAEV,CACD/Z,EACApE,EACAyW,EACAD,EACAnX,EACAuf,EACAC,KAuBG3H,GAAYkI,EAAa,GAC5BP,EAAWO,EAAa,GAAGlM,MAClBgE,GAAYkI,IACrBP,EAAW3H,GAKb,IAAMmJ,GAAKnB,EACRtT,QAAO,SAACI,GAAD,OAAWA,EAAMkL,WAAa2H,GAAY7S,KACjDtC,KAAI,SAACsC,GAAD,MAAY,CAAEkH,MAAOlH,EAAMS,KAAMvB,OAAO,MAK/C,OACE,uCACE,eAAC,OAAD,CAAM1J,GAAG,uBAAuBW,UAAU,qBAA1C,qBAGA,gBAAC,GAAD,WACE,wDACCoU,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASpV,QAAQ,SAAjB,SAA2BoV,IAC1CwI,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS7d,QAAQ,SAAjB,SAA2B6d,IAE3B,gBAAC7P,GAAA,EAAD,CAAMC,SAjDQ,SAACC,GJqKM,IAACoL,EIpK5BpL,EAAEC,iBACFlQ,GJmK4Bqb,EIlKV,CACdjK,OACAyG,WACA5U,OACAmd,OACAE,OACAE,WACAE,YACArD,QACAwD,SAAUxD,IAAQ,IAAIzB,KAAKiF,IAAUrE,cACrCS,WJwJuB,uCAAe,WAAOjd,EAAUS,GAAjB,yBAAAC,EAAA,sEAE1CV,EAAS,CACPG,KAAM0Z,KAHkC,EAQtCpZ,IADWE,EAP2B,EAOxCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZI,SAgBnBC,IAAMkP,KAAN,iBAA6BkL,EAAWxa,GAhBrB,gBAgBlCM,EAhBkC,EAgBlCA,KAERnB,EAAS,CACPG,KAAM2Z,GACN1Y,QAASD,IApB+B,kDA2B1B,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM4Z,GACN3Y,QAASC,IAhC+B,0DAAf,2DIpHrB,UAYE,gBAAC0O,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBAECwP,EAAa,IACZ,eAAC,KAAD,CACEjd,UAAU,eACVme,gBAAgB,SAEhBC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,OAAO,EACPC,cAAc,EACdC,QAASxB,EACT9c,KAAK,WACLyN,SAAU,SAACT,GAAD,OAAO6H,EAAY7H,EAAE4D,QAC/BL,UAAQ,OAwCbqE,GACC,gBAAC9H,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAAC,KAAD,CACEzN,UAAU,eACVme,gBAAgB,SAEhBC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,OAAO,EACPC,cAAc,EACdC,QAASP,GACT/d,KAAK,WACLyN,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAE4D,QAC3BL,UAAQ,OAKd,gBAACzD,GAAA,EAAKM,MAAN,CAAYC,UAAU,SAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,qBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,eACZ5E,MAAOoR,GACPvM,SAAU,SAACT,GAAD,OAAO8Q,GAAU9Q,EAAEtM,OAAOkI,QACpC2H,UAAQ,OAIZ,gBAACzD,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,cACZ5E,MAAOuU,EACP1P,SAAU,SAACT,GAAD,OAAOoQ,EAAQpQ,EAAEtM,OAAOkI,QAClC2H,UAAQ,OAIZ,gBAACzD,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAOyU,EACP5P,SAAU,SAACT,GAAD,OAAOsQ,EAAQtQ,EAAEtM,OAAOkI,QAClC2H,UAAQ,OAIZ,gBAACzD,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,iBACZ5E,MAAO2U,EACP9P,SAAU,SAACT,GAAD,OAAOwQ,EAAYxQ,EAAEtM,OAAOkI,QACtC2H,UAAQ,OAIZ,gBAACzD,GAAA,EAAKM,MAAN,CAAYC,UAAU,YAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,yBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,iBACZ+C,UAAQ,EACR3H,MAAO6U,EACPhQ,SAAU,SAACT,GAAD,OACR0Q,EACEH,GAAYJ,EAAOI,EAAWJ,EAAOnQ,EAAEtM,OAAOkI,aAMtD,sCACE,eAACkE,GAAA,EAAKQ,MAAN,sBACA,gBAACR,GAAA,EAAKM,MAAN,CAAYvN,UAAU,OAAtB,UACE,eAACiN,GAAA,EAAK6D,MAAN,CACE4N,QAAM,EACN3N,MAAM,OACN5Q,KAAK,SACL9C,KAAK,QACLK,GAAG,WACHqL,OAAO,EACP6E,SAAU,kBAAMkQ,IAAQ,MAE1B,eAAC7Q,GAAA,EAAK6D,MAAN,CACE4N,QAAM,EACN3N,MAAM,WACN5Q,KAAK,SACL9C,KAAK,QACLK,GAAG,YACHqL,OAAO,EACP6E,SAAU,kBAAMkQ,IAAQ,IAAUE,GAAY,eAKnDzD,IACC,gBAACtN,GAAA,EAAKM,MAAN,CAAYC,UAAU,YAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,2BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAOgV,GACPrN,UAAQ,EACR9C,SAAU,SAACT,GAAD,OAAO6Q,GAAY7Q,EAAEtM,OAAOkI,aAK5C,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,4BCjJGyV,GA/LW,SAAC,GAAwB,IAAtBjP,EAAqB,EAArBA,MAAOxD,EAAc,EAAdA,QAC5B0c,EAAclZ,EAAMkE,OAAOjM,GADe,EAGhBoI,mBAAS,IAHO,oBAGzCiP,EAHyC,KAG/BC,EAH+B,OAIxBlP,mBAAS,IAJe,oBAIzC3F,EAJyC,KAInC2N,EAJmC,OAKxBhI,mBAAS,GALe,oBAKzCwX,EALyC,KAKnCC,EALmC,OAMxBzX,mBAAS,GANe,oBAMzC0X,EANyC,KAMnCC,EANmC,OAOhB3X,mBAAS,GAPO,oBAOzC4X,EAPyC,KAO/BC,EAP+B,OAQd7X,mBAAS,GARK,oBAQzC8X,EARyC,KAQ9BC,EAR8B,OASxB/X,oBAAS,GATe,oBASzCyU,EATyC,KASnCuD,EATmC,OAUhBhY,mBAAS,IAVO,oBAUzCiY,EAVyC,KAU/BC,EAV+B,KAY1C9gB,EAAWwB,cAEXkgB,EAAkBjgB,aAAY,SAACC,GAAD,OAAWA,EAAMggB,mBAC7CjZ,EAA8BiZ,EAA9BjZ,QAASC,EAAqBgZ,EAArBhZ,MAAO2S,EAAcqG,EAAdrG,UAElBsG,EAAkBlgB,aAAY,SAACC,GAAD,OAAWA,EAAMigB,mBAE1CzL,EAGPyL,EAHFlZ,QACO0N,EAELwL,EAFFjZ,MACS0N,EACPuL,EADFrV,QAIM3L,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAzBwC,EA2BxBiI,mBAASjI,GA3Be,oBA2BzCyQ,GA3ByC,KA2BnC0O,GA3BmC,KA6BhD7W,qBAAU,WL0NwB,IAACzI,EKzN7B4V,GACFpW,EAAS,CAAEG,KAAMoa,KACjBxV,EAAQY,KAAK,yBAER0V,EAAU/P,WAAa+P,EAAUrQ,MAAQyW,GAI5C3J,EAAYuD,EAAUxD,UACtBjH,EAAQyK,EAAU/P,WAClB+U,EAAQhF,EAAU+B,WAClBmD,EAAQlF,EAAUuG,WAClBnB,EAAYpF,EAAU8B,eACtBwD,EAAatF,EAAUsB,YACvBiE,EAAQvF,EAAUgC,MAClByD,EAAYzF,EAAUiC,WACtBwC,GAAQnf,IAXRX,GLoN6BQ,EKpNCihB,ELoNF,uCAAQ,WAAOzhB,GAAP,iBAAAU,EAAA,sEAExCV,EAAS,CAAEG,KAAMqa,KAFuB,SAIjBvZ,IAAMC,IAAN,yBAA4BV,IAJX,gBAIhCW,EAJgC,EAIhCA,KAERnB,EAAS,CACPG,KAAMsa,GACNrZ,QAASD,IAR6B,gDAWxCnB,EAAS,CACPG,KAAMua,GACNtZ,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAhB0B,yDAAR,0DKtM/B,CAACrB,EAAU+E,EAASqR,EAAeiF,EAAW1a,EAAU8gB,IAqB3D,OACE,uCACE,eAAC,OAAD,CAAMtf,GAAG,uBAAuBW,UAAU,qBAA1C,qBAGA,gBAAC,GAAD,WACE,wDACCoT,GAAkB,eAAC,GAAD,IAClBC,GAAe,eAAC,GAAD,CAASpU,QAAQ,SAAjB,SAA2BoU,IAC1C1N,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,gBAACqH,GAAA,EAAD,CAAMC,SA/BQ,SAACC,GACrBA,EAAEC,iBACFlQ,EACEob,GAAgB,CACdhK,QACAnO,OACA4U,WACAuI,OACAE,OACAE,WACAE,YACArD,OACAwD,eAmBE,UACE,gBAAC9Q,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,iBACZ5E,MAAOgM,EACPnH,SAAU,SAACT,GAAD,OAAO6H,EAAY7H,EAAEtM,OAAOkI,aAI1C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAO5I,EACPyN,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAOuU,EACP1P,SAAU,SAACT,GAAD,OAAOoQ,EAAQpQ,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,mBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAOyU,EACP5P,SAAU,SAACT,GAAD,OAAOsQ,EAAQtQ,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,uBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,iBACZ5E,MAAO2U,EACP9P,SAAU,SAACT,GAAD,OAAOwQ,EAAYxQ,EAAEtM,OAAOkI,aAI1C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,YAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,yBACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,mBACZ5E,MAAO6U,EACPhQ,SAAU,SAACT,GAAD,OAAO0Q,EAAa1Q,EAAEtM,OAAOkI,aAI3C,sCACE,eAACkE,GAAA,EAAKQ,MAAN,sBACA,gBAACR,GAAA,EAAKM,MAAN,CAAYvN,UAAU,OAAtB,UACE,eAACiN,GAAA,EAAK6D,MAAN,CACE4N,QAAM,EACN3N,MAAM,OACN5Q,KAAK,SACL9C,KAAK,QACLK,GAAG,WACHqL,OAAO,EACP6E,SAAU,kBAAMkQ,GAAQ,MAE1B,eAAC7Q,GAAA,EAAK6D,MAAN,CACE4N,QAAM,EACN3N,MAAM,WACN5Q,KAAK,SACL9C,KAAK,QACLK,GAAG,YACHqL,OAAO,EACP6E,SAAU,kBAAMkQ,GAAQ,IAAUE,EAAY,eAKnDzD,GACC,gBAACtN,GAAA,EAAKM,MAAN,CAAYC,UAAU,cAAtB,UACE,eAACP,GAAA,EAAKQ,MAAN,2BACA,eAACR,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAOgV,EACPnQ,SAAU,SAACT,GAAD,OAAO6Q,EAAY7Q,EAAEtM,OAAOkI,aAK5C,eAACrG,GAAA,EAAD,CAAQrF,KAAK,SAAS4B,QAAQ,UAA9B,4BChMC8f,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAAwB,wBCExBC,GACX,eAAC1a,EAAD,uDAAc,GAAd,8CACA,WAAOnI,EAAUS,GAAjB,6BAAAC,EAAA,kEAEIV,EAAS,CAAEG,KAAM0hB,KAFrB,EAMQphB,IADWE,EALnB,EAKMC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAItC+H,QAAQC,IAAIb,GAEO,QAAfA,EAhBR,iCAiB6BlH,IAAMC,IAAN,2BAErBL,GAnBR,gBAiBcM,EAjBd,EAiBcA,KAKRnB,EAAS,CACPG,KAAM2hB,GACN1gB,QAASD,IAxBjB,yCA2B6BF,IAAMC,IAAN,kCACMiH,GAC3BtH,GA7BR,iBA2BcM,EA3Bd,EA2BcA,KAKRnB,EAAS,CACPG,KAAM2hB,GACN1gB,QAASD,IAlCjB,0DA0CoB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM4hB,GACN3gB,QAASC,IA/Cf,0DADA,yDAyFWyhB,GAAqB,SAACtiB,GAAD,8CAAQ,WAAOR,GAAP,iBAAAU,EAAA,sEAEtCV,EAAS,CAAEG,KAAMsiB,KAFqB,SAIfxhB,IAAMyQ,IAAN,qCAAwClR,IAJzB,gBAI9BW,EAJ8B,EAI9BA,KAERnB,EAAS,CACPG,KAAMuiB,GACNthB,QAASD,IAR2B,gDAWtCnB,EAAS,CACPG,KAAMwiB,GACNvhB,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAhBwB,yDAAR,uD,oBCLnB0hB,GA9FW,SAAC,GAAwB,IAAtBhe,EAAqB,EAArBA,QAASwD,EAAY,EAAZA,MAG9BvI,EAAWwB,cAEXwhB,EAAcvhB,aAAY,SAACC,GAAD,OAAWA,EAAMshB,eACzCva,EAAyCua,EAAzCva,QAASC,EAAgCsa,EAAhCta,MAAOua,EAAyBD,EAAzBC,QAASzM,EAAgBwM,EAAhBxM,KAAMD,EAAUyM,EAAVzM,MANS,EAQZ3N,mBAAS,GARG,oBAQzCT,EARyC,KAQ7B+a,EAR6B,KAUhDna,QAAQC,IAAIia,GAGZ,IACQtiB,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAERsI,qBAAU,WACJtI,GAAYA,EAAS0C,QACvBrD,EAAS6iB,GAAY1a,IAErBpD,EAAQY,KAAK,YAEd,CAAC3F,EAAU+E,EAASpE,EAAU4H,EAAOJ,IAMxC,OACE,uCACE,eAAC7D,GAAA,EAAD,CAAKxB,UAAU,qBAAf,SACE,eAACyB,GAAA,EAAD,UACE,8CAIHkE,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,uCACE,gBAACkJ,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,+CACA,iDACA,gDACA,iDACA,iDACA,8CACA,8CAGJ,qCACGmgB,EAAQE,SAAS9Y,KAAI,SAAC4Y,EAAS1Y,GAC9B,OACE,iCACE,gCACE,8BAAK0Y,EAAQG,eACb,8BAAKH,EAAQI,iBACb,8BAAKJ,EAAQK,gBACb,8BAAKL,EAAQM,iBAEb,uCAASN,EAAQO,kBACjB,uCAASP,EAAQQ,eACjB,8BACE,eAAC,gBAAD,CAAethB,GAAE,kBAAa8gB,EAAQI,gBAAtC,SACE,eAAC7d,GAAA,EAAD,CAAQzD,QAAQ,QAAQe,UAAU,SAAlC,6BAXIyH,WAsBtB,eAACjG,GAAA,EAAD,CAAK1C,MAAO,CAAC0B,QAAS,OAAQE,eAAgB,UAA9C,SACA,eAACkgB,GAAA,EAAD,CAAOC,QAAS,EAAhB,SAEF,eAAC,KAAD,CAAYC,MAAOrN,EAAOC,KAAMA,EAAM9F,SA1DrB,SAACmT,EAAOhY,GAC3BqX,EAAcrX,iBCoEHiY,GAlGa,SAAC,GAAwB,IAAtBvb,EAAqB,EAArBA,MAAOxD,EAAc,EAAdA,QAC9Bgf,EAAYxb,EAAMkE,OAAOjM,GAEzBR,EAAWwB,cAEXwiB,EAAiBviB,aAAY,SAACC,GAAD,OAAWA,EAAMsiB,kBAC5Cf,EAA4Be,EAA5Bf,QAASxa,EAAmBub,EAAnBvb,QAASC,EAAUsb,EAAVtb,MAGlB/H,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAcR,OAZAoI,QAAQC,IAAIgb,GAEZ/a,qBAAU,WACHtI,GACHoE,EAAQY,KAAK,UAGVsd,GAAWA,EAAQI,iBAAmBU,GACzC/jB,EAAS8iB,GAAmBiB,MAE7B,CAAC/jB,EAAU+E,EAASpE,EAAUsiB,EAASc,IAEnCtb,EACL,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,uCACE,yCAAWua,EAAQI,kBACnB,gBAAC/e,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,gBAAC4D,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,UACE,gBAACqN,GAAA,EAAUlM,KAAX,WACE,0CACA,+BACE,6CADF,IAC2B+f,EAAQG,gBAEnC,+BACE,oDACCH,EAAQgB,eAEX,+BACE,qDACChB,EAAQK,iBAEX,+BACE,sDACCL,EAAQM,qBAIb,gBAACnU,GAAA,EAAUlM,KAAX,WACE,wCAEA,eAACkM,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,SACGkhB,EAAQiB,WAAW7Z,KAAI,SAAC+C,EAAMvE,GAAP,OACtB,eAACuG,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKiH,GAAI,IACT,eAACjH,GAAA,EAAD,UAAM6I,EAAK+W,eACX,gBAAC5f,GAAA,EAAD,CAAKiH,GAAI,EAAT,UACG4B,EAAKoT,SADR,UACyBpT,EAAKqB,MAD9B,UAEOrB,EAAKoT,SAAWpT,EAAKqB,aANX5F,gBAe/B,eAACtE,GAAA,EAAD,CAAKiH,GAAI,EAAT,SACE,eAAChB,GAAA,EAAD,UACE,gBAAC4E,GAAA,EAAD,CAAWrN,QAAQ,QAAnB,UACE,eAACqN,GAAA,EAAUlM,KAAX,UACE,oDAEF,eAACkM,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,6BACA,gBAACA,GAAA,EAAD,kBAAU0e,EAAQO,uBAGtB,eAACpU,GAAA,EAAUlM,KAAX,UACE,gBAACoB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,kBAAU0e,EAAQQ,kCC9FvBW,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCDtBC,GAAc,yDAAM,WAAOtlB,EAAUS,GAAjB,uBAAAC,EAAA,sEAE3BV,EAAS,CAAEG,KAAMikB,KAFU,EAMvB3jB,IADWE,EALY,EAKzBC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVX,SAcJC,IAAMC,IAAN,eAA0BL,GAdtB,gBAcnBM,EAdmB,EAcnBA,KAERnB,EAAS,CACPG,KAAMkkB,GACNjjB,QAASD,IAlBgB,kDAqB3BnB,EAAS,CACPG,KAAMmkB,GACNljB,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UA1Ba,0DAAN,yDCqGZkkB,GA/GU,SAAC,GAAiB,IAAfxgB,EAAc,EAAdA,QAEpB/E,EAAWwB,cAEXgkB,EAAa/jB,aAAY,SAACC,GAAD,OAAWA,EAAM8jB,cACxC/c,EAA2B+c,EAA3B/c,QAASC,EAAkB8c,EAAlB9c,MAAO+c,EAAWD,EAAXC,OAGhB9kB,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAEF+kB,EAAejkB,aAAY,SAACC,GAAD,OAAWA,EAAMgkB,gBAIvClQ,GACPkQ,EAHFjd,QAGEid,EAFFhd,MAEEgd,EADFpZ,SAGFrD,qBAAU,WACJtI,GAAYA,EAAS0C,QACvBrD,EAASslB,MAETvgB,EAAQY,KAAK,YAEd,CAAC3F,EAAU+E,EAASpE,EAAU6U,IAGjC,IAAME,EAAgB,SAAClV,GACjBoE,OAAO+Q,QAAQ,iBACjB3V,ED8HwB,SAACQ,GAAD,8CAAQ,WAAOR,EAAUS,GAAjB,qBAAAC,EAAA,sEAEhCV,EAAS,CACPG,KAAM4kB,KAHwB,EAQ5BtkB,IADWE,EAPiB,EAO9BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZN,SAgB1BC,IAAM2U,OAAN,uBAA6BpV,GAAMK,GAhBT,OAkBhCb,EAAS,CACPG,KAAM6kB,KAnBwB,gDA0BhB,kCAJV3jB,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM8kB,GACN7jB,QAASC,IA/BqB,yDAAR,wDC9HfskB,CAAanlB,KAI1B,OACE,uCACE,eAAC+D,GAAA,EAAD,CAAKzB,UAAU,aAAf,SACE,eAAC,gBAAD,CAAeX,GAAE,uBAAjB,SACE,gBAACqD,GAAA,EAAD,CAAQ1C,UAAU,OAAlB,UACE,oBAAGA,UAAU,gBADf,6BAKJ,eAACwB,GAAA,EAAD,CAAKxB,UAAU,qBAAf,SACE,eAACyB,GAAA,EAAD,UACA,qBAAI3C,MAAO,CAAE6B,UAAW,UAAxB,yBAGDgF,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IAE3B,qCACI,eAACpE,GAAA,EAAD,CAAK1C,MAAO,CAAE0B,QAAS,QAAvB,SACGmiB,EAAOpb,KAAI,SAACob,EAAQlb,GACnB,OACE,eAAChG,GAAA,EAAD,CACA3C,MAAO,CAAEQ,MAAO,OAEhBmJ,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EANJ,SAQA,gBAAClB,GAAA,EAAD,CAAgB1H,UAAU,mBAA1B,UACE,eAAC,OAAD,CACElB,MAAO,CACL2B,UAAW,uCAEbpB,GAAE,iBAAYsjB,EAAOza,IAAnB,iBAA+Bya,EAAO5R,OAJ1C,SAME,eAACrJ,GAAA,EAAKE,IAAN,CACE9I,MAAO,CACLQ,MAAO,OACPN,OAAQ,QACR8D,aAAc,EACd+E,UAAW,SAEbrI,IAAKmjB,EAAOjX,MACZzM,QAAQ,UAIZ,gBAACyI,GAAA,EAAKI,KAAN,WACE,eAACJ,GAAA,EAAKK,MAAN,CAAYjJ,MAAO,CAAC+C,QAAS,OAAQihB,UAAW,SAAU9a,GAAG,MAA7D,SACE,kCAAS2a,EAAO5R,UAElB,eAACrO,GAAA,EAAD,CACErC,QAAS,kBAAMuS,EAAc+P,EAAOza,MAEpClI,UAAU,eACV3C,KAAK,SACLyB,MAAO,CACLQ,MAAO,OACPP,gBAAiB,MACjBmC,SAAU,SARd,yBAvBOuG,IANNA,cCmXRsb,GAtaY,SAAC,GAAiB,IAAf9gB,EAAc,EAAdA,QACtB/E,EAAWwB,cADyB,EAGhBoH,mBAAS,IAHO,oBAGnCiL,EAHmC,KAG5BiS,EAH4B,OAIhBld,mBAAS,IAJO,oBAInC4F,EAJmC,KAI5BkJ,EAJ4B,OAKJ9O,mBAAS,CAC7C,CAAEkD,KAAM,GAAIia,OAAQ,EAAGvX,MAAO,GAAIqJ,SAAU,GAAIuI,KAAM,EAAG4F,aAAc,KAN/B,oBAKnCC,EALmC,KAKtBC,EALsB,OAQNtd,mBAAS,IARH,oBAQnCsE,EARmC,KAQvBiZ,EARuB,OASRvd,mBAAS,GATD,oBASnC8X,EATmC,KASxBC,EATwB,KAWpCyF,EAAe3kB,aAAY,SAACC,GAAD,OAAWA,EAAM0kB,gBAEvClP,EAGPkP,EAHF3d,QACO0O,EAELiP,EAFF1d,MACS0O,EACPgP,EADF9Z,QAGI+Z,EAAkB5kB,aAAY,SAACC,GAAD,OAAWA,EAAM2kB,mBAE1CC,EAIPD,EAJF5d,QACO8d,EAGLF,EAHF3d,MAEAC,GACE0d,EAFF/Z,QAEE+Z,EADF1d,UAGI6c,EAAa/jB,aAAY,SAACC,GAAD,OAAWA,EAAM8jB,cACxC/c,EAA2B+c,EAA3B/c,QAEFiX,GAF6B8F,EAAlB9c,MAAkB8c,EAAXC,OAEGhkB,aAAY,SAACC,GAAD,OAAWA,EAAMge,uBAI7C8G,GAEP9G,EAJFjX,QAIEiX,EAHFhX,MAGEgX,EAFFpT,SACAuT,EACEH,EADFG,eAIMlf,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAtCkC,EAwClBiI,mBAASjI,GAxCS,oBAwCnCyQ,EAxCmC,KAwC7B0O,EAxC6B,KA0C1C7W,qBAAU,WACHtI,GAAaA,EAAS0C,SAGzBrD,EAASoI,MACTpI,EAASslB,MACTtlB,EAAS8e,OAJT/Z,EAAQY,KAAK,UAOXyR,IACFpX,EAAS,CAAEG,KAAM2kB,KACjB/f,EAAQY,KAAR,qBACAmgB,EAAS,IACTpO,EAAS,IACTwO,EAAe,IACfpG,EAAQnf,MAET,CACDoE,EACApE,EACAyW,EACAD,EACAnX,EACAwmB,IAKF,IAAMC,EACJ9d,GACAA,EACG0B,KAAI,SAACsC,GACJ,GACqB,aAAnBA,EAAMkL,UACa,UAAnBlL,EAAMkL,UACa,aAAnBlL,EAAMkL,UACNlL,EAAMkL,WAAalL,EAAM4K,aAEzB,MAAO,CACLrK,WAAYP,EAAMO,WAClB2G,MAAOlH,EAAM3B,IACbV,QAASqC,EAAMnM,GACfqL,OAAO,EACPF,UAAWgB,EAAM6B,UAItBjC,QAAO,SAACma,GAAD,OAAcA,KAStBC,EACF9G,GACAA,EACGtT,QAAO,SAACa,GACP,GACoB,YAAlBA,EAAKyK,UACa,UAAlBzK,EAAKyK,UACa,wBAAlBzK,EAAKyK,UACa,UAAlBzK,EAAKyK,UACa,UAAlBzK,EAAKyK,UACa,YAAlBzK,EAAKyK,UACa,SAAlBzK,EAAKyK,UACa,WAAlBzK,EAAKyK,SAEL,OAAOzK,KAEV/C,KAAI,SAAC+C,GACJ,MAAO,CACLvB,OAAO,EACPgI,MAAOzG,EAAKA,KACZpC,IAAKoC,EAAKpC,IACV6M,SAAUzK,EAAKyK,SACf5U,KAAM,OACN+iB,aAAc5Y,EAAK4Y,iBAUrBY,EAAoB,SAAC3W,EAAGpH,GAC5B,IAAIiE,EAAI,aAAOmZ,GAEf,GAAe,SAAXhW,EAAEhN,KAAiB,CAGrB6J,EAAKjE,GAAL,KAAsBoH,EAAE4D,MACxB,IAAIgT,EAAeF,EAAmBpa,QAAO,SAACI,GAC5C,GAAIA,EAAMkH,QAAU/G,EAAKjE,GAAL,KAClB,OAAO8D,KAIXG,EAAKjE,GAAL,SAA0Bge,EAAa,GAAGhP,SAC1C/K,EAAKjE,GAAL,KAAsBge,EAAa,GAAGhT,MACtC/G,EAAKjE,GAAL,KAAsBge,EAAa,GAAGb,aAClClZ,EAAKjE,GAAL,OAAwB,IAC1BiE,EAAKjE,GAAL,aACGiE,EAAKjE,GAAL,KAAsB,IAAQiE,EAAKjE,GAAL,QAIjCoH,EAAEtM,SACJmJ,EAAKjE,GAAL,OAAwBoH,EAAEtM,OAAOkI,MACjCiB,EAAKjE,GAAL,aACGiE,EAAKjE,GAAL,KAAsB,IAAQiE,EAAKjE,GAAL,QAInCqd,EAAepZ,IAWXga,EAAiB,WACrBZ,EAAe,GAAD,oBACTD,GADS,CAEZ,CACEna,KAAM,GACNia,OAAQ,EACRvX,MAAO,GACPqJ,SAAU,GACVuI,KAAM,EACN4F,aAAc,OAkCpB,OAfA/c,qBAAU,WACPgd,GACDtF,GAAa,kBAAMsF,EAAY5W,QAAO,SAAC3O,EAAGkc,GAAJ,OAAUlc,EAAIkc,EAAEoJ,eAAc,QAEnE,CAACC,IAYF,uCACE,eAAC,OAAD,CAAM9jB,GAAG,oBAAoBW,UAAU,qBAAvC,qBAIA,gBAAC,GAAD,CAAelB,MAAO,CAAE4H,KAAM,GAA9B,UACE,qDAEC2N,GACCD,GACAzO,GACA6d,GACAG,GACAE,GACAhe,EAAS,eAAC,GAAD,CAAS5G,QAAQ,SAAjB,SAA2BoV,KACrCoP,EACC,eAAC,GAAD,CAASxkB,QAAQ,SAAjB,SAA2BwkB,IAE3B,gBAACxW,GAAA,EAAD,CAAMC,SAhDQ,SAACC,GACrBA,EAAEC,iBACFlQ,EFxHwB,SAACylB,GAAD,8CAAY,WAAOzlB,EAAUS,GAAjB,yBAAAC,EAAA,sEAElCV,EAAS,CACPG,KAAMwkB,KAH0B,EAQ9BlkB,IADWE,EAPmB,EAOhCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZJ,SAgBXC,IAAMkP,KAAN,eAA2BsV,EAAQ5kB,GAhBxB,gBAgB1BM,EAhB0B,EAgB1BA,KAERnB,EAAS,CACPG,KAAMykB,GACNxjB,QAASD,IApBuB,kDA2BlB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM0kB,GACNzjB,QAASC,IAhCuB,0DAAZ,wDEyHtB0lB,CAAa,CACX3V,OACAyC,QACArF,QACAyX,cACA/Y,aACAyP,WAAY+D,MAuCV,UAEE,eAAC3Q,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBACA,eAAC,WAAD,UACG8hB,EAAe,IACd,eAAC,KAAD,CACE3jB,UAAU,eACVme,gBAAgB,SAChB+F,aAAcP,EAAe,GAC7BvF,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,OAAO,EACPC,cAAc,EACdC,QAASkF,EACTxjB,KAAK,WACLyN,SAAU,SAACT,GAAD,OA5HQ,SAACA,GACjC6V,EAAS7V,EAAE4D,OACX6D,EAASzH,EAAEtE,WACXwa,EAAclW,EAAE/C,YAyHe+Z,CAA0BhX,QAMjD,gBAACF,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAO1O,MAAO,CAAE+C,QAAS,IAA/C,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,cACZ5E,MAAO2C,EACP0Y,UAAQ,OAGZ,qBAAItlB,MAAO,CAAE+C,QAAS,IAAtB,yBAECshB,EAAY5b,KAAI,SAAC6V,EAAGrX,GACnB,OACE,gBAACvE,GAAA,EAAD,CAAKxB,UAAU,gBAA4BlB,MAAO,CAAEQ,MAAO,OAAQuC,QAAS,IAA5E,UACE,gBAACoL,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,OACV1O,MAAO,CACLQ,MAAO,OACP8I,cAAe,MACfxH,WAAY,SACZiB,QAAS,GACTiB,aAAc,GACd4D,KAAM,GATV,UAYE,eAACuG,GAAA,EAAKQ,MAAN,yBACA,eAAC,WAAD,UACGoW,EAAmB,IAClB,eAAC,KAAD,CACE7jB,UAAU,eACVme,gBAAgB,SAChB+F,aAAcL,EAAmB,GACjCzF,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,OAAO,EACPC,cAAc,EACdre,KAAK,OACLse,QAASoF,EACTjW,SAAU,SAACT,GAAD,OAAO2W,EAAkB3W,EAAGpH,WAO9C,gBAACkH,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,SACV1O,MAAO,CACLQ,MAAO,MACPsB,WAAY,SACZiB,QAAS,GACTiB,aAAc,IAPlB,UAUE,eAACmK,GAAA,EAAKQ,MAAN,6BACA,eAACR,GAAA,EAAKS,QAAN,CACEvN,KAAK,SACL9C,KAAK,OACLsQ,YAAY,eACZ5E,MAAOqU,EAAE6F,OACTrV,SAAU,SAACT,GAAD,OAAO2W,EAAkB3W,EAAGpH,SAI1C,gBAACkH,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,cACV1O,MAAO,CACLQ,MAAO,MACPsB,WAAY,SACZiB,QAAS,GACTiB,aAAc,IAPlB,UAUE,eAACmK,GAAA,EAAKQ,MAAN,2BACA,eAACR,GAAA,EAAKS,QAAN,CACEvN,KAAK,cACL9C,KAAK,OACLsQ,YAAY,OACZ5E,MAAOoa,EAAYpd,GAAOmd,aAE1BkB,UAAQ,OAIZ,gBAACnX,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,UACV1O,MAAO,CACLQ,MAAO,OAEPwD,aAAc,GACdsF,cAAe,YAPnB,UAUE,eAAC6E,GAAA,EAAKQ,MAAN,yBACA,sBAAK3O,MAAO,CAAEQ,MAAO,GAAIN,OAAQ,KAChCmkB,EAAYvgB,OAAS,IAAMmD,GAC1B,eAACrD,GAAA,EAAD,CACEsF,GAAIvG,KACJzB,UAAU,OACVK,QAAS2jB,EACTllB,MAAO,CACLiC,YAAa,EACbhC,gBAAiB,MACjB4I,OAAQ,GAPZ,SAUE,oBAAG3H,UAAU,kBAIO,IAAvBmjB,EAAYvgB,QACX,eAACF,GAAA,EAAD,CACE1C,UAAU,OACVK,QAAS,kBAjNL,SAAC0F,GACzB,IAAMiE,EAAI,aAAOmZ,GACjBnZ,EAAKqa,OAAOte,EAAO,GACnBqd,EAAepZ,GA8MoBsa,CAAkBve,IACjCjH,MAAO,CAAEC,gBAAiB,MAAO4I,OAAQ,GAH3C,SAKE,oBAAG3H,UAAU,wBA5Ge+F,MAmHxC,eAACvE,GAAA,EAAD,CAAK1C,MAAO,CAAE0B,QAAS,OAAQ+jB,WAAY,OAA3C,SACE,gBAACtX,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,YACV1O,MAAO,CACLQ,MAAO,MACPsB,WAAY,WACZiB,QAAS,GACTiB,aAAc,IAPlB,UAUE,eAACmK,GAAA,EAAKQ,MAAN,yBACA,eAACR,GAAA,EAAKS,QAAN,CACEvN,KAAK,YACL9C,KAAK,OACLsQ,YAAY,aACZ5E,MAAO6U,EAEPwG,UAAQ,SAKd,eAAC5iB,GAAA,EAAD,UACE,eAACkB,GAAA,EAAD,CACE5D,MAAO,CAAEC,gBAAiB,MAAO4I,OAAQ,GACzCtK,KAAK,SACL4B,QAAQ,UAHV,gCC6DCulB,GAzcU,SAAC,GAAwB,IAAtBviB,EAAqB,EAArBA,QAASwD,EAAY,EAAZA,MAC7Bgf,EAAWhf,EAAMkE,OAAOjM,GACxBoM,EAAQrE,EAAMkE,OAAOxJ,KAIrBjD,EAAWwB,cAEXgmB,EAAe/lB,aAAY,SAACC,GAAD,OAAWA,EAAM8lB,gBAEvCtR,EAGPsR,EAHF/e,QACO0N,EAELqR,EAFF9e,MACS0N,EACPoR,EADFlb,QAGI+Z,EAAkB5kB,aAAY,SAACC,GAAD,OAAWA,EAAM2kB,mBAG5CE,GAGLF,EAJF5d,QAIE4d,EAHF3d,OAKIgX,GAFF2G,EAFF/Z,QAEE+Z,EADF1d,SAGyBlH,aAAY,SAACC,GAAD,OAAWA,EAAMge,uBAI7C+H,GAEP/H,EAJFjX,QAIEiX,EAHFhX,MAGEgX,EAFFpT,SACAuT,EACEH,EADFG,eAGI6H,EAAgBjmB,aAAY,SAACC,GAAD,OAAWA,EAAMgmB,iBAC3Cjf,EAAoCif,EAApCjf,QAAgB6D,GAAoBob,EAA3Bhf,MAA2Bgf,EAApBpb,SAASmZ,EAAWiC,EAAXjC,OAKzB9kB,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SArCuC,EAuCrBiI,mBAAS,IAvCY,oBAuCxCiL,EAvCwC,KAuCjCiS,EAvCiC,OAwCrBld,mBAAS,IAxCY,oBAwCxC4F,EAxCwC,KAwCjCkJ,EAxCiC,OAyCT9O,mBAAS,CAC7C,CAAEkD,KAAM,GAAIia,OAAQ,EAAGvX,MAAO,GAAIqJ,SAAU,GAAIuI,KAAM,EAAG4F,aAAc,KA1C1B,oBAyCxCC,EAzCwC,KAyC3BC,EAzC2B,OA4CXtd,mBAAS,IA5CE,oBA4CxCsE,EA5CwC,KA4C5BiZ,EA5C4B,OA6Cbvd,mBAAS,GA7CI,oBA6CxC8X,EA7CwC,KA6C7BC,EA7C6B,OA8CK/X,mBAAS,IA9Cd,oBA8CxC+d,EA9CwC,KA8CpBgB,EA9CoB,OA+CL/e,mBAAS,IA/CJ,oBA+CxCgf,EA/CwC,KA+CzBC,EA/CyB,KAoD/Chb,mBAAQ,WACN7M,EAAS,CAAEG,KAAMukB,OAChB,CAAC1kB,IAEJ+I,QAAQC,IAAI4e,GAEZ/a,kBAAO,sBAAC,gCAAAnM,EAAA,yDACAG,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,UAIlC4L,EAPE,gCAQmB3L,IAAMC,IAAN,sCACU0L,GAC/B/L,GAVE,gBAQIM,EARJ,EAQIA,KAKR0mB,EAAiB1mB,EAAK,IAblB,2CAeL,CAACyL,EAAOjM,IAEXsI,qBAAU,WHnDuB,IAACzI,EGoD5B4V,IACFpW,EAAS,CAAEG,KAAMklB,KACjBtgB,EAAQY,KAAR,sBAGF3F,EAASoI,MACTpI,EAASslB,MACTtlB,EAAS8e,MACT9e,GH5DgCQ,EG4DL+mB,EH5DI,uCAAQ,WAAOvnB,EAAUS,GAAjB,uBAAAC,EAAA,sEAErCV,EAAS,CAAEG,KAAMokB,KAFoB,EAMjC9jB,IADWE,EALsB,EAKnCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVD,SAcdC,IAAMC,IAAN,uBAA0BV,GAAMK,GAdlB,gBAc7BM,EAd6B,EAc7BA,KAERnB,EAAS,CACPG,KAAMqkB,GACNpjB,QAASD,IAlB0B,kDAqBrCnB,EAAS,CACPG,KAAMskB,GACNrjB,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UA1BuB,0DAAR,4DG6D9B,CAACrB,EAAU+E,EAASwiB,EAAUnR,EAAezV,IAGhDkM,mBAAQ,WACN,GAAI4a,EAAkB,CACpB,IAAIf,EAAW7G,EACZtT,QAAO,SAACa,GACP,GACoB,YAAlBA,EAAKyK,UACa,UAAlBzK,EAAKyK,UACa,wBAAlBzK,EAAKyK,UACa,UAAlBzK,EAAKyK,UACa,UAAlBzK,EAAKyK,UACa,YAAlBzK,EAAKyK,UACa,SAAlBzK,EAAKyK,UACa,WAAlBzK,EAAKyK,UACS,UAAdzK,EAAKA,KAEL,OAAOA,KAEV/C,KAAI,SAAC+C,GACJ,MAAO,CACLvB,OAAO,EACPgI,MAAOzG,EAAKA,KACZpC,IAAKoC,EAAKpC,IACV6M,SAAUzK,EAAKyK,SACfmO,aAAc5Y,EAAK4Y,aAAe5Y,EAAK4Y,aAAe,MAI5D2B,EAAsB,aAAIjB,OAE3B,CAAC7G,EAAgB4H,IAEpB5a,mBAAQ,WACN,GAAIP,GAAWqa,EAAmB,IAAMV,EAAYvgB,QAAU,EAAG,CAC/D,IAAIoH,EAAO2Y,EAAOQ,YAAY5b,KAAI,SAACsC,EAAOpC,GACxC,IAAIud,EAAcnB,EACfpa,QAAO,SAACa,GAAD,OAAUT,EAAMb,OAASsB,EAAKyG,SACrCxJ,KAAI,SAAC6V,GACJ,MAAO,CACL8F,aAAc9F,EAAE8F,aACX9F,EAAE8F,aAAe,IAAQrZ,EAAMoZ,OAChC,MAIV,OAAO,6BACFpZ,GADL,IAEE9D,MAAO0B,EACPsJ,MAAOlH,EAAMb,KACbD,MAAOtB,EAAM,GACVud,EAAY,OAInB5B,EAAe,aAAIpZ,IACnBgZ,EAAS,CAAEja,OAAO,EAAMgI,MAAO4R,EAAO5R,QACtCsS,EAAcV,EAAOvY,YAAcuY,EAAOvY,YAC1CwK,EAAS+N,EAAOjX,UAEjB,CAACmY,EAAoBV,EAAaR,EAAQnZ,IAE7CO,mBAAQ,WACFoZ,GACFtF,EACEsF,EACG1Z,QAAO,SAACI,GAAD,OAAWA,EAAMqZ,gBACxB3W,QAAO,SAAC3O,EAAGkc,GACV,OAAOlc,EAAIkc,EAAEoJ,eACZ,MAGR,CAACC,IAEJ,IAAMW,GAAoB,SAAC3W,EAAGpH,GAC5B,IAAIiE,EAAI,aAAOmZ,GAEXhW,EAAEtM,SACJmJ,EAAKjE,GAAL,OAAwBoH,EAAEtM,OAAOkI,OAGnC,IAAIgb,EAAeF,EAAmBpa,QAAO,SAACI,GAC5C,OAAIA,EAAMkH,QAAU/G,EAAKjE,GAAL,MAET8D,EAAMkH,QAAU5D,EAAEtM,OADpBgJ,OACF,KAKLka,EAAanhB,OAAS,IACxBqD,QAAQC,IAAI6d,EAAa,IAEzB/Z,EAAKjE,GAAL,SAA0Bge,EAAa,GAAGhP,SAC1C/K,EAAKjE,GAAL,KAAsBge,EAAa,GAAGhT,MACtC/G,EAAKjE,GAAL,MAAuBge,EAAa,GAAGhT,MAEnC/G,EAAKjE,GAAL,OAAwB,IAC1BiE,EAAKjE,GAAL,aACEge,EAAa,GAAGb,aAAe,EAC1Ba,EAAa,GAAGb,aAAe,IAAQlZ,EAAKjE,GAAL,OACxC,IAIVqd,EAAepZ,IASXga,GAAiB,WACrBZ,EAAe,GAAD,oBACTD,GADS,CAEZ,CAAEna,KAAM,GAAIia,OAAQ,EAAGvX,MAAO,GAAIqJ,SAAU,GAAIuI,KAAM,OAoB1D,OACE,uCACE,eAAC,OAAD,CAAMje,GAAG,oBAAoBW,UAAU,qBAAvC,qBAIA,qBAAIlB,MAAO,CAAE6B,UAAW,UAAxB,SAAqCgiB,GAAUA,EAAO5R,QACtD,sBAAKjS,MAAO,CAAE4H,KAAM,GAApB,SACE,gBAAC,GAAD,WACE,sBACE5H,MAAO,CACLwH,gBAAgB,OAAD,OAASoF,EAAT,KACfpM,MAAO,OACPN,OAAQ,QACRyH,eAAgB,UAChBwe,iBAAkB,YAClB9c,mBAAoB,SACpBzB,KAAM,GAER1G,UAAU,cAEXoT,GAAiBzN,EACjB0N,GAAe,eAAC,GAAD,CAASpU,QAAQ,SAAjB,SAA2BoU,IAC1CoQ,EACC,eAAC,GAAD,CAASxkB,QAAQ,SAAjB,SAA2BwkB,IAE3B,gBAACxW,GAAA,EAAD,CAAMC,SA1CM,SAACC,GACrBA,EAAEC,iBAEFlQ,EHnH0B,SAACylB,GAAD,8CAAY,WAAOzlB,EAAUS,GAAjB,yBAAAC,EAAA,sEAEpCV,EAAS,CACPG,KAAM+kB,KAH4B,EAQhCzkB,IADWE,EAPqB,EAOlCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbF,SAiBbC,IAAMyQ,IAAN,uBACL+T,EAAOza,KACvBya,EACA5kB,GApBkC,gBAiB5BM,EAjB4B,EAiB5BA,KAMRnB,EAAS,CACPG,KAAMglB,GACN/jB,QAASD,IAEXnB,EAAS,CAAEG,KAAMqkB,GAAwBpjB,QAASD,IA3Bd,kDAiCpB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMilB,GACNhkB,QAASC,IAtCyB,0DAAZ,wDGoHxB2mB,CAAa,CACXhd,IAAKuc,EACL1T,MAAOA,EAAMA,MACbrF,QACAyX,cACA/Y,iBAiCI,UA0BE,qBAAItL,MAAO,CAAE+C,QAAS,GAAIlB,UAAW,UAArC,yBAECwiB,EAAY5b,KAAI,SAAC6V,EAAGrX,GACnB,OACE,gBAACvE,GAAA,EAAD,CAAKxB,UAAU,gBAAf,UACE,gBAACiN,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,OACV1O,MAAO,CACLQ,MAAO,OACP8I,cAAe,MACfxH,WAAY,SACZiB,QAAS,GACTiB,aAAc,GACd4D,KAAM,GATV,UAYE,eAACuG,GAAA,EAAKQ,MAAN,yBACA,eAACjM,GAAA,EAAD,IACA,eAAC,WAAD,UACGqiB,GACCV,EAAYpd,GAAOA,QAAUA,GAC3B,eAAC,KAAD,CACE/F,UAAU,gBACVme,gBAAgB,UAChB+F,aAAcf,EAAYpd,GAC1BqY,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,OAAO,EACPC,cAAc,EACdre,KAAK,OACLse,QAASoF,EACTjW,SAAU,SAACT,GAAD,OAAO2W,GAAkB3W,EAAGpH,WAOhD,gBAACkH,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,SACV1O,MAAO,CACLQ,MAAO,MACPsB,WAAY,SACZiB,QAAS,GACTiB,aAAc,IAPlB,UAUE,eAACmK,GAAA,EAAKQ,MAAN,6BACA,eAACR,GAAA,EAAKS,QAAN,CACEvN,KAAK,SACL9C,KAAK,OACLsQ,YAAY,eACZ5E,MAAOqU,EAAE6F,OACTrV,SAAU,SAACT,GAAD,OAAO2W,GAAkB3W,EAAGpH,SAI1C,gBAACkH,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,cACV1O,MAAO,CACLQ,MAAO,MACPsB,WAAY,SACZiB,QAAS,GACTiB,aAAc,IAPlB,UAUE,eAACmK,GAAA,EAAKQ,MAAN,2BACA,eAACR,GAAA,EAAKS,QAAN,CACEvN,KAAK,cACL9C,KAAK,OACLsQ,YAAY,OACZ5E,MACEoa,EAAYpd,GAAOmd,aAAe,EAC9BC,EAAYpd,GAAOmd,aAAazW,QAAQ,GACxC,EAEN2X,UAAQ,OAIZ,gBAACnX,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,UACV1O,MAAO,CACLQ,MAAO,OACPuC,QAAS,OACTiB,aAAc,GACdsF,cAAe,WACfzH,UAAW,UARf,UAWE,eAACsM,GAAA,EAAKQ,MAAN,yBACA,sBAAK3O,MAAO,CAAEQ,MAAO,GAAIN,OAAQ,KAChCmkB,EAAYvgB,OAAS,IAAMmD,GAC1B,eAACrD,GAAA,EAAD,CACEsF,GAAIvG,KACJpB,QAAS2jB,GACTllB,MAAO,CACLiC,YAAa,EACbhC,gBAAiB,MACjB4I,OAAQ,GANZ,SASE,oBAAG3H,UAAU,kBAIO,IAAvBmjB,EAAYvgB,QACX,eAACF,GAAA,EAAD,CACErC,QAAS,kBAlMP,SAAC0F,GACzB,IAAMiE,EAAI,aAAOmZ,GACjBnZ,EAAKqa,OAAOte,EAAO,GACnBqd,EAAepZ,GA+LsBsa,CAAkBve,IACjCjH,MAAO,CAAEC,gBAAiB,MAAO4I,OAAQ,GAF3C,SAIE,oBAAG3H,UAAU,wBAhHe+F,MAwHvC+e,GACC,gBAACtjB,GAAA,EAAD,CAAK1C,MAAO,CAAE0B,QAAS,OAAQkG,KAAM,GAArC,UACE,gBAACuG,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,eACV1O,MAAO,CACL4H,KAAM,EACN7E,QAAS,GACTiB,aAAc,IANlB,UASE,eAACmK,GAAA,EAAKQ,MAAN,4BACA,eAACR,GAAA,EAAKS,QAAN,CACEvN,KAAK,eACL9C,KAAK,OACLsQ,YAAY,gBACZ5E,MAAO+b,EAAcve,SAASmE,cAAc+B,QAAQ,GACpD2X,UAAQ,OAIZ,gBAACnX,GAAA,EAAKM,MAAN,CACEvF,GAAIvG,KACJ+L,UAAU,YACV1O,MAAO,CACL4H,KAAM,EACN7E,QAAS,GACTiB,aAAc,IANlB,UASE,eAACmK,GAAA,EAAKQ,MAAN,yBACA,eAACR,GAAA,EAAKS,QAAN,CACEvN,KAAK,YACL9C,KAAK,OACLsQ,YAAY,aACZ5E,MAAO6U,EAAUnR,QAAQ,GACzB2X,UAAQ,UAMhB,eAAC5iB,GAAA,EAAD,UACE,eAACkB,GAAA,EAAD,CACErF,KAAK,SACL4B,QAAQ,UACRH,MAAO,CAAEC,gBAAiB,MAAO4I,OAAQ,GAH3C,kC,mDCzSDwd,GAzJkB,SAAC,GAAiB,IAAfljB,EAAc,EAAdA,QAC5B/E,EAAWwB,cAEX0mB,EAAuBzmB,aAC3B,SAACC,GAAD,OAAWA,EAAMymB,yBAGRC,EAGPF,EAHFzf,QAEA0f,GACED,EAFFxf,MAEEwf,EADFC,uBAGIE,EAAkB5mB,aAAY,SAACC,GAAD,OAAWA,EAAMge,sBAC7CjX,EAAmC4f,EAAnC5f,QAAgBoX,GAAmBwI,EAA1B3f,MAA0B2f,EAAnBxI,gBAElByI,EAAiB7mB,aAAY,SAACC,GAAD,OAAWA,EAAM6mB,iBAEzCC,EAGPF,EAHF7f,QAEA8f,GACED,EAFF5f,MAEE4f,EADFC,eAGFxf,QAAQC,IAAIuf,GAEZ,IACQ5nB,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAERsI,qBAAU,WACJtI,GAAYA,EAAS0C,SACvBrD,EZ+C+B,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAEvCV,EAAS,CAAEG,KAAM0d,KAFsB,EAMnCpd,IADWE,EALwB,EAKrCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVC,SAahBC,IAAMC,IAAN,8BAAyCL,GAbzB,gBAa/BM,EAb+B,EAa/BA,KAERnB,EAAS,CACPG,KAAM2d,GACN1c,QAASD,IAjB4B,kDAwBvB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM4d,GACN3c,QAASC,IA7B4B,0DAAN,yDY9C/BrB,EAAS8e,MACT9e,Ef6IuB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAE/BV,EAAS,CAAEG,KAAMuZ,KAFc,EAM3BjZ,IADWE,EALgB,EAK7BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVP,SAaRC,IAAMC,IAAN,+BAA0CL,GAblC,gBAavBM,EAbuB,EAavBA,KAERnB,EAAS,CACPG,KAAMwZ,GACNvY,QAASD,IAjBoB,kDAwBf,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMyZ,GACNxY,QAASC,IA7BoB,0DAAN,0De3IvB0D,EAAQY,KAAK,YAEd,CAAC3F,EAAU+E,EAASpE,IAET4nB,EAAcle,KAAI,SAAC+C,GAAD,MAAW,CACzC9B,UAAW8B,EAAKpC,IAChBgb,aAAc5Y,EAAKsP,UAAYtP,EAAKqb,kBAKtC,OACE,uCACE,eAACnkB,GAAA,EAAD,CAAKxB,UAAU,qBAAf,SACE,eAACyB,GAAA,EAAD,UACE,sDAIF6jB,GAAyB3f,GAAW+f,EACpC,eAAC,GAAD,IAEA,qCAsBE,gBAAC5W,GAAA,EAAD,CAAOG,OAAK,EAACD,UAAQ,EAAC/P,QAAQ,QAA9B,UACE,iCACE,8BACE,8BACE,iDAILomB,EAAsB9d,KAAI,SAACgR,EAAW9Q,GACrC,OACE,wBAAO3I,MAAO,CAAEC,gBAAiB,SAAjC,SACE,qBAAID,MAAO,CAAE4H,KAAM,EAAG3H,gBAAiB,SAAvC,SACE,gBAAC6mB,GAAA,EAAD,CACE9mB,MAAO,CAAEQ,MAAO,OAAQP,gBAAiB,SAD3C,UAGE,eAAC8mB,GAAA,EAAD,CACEC,WAAY,eAAC,KAAD,IACZlmB,gBAAc,kBACdlC,GAAG,iBACHoB,MAAO,CAAEQ,MAAO,QAJlB,SAME,8BAAKiZ,EAAUrQ,QAGjB,eAAC6d,GAAA,EAAD,CAAkBjnB,MAAO,CAAEQ,MAAO,QAAlC,SACE,gBAACwP,GAAA,EAAD,CACEE,UAAQ,EACRC,OAAK,EACLhQ,QAAQ,QACRH,MAAO,CAAEQ,MAAO,QAJlB,UAME,iCACE,gCACE,+CACA,2CACA,8CACA,+CACA,8CAGHyd,GACCA,EAAexV,KAAI,SAACsC,EAAOpC,GAEzB,GAAIoC,EAAMkL,WAAawD,EAAUrQ,IAC/B,OACE,iCACE,gCACE,8BACG2B,EAAMmc,YAAc,IAAIlN,KAAKjP,EAAMmc,YACjCtM,cACAQ,MAAM,EAAG,MAEd,8BAAKrQ,EAAMS,OACX,8BAAKT,EAAMoc,WACX,uCAASpc,EAAMqZ,gBACf,8BAAKrZ,EAAMsQ,aAVH1S,iBAnCmBA,e,sCCtE3Dye,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ/mB,MAAO,QAETgnB,QAAS,CACPplB,SAAUklB,EAAMG,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBvlB,SAAUklB,EAAMG,WAAWC,QAAQ,IACnCxlB,MAAOolB,EAAMM,QAAQ1d,KAAK2d,WAE5BC,KAAM,CACJC,cAAe,SACf7nB,OAAQ,GACRM,MAAO,IAETwnB,QAAS,CACPlmB,WAAY,UAEdmmB,OAAQ,CACN7a,UAAW,UAEb8a,OAAQ,CACNC,WAAW,aAAD,OAAeb,EAAMM,QAAQQ,SACvCrlB,QAASukB,EAAMvF,QAAQ,EAAG,IAE5BsG,KAAM,CACJnmB,MAAOolB,EAAMM,QAAQU,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,kBAkhBPC,GA7gBU,SAAC,GAAwB,IAAtBtlB,EAAqB,EAArBA,QAAqB,KAAZwD,MACXK,oBAAS,IADc,oBACxC0hB,EADwC,KAClCC,EADkC,OAEX3hB,oBAAS,GAFE,oBAExC4hB,EAFwC,KAE5BC,EAF4B,OAGvB7hB,mBAAS,IAHc,oBAGxC3F,EAHwC,KAGlC2N,EAHkC,OAI3BhI,mBAAS,GAJkB,oBAIxCpI,EAJwC,KAIpCkqB,EAJoC,OAKnB9hB,mBAAS,GALU,oBAKxC+hB,EALwC,KAKhCC,EALgC,OAMfhiB,mBAAS,IANM,oBAMxCiiB,EANwC,KAM9BC,EAN8B,OAOLliB,oBACxC,IAAIgT,MAAOY,cAAcQ,MAAM,EAAG,KARW,oBAOxC+N,EAPwC,KAOzBC,EAPyB,OAUbpiB,oBAAS,GAVI,oBAUxCqiB,EAVwC,KAU7BC,EAV6B,OAWLtiB,mBAAS,GAXJ,oBAWxCuiB,EAXwC,KAWzBC,EAXyB,OAYDxiB,mBAAS,IAZR,oBAYxCyiB,EAZwC,KAYvBC,EAZuB,OAab1iB,mBAAS,IAbI,oBAaxC2iB,EAbwC,KAa7BC,EAb6B,OAcC5iB,oBAC9C,IAAIgT,MAAOY,cAAcQ,MAAM,EAAG,KAfW,oBAcxCyO,EAdwC,KActBC,GAdsB,KAkB/C3iB,QAAQC,IAAImiB,GAEZ,IAAMQ,GAAU3C,KACVhpB,GAAWwB,cAEXoqB,GAAkBnqB,aAAY,SAACC,GAAD,OAAWA,EAAMkqB,mBAEnDnjB,GAIEmjB,GAJFnjB,QAGA4S,IACEuQ,GAHFljB,MAGEkjB,GAFFtf,QAEEsf,GADFvQ,WAGIwQ,GAAuBpqB,aAC3B,SAACC,GAAD,OAAWA,EAAMmqB,wBAMjBhM,IACEgM,GAJFpjB,QAIEojB,GAHFnjB,MAGEmjB,GAFFvf,QAEEuf,GADFhM,gBAGIiM,GAAuBrqB,aAC3B,SAACC,GAAD,OAAWA,EAAMoqB,wBAKR1U,IACP0U,GAHFrjB,QAGEqjB,GAFFpjB,MAEEojB,GADFxf,SAGIyf,GAAuBtqB,aAC3B,SAACC,GAAD,OAAWA,EAAMqqB,wBAKR3V,IACP2V,GAHFtjB,QAGEsjB,GAFFrjB,MAEEqjB,GADFzf,SAIM3L,GADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAERsI,qBAAU,WACHtI,IAAaA,GAAS0C,SAGzBrD,GhB9DyB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAEjCV,EAAS,CAAEG,KAAMiZ,KAFgB,EAM7B3Y,IADWE,EALkB,EAK/BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVL,SAcVC,IAAMC,IAAN,wBACIL,GAfM,gBAczBM,EAdyB,EAczBA,KAKRnB,EAAS,CACPG,KAAMkZ,GACNjY,QAASD,IArBsB,kDA4BjB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMmZ,GACNlY,QAASC,IAjCsB,0DAAN,yDgB+DzBrB,Gb7E8B,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAEtCV,EAAS,CAAEG,KAAMud,KAFqB,EAMlCjd,IADWE,EALuB,EAKpCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVA,SAafC,IAAMC,IAAN,6BAAwCL,GAbzB,gBAa9BM,EAb8B,EAa9BA,KAERnB,EAAS,CACPG,KAAMwd,GACNvc,QAASD,IAjB2B,kDAwBtB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMyd,GACNxc,QAASC,IA7B2B,0DAAN,0Da0E9B0D,EAAQY,KAAK,WAMXyR,IAAiBhB,MACnBpW,GAAS,CAAEG,KAAMge,KACjBne,GAAS,CAAEG,KAAMue,KACjB3Z,EAAQY,KAAK,qBACbiL,EAAQ,IACRga,EAAU,GACVI,GAAiB,IAAIpP,MAAOY,cAAcQ,MAAM,EAAG,KACnDkO,GAAa,GACbE,EAAiB,GACjBE,EAAmB,IACnBE,EAAa,IACbE,IAAoB,IAAI9P,MAAOY,cAAcQ,MAAM,EAAG,QAEvD,CAAChd,GAAU+E,EAASqS,GAAehB,GAAezV,KAErDkM,mBAAQ,YACa,WACjB,GAAI5J,EAAM,CACR,IAAI+oB,EAAenM,GAAetT,QAChC,SAACI,GAAD,OAAWA,EAAMS,OAASnK,KAExB4F,EAAQmjB,EAAa,IAAMA,EAAa,GAAGrB,OAAOjlB,OAAS,EAE3DsmB,GAAgBnjB,GAAS,GAC3B2iB,GAAa,kBAAMQ,EAAa,GAAGrB,OAAO9hB,GAAOmC,OACjDogB,GAAiB,kBAAMY,EAAa,GAAGrB,OAAO9hB,GAAOojB,mBAC3CpjB,IACV2iB,EAAa,IACbJ,EAAiB,KAKvBc,KACC,CAACrM,GAAgB5c,IAEpB,IAgCMkpB,GAAczV,MAAM0V,KACxB,IAAIC,IAAIhR,GAAUhR,KAAI,SAACsC,GAAD,OAAWA,EAAMrB,eACvCghB,MAAK,SAAC5rB,EAAGkc,GAAJ,OAAUlc,EAAE6rB,cAAc3P,MAE3B4P,GAAkBL,GAAY9hB,KAAI,SAACsC,GAAD,MAAY,CAClDkH,MAAOlH,EACPd,OAAO,MAGH4gB,GAAQ,GA+Dd,OA7DAN,GAAY5f,QAAO,SAACa,GAClB,IAAIsf,EAAM,EACVrR,GAAUhR,KAAI,SAACsC,EAAOpC,GAChBoC,EAAMrB,YAAc8B,IACtBsf,GAAY/f,EAAMgQ,WAElB8P,GAAMrf,GAAQ,CACZuf,WAAYD,GAGd7M,GAAexV,KAAI,SAACuiB,EAAIriB,GACtB,GAAIqiB,EAAGxf,OAASA,EAAM,CACpB,IAAIyf,EAAQ,EAEZ,GAAID,EAAGjC,OAAO,GASZ,IAPA,IAAImC,EACFF,EAAGjC,OAAOiC,EAAGjC,OAAOjlB,OAAS,GAAGumB,eAMzB/L,EAAI,EAAGA,EAAI0M,EAAGjC,OAAOjlB,OAAQwa,IAAK,CACzC,IACI6M,EAAY,IAAInR,KAAKgR,EAAGjC,OAAOzK,GAAG8M,YAClCC,EAAaL,EAAGjC,OAAOzK,GAAGgN,SAC1B,IAAItR,KAAKgR,EAAGjC,OAAOzK,GAAGgN,UACtB,IAAItR,KAEJuR,EAAWjZ,KAAKC,MAClBD,KAAKkZ,KAAKL,EAAYE,GAPT,QAUXI,EACuC,GAAxCC,SAASV,EAAGjC,OAAOzK,GAAG+L,gBAAwB,IAEjDY,EAAQM,EAAWE,EAAcR,EAEjC9jB,QAAQC,IAAIqkB,GACZtkB,QAAQC,IAAI6jB,GAEZJ,GAAMrf,GAAQ,CACZmgB,cAAeV,EACfF,WAAYD,EACZT,eAAgBa,eAYhC/jB,QAAQC,IAAIyjB,IAKV,uCACE,gBAACnoB,GAAA,EAAD,CAAKxB,UAAU,qBAAf,UACE,eAACyB,GAAA,EAAD,UACE,6CAEF,gBAACiB,GAAA,EAAD,CAAQ1C,UAAU,OAAOK,QAAS,kBAAMonB,GAAQ,IAAhD,UACE,oBAAGznB,UAAU,gBADf,mBAIA,gBAAC0qB,GAAA,EAAD,CAAOlD,KAAMA,EAAMmD,OAAQ,kBAAMlD,GAAQ,IAAzC,UACE,eAACiD,GAAA,EAAMjsB,OAAP,CAAcmsB,aAAW,EAAzB,SACE,eAACF,GAAA,EAAM3iB,MAAP,6BAEF,eAAC2iB,GAAA,EAAM5iB,KAAP,UACE,gBAACmF,GAAA,EAAD,CAAMC,SAvHM,SAACC,GACrBA,EAAEC,iBACFlQ,Gb5BF,SAAC6f,GAAD,8CAAoB,WAAO7f,EAAUS,GAAjB,yBAAAC,EAAA,sEAEhBV,EAAS,CACPG,KAAM6d,KAHQ,EAQZvd,IADWE,EAPC,EAOdC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZtB,SAgBOC,IAAMkP,KAAN,sBAErB0P,EACAhf,GAnBc,gBAgBRM,EAhBQ,EAgBRA,KAMRnB,EAAS,CACPG,KAAM8d,GACN7c,QAASD,IAxBK,kDA+BA,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM+d,GACN9c,QAASC,IApCK,0DAApB,wDa6BIssB,CAAqB,CACnBvc,KAAMzQ,GACNkX,SAAU,SACVzK,KAAMnK,EACN0nB,OAAQ,CACN,CACEsB,eAAgBtB,EAChBqC,WAAY,IAAIpR,KAAKmP,GAAevO,gBAGxCoR,YAAY,IAAIhS,MAAOY,kBA0GnB,UACE,gBAACzM,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAO1O,MAAO,CAAE+C,QAAS,IAA/C,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,kBACZ5E,MAAO5I,EACPyN,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAEtM,OAAOkI,aAItC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,KAAK1O,MAAO,CAAE+C,QAAS,IAA7C,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,mCAGA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,WACZ5E,MAAOrL,EACPkQ,SAAU,SAACT,GAAD,OAAOya,EAAMza,EAAEtM,OAAOkI,aAIpC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAW1O,MAAO,CAAE+C,QAAS,IAAnD,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,kBACZ5E,MAAOgf,EACPna,SAAU,SAACT,GAAD,OAAO6a,EAAY7a,EAAEtM,OAAOkI,aAI1C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,SAAS1O,MAAO,CAAE+C,QAAS,IAAjD,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,4BACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,eACZ5E,MAAO8e,EAAO7N,iBACdpM,SAAU,SAACT,GAAD,OAAO2a,EAAU3a,EAAEtM,OAAOkI,aAIxC,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAiB1O,MAAO,CAAE+C,QAAS,IAAzD,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,4BACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,uBACZ5E,MAAOkf,EACPra,SAAU,SAACT,GAAD,OAAO+a,EAAiB/a,EAAEtM,OAAOkI,aAI/C,eAACvH,GAAA,EAAD,CAAK1C,MAAO,CAAEyE,OAAQ,IAAtB,SACE,eAACb,GAAA,EAAD,CACEzD,QAAQ,UACR5B,KAAK,SACLgD,QAAS,kBAAMonB,GAAQ,IAHzB,oCAYR,gBAAC/kB,GAAA,EAAD,CAAQ1C,UAAU,OAAOK,QAAS,kBAAMsnB,GAAc,IAAtD,UACE,oBAAG3nB,UAAU,gBADf,oBAIA,gBAAC0qB,GAAA,EAAD,CAAOlD,KAAME,EAAYiD,OAAQ,kBAAMhD,GAAc,IAArD,UACE,eAAC+C,GAAA,EAAMjsB,OAAP,CAAcmsB,aAAW,EAAzB,SACE,eAACF,GAAA,EAAM3iB,MAAP,8BAEF,eAAC2iB,GAAA,EAAM5iB,KAAP,UACE,gBAACmF,GAAA,EAAD,CAAMC,SAhLY,SAACC,GAC3BA,EAAEC,iBACFlQ,GbJF,SAAC6f,GAAD,8CAAoB,WAAO7f,EAAUS,GAAjB,yBAAAC,EAAA,sEAEhBV,EAAS,CACPG,KAAMoe,KAHQ,EAQZ9d,IADWE,EAPC,EAOdC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAbtB,SAiBOC,IAAMyQ,IAAN,sBAErBmO,EACAhf,GApBc,gBAiBRM,EAjBQ,EAiBRA,KAMRnB,EAAS,CACPG,KAAMqe,GACNpd,QAASD,IAEXnB,EAAS,CAAEG,KAAMye,GAAgCxd,QAASD,IA3B1C,kDAiCA,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMse,GACNrd,QAASC,IAtCK,0DAApB,wDaKIwsB,CAAqB,CACnBzc,KAAMzQ,GACNyM,KAAMnK,EACNgpB,eAAgBd,EAChB6B,WAAY,IAAIpR,KAAK6P,GAAkBjP,cACvCyO,UAAWA,EACXzqB,GAAI+qB,MAuKA,UACE,gBAACxb,GAAA,EAAKM,MAAN,CAAYC,UAAU,OAAO1O,MAAO,CAAE+C,QAAS,IAA/C,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBACA,eAAC,KAAD,CACE7B,UAAU,eACVme,gBAAgB,SAEhBC,YAAY,EACZC,WAAYqL,GACZpL,aAAa,EACbC,OAAO,EACPC,cAAc,EACdre,KAAK,QACLse,QAASiL,GACT9b,SAAU,SAACT,GAAD,OAAOW,EAAQX,EAAE4D,aAI/B,gBAAC9D,GAAA,EAAKM,MAAN,CAAYC,UAAU,WAAW1O,MAAO,CAAE+C,QAAS,IAAnD,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,kBACZ5E,MAAOwf,EACP3a,SAAU,SAACT,GAAD,OAAOqb,EAAmBrb,EAAEtM,OAAOkI,aAIjD,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,SAAS1O,MAAO,CAAE+C,QAAS,IAAjD,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,4BACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,eACZ5E,MAAOsf,GAAiBA,EAAcrO,iBACtCpM,SAAU,SAACT,GAAD,OAAOmb,EAAiBnb,EAAEtM,OAAOkI,aAI/C,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,aAAa1O,MAAO,CAAE+C,QAAS,IAArD,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,wBACA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,uBACZ5E,MAAO4f,EACP/a,SAAU,SAACT,GAAD,OAAOyb,GAAoBzb,EAAEtM,OAAOkI,aAIlD,gBAACkE,GAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAiB1O,MAAO,CAAE+C,QAAS,IAAzD,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBACA,yBAEA,eAACoL,GAAA,EAAK6D,MAAN,CACE4N,QAAM,EACN3N,MAAM,YACN5Q,KAAK,SACL9C,KAAK,QACLK,GAAE,WACFstB,gBAAc,EACdpd,SAAU,kBAAMwa,GAAa,MAG/B,eAACnb,GAAA,EAAK6D,MAAN,CACE4N,QAAM,EACN3N,MAAM,gBACN5Q,KAAK,SACL9C,KAAK,QACLK,GAAE,WACFkQ,SAAU,kBAAMwa,GAAa,SAIjC,eAAC5mB,GAAA,EAAD,CAAK1C,MAAO,CAAEyE,OAAQ,IAAtB,SACE,eAACb,GAAA,EAAD,CACEzD,QAAQ,UACR5B,KAAK,SACLgD,QAAS,kBAAMsnB,GAAc,IAH/B,wCAgBRhiB,IACA,qCACE,gBAACmJ,GAAA,EAAD,CAAOI,YAAU,EAACF,UAAQ,EAAC/P,QAAQ,QAAnC,UACE,iCACE,0BAEDoqB,GAAY9hB,KAAI,SAACpH,EAAMsH,GACtB,OACE,wBAAO3I,MAAO,CAAEC,gBAAiB,SAAjC,SACE,qBAAID,MAAO,CAAEC,gBAAiB,SAA9B,SACE,gBAAC6mB,GAAA,EAAD,CACE9mB,MAAO,CAAEQ,MAAO,OAAQP,gBAAiB,SAD3C,UAGE,eAAC8mB,GAAA,EAAD,CACEC,WAAY,eAAC,KAAD,IACZlmB,gBAAc,kBACdlC,GAAG,iBACHoB,MAAO,CAAEQ,MAAO,OAAQoH,KAAM,GAJhC,SAME,gCACE,sBAAK1G,UAAW6oB,GAAQ9B,OAAxB,SACE,eAACkE,GAAA,EAAD,CAAYjrB,UAAW6oB,GAAQvC,QAA/B,SACGnmB,MAIL,sBAAKH,UAAW6oB,GAAQ9B,OAAxB,SACE,gBAACkE,GAAA,EAAD,CAAYjrB,UAAW6oB,GAAQpC,iBAA/B,8BACoBkD,GAAMxpB,GAAM0pB,gBAIlC,sBAAK7pB,UAAW6oB,GAAQ9B,OAAxB,SACE,gBAACkE,GAAA,EAAD,CAAYjrB,UAAW6oB,GAAQpC,iBAA/B,kCACwBkD,GAAMxpB,GAAMgpB,oBAItC,sBAAKnpB,UAAW6oB,GAAQ9B,OAAxB,SACE,gBAACkE,GAAA,EAAD,CAAYjrB,UAAW6oB,GAAQpC,iBAA/B,oCAEGkD,GAAMxpB,GAAMsqB,gBAETd,GAAMxpB,GAAMsqB,cACZd,GAAMxpB,GAAM0pB,YACZpd,QAAQ,aAMpB,eAACsZ,GAAA,EAAD,CAAkBjnB,MAAO,CAAEQ,MAAO,QAAlC,SACE,gBAACwP,GAAA,EAAD,CACEE,UAAQ,EACRC,OAAK,EACLhQ,QAAQ,QACRH,MAAO,CAAEQ,MAAO,QAJlB,UAME,iCACE,gCACE,+CACA,kDAGHiZ,IACCA,GAAUhR,KAAI,SAACsC,EAAOpC,GAEpB,GAAIoC,EAAMrB,YAAcrI,EACtB,OACE,iCACE,gCACE,8BACG,IAAI2Y,KACHjP,EAAM2Q,WACN0Q,uBAGJ,uCAASrhB,EAAMgQ,kBARPpS,iBA7DmBA,eC9PlD8f,GAlMU,SAAC,GAAwB,IAAtBtlB,EAAqB,EAArBA,QACpB/E,GADyC,EAAZuI,MAClB/G,eAEXysB,EAAiBxsB,aAAY,SAACC,GAAD,OAAWA,EAAMusB,kBAC5CxlB,EAAuCwlB,EAAvCxlB,QAAgB6D,GAAuB2hB,EAA9BvlB,MAA8BulB,EAAvB3hB,SAAS+O,EAAc4S,EAAd5S,UAE3B2H,EAAcvhB,aAAY,SAACC,GAAD,OAAWA,EAAMshB,eAK/CC,GACED,EAJFva,QAIEua,EAHFta,MAGEsa,EAFF1W,QAEE0W,EADFC,SAIIxH,EAAqBha,aAAY,SAACC,GAAD,OAAWA,EAAMga,kBAE7CC,EAGPF,EAHFhT,QAMM9H,GAHJ8a,EAFF/S,MAEE+S,EADFC,eAGgBja,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,UAvBuC,EAyBbiI,mBAAS,IAAIgT,MAzBA,oBAyBxCV,EAzBwC,KAyB7BW,EAzB6B,OA0BjBjT,mBAAS,IAAIgT,MA1BI,oBA0BxCT,EA1BwC,KA0B/BW,EA1B+B,OA2BXlT,oBAAS,GA3BE,oBA2BxCmT,EA3BwC,KA2B5BC,EA3B4B,KA6B/C/S,qBAAU,WACHtI,GAAaA,EAAS0C,SAGzBrD,EjB4KwB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAEhCV,EAAS,CAAEG,KAAMwa,KAFe,EAM5Bla,IADWE,EALiB,EAK9BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVN,SAaTC,IAAMC,IAAN,gCAA2CL,GAblC,gBAaxBM,EAbwB,EAaxBA,KAERnB,EAAS,CACPG,KAAMya,GACNxZ,QAASD,IAjBqB,kDAwBhB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM0a,GACNzZ,QAASC,IA7BqB,0DAAN,yDiB3KxBrB,EAAS6iB,GAAY,SAHrB9d,EAAQY,KAAK,YAKd,CAAC3F,EAAU+E,EAASpE,EAAU2L,IAEjC,IAAM4P,EAAiB,CACrBhB,UAAWA,EACXC,QAASA,EACTgB,IAAK,aAGP,SAASC,EAAaC,GACpBR,EAAaQ,EAAOC,UAAUpB,WAC9BY,EAAWO,EAAOC,UAAUnB,SAG9B,IAAMoB,EAAe,WACnBP,GAAc,GACdhc,EACEib,GAAmBC,EAAUsB,cAAerB,EAAQqB,iBAIpD0R,EAAY,EAChBjL,GACEA,EAAQ5Y,KAAI,SAACmC,GACG,SAAVA,EAAExB,KAA4B,OAAVwB,EAAExB,MACxBkjB,GAAwB1hB,EAAE2hB,UAIhC,IAAMC,EACJF,GAAa7S,EAAU,IAAM6S,EAAYZ,SAASjS,EAAU,GAAGqB,WAEjE,OACE,uCACE,eAACpY,GAAA,EAAD,CAAKxB,UAAU,qBAAf,SACE,eAACyB,GAAA,EAAD,UACE,wDAIHoX,IAAiBlT,GAAW4S,GAAa6S,GAAaE,EACrD,uCACE,uBAAKtrB,UAAU,gBAAf,UACGiZ,GACC,uBAAKjZ,UAAU,SAAf,UACE,eAAC,mBAAD,CACEuZ,OAAQ,CAACH,GACTxL,SAAU0L,IAEZ,eAAC5W,GAAA,EAAD,CAAQrC,QAASoZ,EAAjB,iCAGJ,eAAC/W,GAAA,EAAD,CACE1C,UAAU,sBACVf,QAAQ,WACRoB,QAAS,kBAAM6Y,GAAeD,IAHhC,4BAQF,gBAACnK,GAAA,EAAD,CAAOC,SAAO,EAACG,YAAU,EAAClP,UAAU,WAApC,UACE,iCACE,gCACE,2CACA,yDAGJ,qCACE,mCACE,gCACE,gDACA,2CAGF,gCACE,6CACA,uCAASorB,EAAUpR,uBAGrB,gCACE,gDACA,uCAASzB,EAAU,GAAGqB,UAAUI,uBAGlC,gCACE,gDACA,uCAASsR,EAAatR,uBAGxB,gCACE,gDACA,iCAAOsR,EAAeF,EAAa,KAAK3e,QAAQ,GAAhD,qBAQV,uCACE,uBAAKzM,UAAU,gBAAf,UACGiZ,GACC,uBAAKjZ,UAAU,SAAf,UACE,eAAC,mBAAD,CACEuZ,OAAQ,CAACH,GACTxL,SAAU0L,IAEZ,eAAC5W,GAAA,EAAD,CAAQrC,QAASoZ,EAAjB,iCAGJ,eAAC/W,GAAA,EAAD,CACE1C,UAAU,sBACVf,QAAQ,WACRoB,QAAS,kBAAM6Y,GAAeD,IAHhC,4BAQF,gBAACnK,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,4CACA,+CACA,uCACA,iDACA,uCACA,mDACA,+CACA,mDAGJ,yC,oBCiSGurB,GAlcI,SAAC,GAAiB,IAAftpB,EAAc,EAAdA,QAAc,EAGV6D,oBAAS,GAHC,oBAG3B0hB,EAH2B,KAGrBC,EAHqB,OAII3hB,oBAAS,GAJb,oBAI3B0lB,EAJ2B,KAIdC,EAJc,OAMA3lB,mBAAS,IANT,oBAM3Bmb,EAN2B,KAMhByK,EANgB,OAOV5lB,oBAAS,IAAIgT,MAAOY,cAAcQ,MAAM,EAAG,KAPjC,oBAO3BgC,EAP2B,KAOrByP,EAPqB,OAQI7lB,oBACpC,IAAIgT,MAAOY,cAAcQ,MAAM,EAAG,KATF,oBAQ3B0R,EAR2B,KAQdC,EARc,OAWA/lB,mBAAS,IAXT,oBAW3BgmB,EAX2B,KAWhBC,EAXgB,KAa5B7uB,EAAWwB,cAEXstB,EAAgBrtB,aAAY,SAACC,GAAD,OAAWA,EAAMotB,iBAExCC,EAIPD,EAJFrmB,QACOumB,EAGLF,EAHFpmB,MAEAua,GACE6L,EAFFxiB,QAEEwiB,EADF7L,SAGIgM,EAAcxtB,aAAY,SAACC,GAAD,OAAWA,EAAMutB,eAItCC,GACPD,EAHFxmB,QAGEwmB,EAFFvmB,MAEEumB,EADF3iB,SAGI6iB,EAAgB1tB,aAAY,SAACC,GAAD,OAAWA,EAAMytB,iBAIxCC,GACPD,EAHF1mB,QAGE0mB,EAFFzmB,MAEEymB,EADF7iB,SAGI+iB,EAAkB5tB,aAAY,SAACC,GAAD,OAAWA,EAAM2tB,mBAE1CC,EAIPD,EAJF5mB,QACO8mB,EAGLF,EAHF3mB,MACS8mB,EAEPH,EAFF/iB,QACA+O,EACEgU,EADFhU,UAGIsG,EAAkBlgB,aAAY,SAACC,GAAD,OAAWA,EAAMigB,mBAI1C8N,GACP9N,EAHFlZ,QAGEkZ,EAFFjZ,MAEEiZ,EADFrV,SAKI0X,EAAiBviB,aAAY,SAACC,GAAD,OAAWA,EAAMsiB,kBAIzC0L,GACP1L,EAHFvb,QAGEub,EAFFtb,MAEEsb,EADF1X,SAMM3L,EADUc,aAAY,SAACC,GAAD,OAAWA,EAAMd,aACvCD,SAhE0B,EAkEJiI,mBAC5Bqa,GACEA,EAAQ5Y,KAAI,SAACsC,GACX,IAAmB,IAAfA,EAAM0Q,KACR,OAAO,MAtEmB,oBAkE3BsS,EAlE2B,KAkElBC,EAlEkB,KA4ElC3mB,qBAAU,WACJtI,GAAYA,EAAS0C,SACvBrD,EX3BuB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAE/BV,EAAS,CAAEG,KAAM6hB,KAFc,EAM3BvhB,IADWE,EALgB,EAK7BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVP,SAcRC,IAAMC,IAAN,sBAAiCL,GAdzB,gBAcvBM,EAduB,EAcvBA,KAGRnB,EAAS,CACPG,KAAM8hB,GACN7gB,QAASD,IAnBoB,kDA0Bf,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAM+hB,GACN9gB,QAASC,IA/BoB,0DAAN,yDW4BvBrB,ElBSyB,uCAAM,WAAOA,EAAUS,GAAjB,yBAAAC,EAAA,sEAEjCV,EAAS,CAAEG,KAAMoZ,KAFgB,EAM7B9Y,IADWE,EALkB,EAK/BC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAVL,SAcVC,IAAMC,IAAN,wBACIL,GAfM,gBAczBM,EAdyB,EAczBA,KAMRnB,EAAS,CACPG,KAAMqZ,GACNpY,QAASD,IAtBsB,kDA6BjB,kCAJVE,EACJ,KAAMC,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UAEVrB,EAASD,MAEXC,EAAS,CACPG,KAAMsZ,GACNrY,QAASC,IAlCsB,0DAAN,0DkBPzB0D,EAAQY,KAAK,WAGX+pB,GAAkBR,GAAeE,KACnCpvB,EAAS,CAAEG,KAAMyiB,KACjB7d,EAAQY,KAAK,mBACb6oB,EAAa,KAGXiB,IACF1qB,EAAQY,KAAK,mBACbgpB,GAAe,IAAI/S,MAAOY,cAAcQ,MAAM,EAAG,KACjD6R,EAAa,OAEd,CACD7uB,EACA+E,EACApE,EACA6uB,EACAE,EACAR,EACAE,EACAK,IAGF,IA0CMI,GAAa,SAACtlB,GAClBulB,GAAYvlB,GACZvK,EX1CuB,SAACijB,GAAD,8CAAa,WAAOjjB,GAAP,iBAAAU,EAAA,sEAEpCV,EAAS,CAAEG,KAAMgiB,KAEjBpZ,QAAQC,IAAIia,EAAQ8M,eAJgB,SAMb9uB,IAAMyQ,IAAN,0CACcuR,EAAQ8M,eAC3C9M,GARkC,gBAM5B9hB,EAN4B,EAM5BA,KAKRnB,EAAS,CACPG,KAAMiiB,GACNhhB,QAASD,IAbyB,kDAgBpCnB,EAAS,CACPG,KAAMkiB,GACNjhB,QACE,KAAME,UAAY,KAAMA,SAASH,KAAKE,QAClC,KAAMC,SAASH,KAAKE,QACpB,KAAMA,UArBsB,0DAAb,sDW2CrB2uB,CAAY,CACVD,cAAehM,EACf/E,KAAM,IAAIpD,KAAKoD,GAAMxC,kBAcrByT,GAAuB,SAAChgB,GAC5BA,EAAEC,iBACFlQ,EACEob,GAAgB,CAAEpQ,IAAK4jB,EAAW/N,SAAU,IAAIjF,KAAK8S,GAAalS,cAAea,MAAM,MAWrFyS,GAAc,SAACvlB,GACnB,IAAIuC,EAAI,aAAO6iB,GACf7iB,EAAKvC,IAAO,EACZqlB,EAAW9iB,IAab,OACE,qCACE,gBAACojB,GAAA,EAAD,CACEC,iBAAiB,mBACjB3vB,GAAG,mBACHsC,UAAU,OAHZ,UAKE,gBAACstB,GAAA,EAAD,CAAKC,SAAS,mBAAmBrtB,MAAM,mBAAvC,UACE,eAACsB,GAAA,EAAD,CAAKxB,UAAU,qBAAf,SACE,eAACyB,GAAA,EAAD,UACE,uDAGHwqB,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAASjtB,QAAQ,SAAjB,SAA2BitB,IAE3B,uCACE,gBAAC1qB,GAAA,EAAD,CAAKxB,UAAU,qBAAf,UACE,gBAAC0C,GAAA,EAAD,CAAQ1C,UAAU,OAAOK,QAAS,kBAAMonB,GAAQ,IAAhD,UACE,oBAAGznB,UAAU,gBADf,0BAIA,gBAAC0qB,GAAA,EAAD,CAAOlD,KAAMA,EAAMmD,OAAQ,kBAAMlD,GAAQ,IAAzC,UACE,eAACiD,GAAA,EAAMjsB,OAAP,CAAcmsB,aAAW,EAAzB,SACE,eAACF,GAAA,EAAM3iB,MAAP,oCAEF,eAAC2iB,GAAA,EAAM5iB,KAAP,UACE,gBAACmF,GAAA,EAAD,CAAMC,SAhEF,SAACC,GACrBA,EAAEC,iBACFlQ,EAAS8iB,GAAmBiB,KA8DZ,UACE,gBAAChU,GAAA,EAAKM,MAAN,CAAYC,UAAU,KAAK1O,MAAO,CAAE+C,QAAS,IAA7C,UACE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,4BAGA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,WACZ5E,MAAOkY,EACPrT,SAAU,SAACT,GAAD,OAAOue,EAAave,EAAEtM,OAAOkI,aAI3C,eAACvH,GAAA,EAAD,CAAK1C,MAAO,CAAEyE,OAAQ,IAAtB,SACE,eAACb,GAAA,EAAD,CACEzD,QAAQ,UACR5B,KAAK,SACLgD,QAAS,kBAAMonB,GAAQ,IAHzB,uCAYV,gBAAC3Y,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,+CACA,iDACA,gDACA,iDACA,iDACA,8CACA,8CAGJ,qCACGmgB,EAAQ5Y,KAAI,SAAC4Y,EAAS1Y,GACrB,IAAqB,IAAjB0Y,EAAQ5F,KACV,OACE,iCACE,gCACE,8BAAK4F,EAAQG,eACb,8BAAKH,EAAQI,iBACb,8BAAKJ,EAAQK,gBACb,8BAAKL,EAAQM,iBAEb,uCAASN,EAAQO,kBACjB,uCAASP,EAAQQ,eACjB,gCACE,eAACje,GAAA,EAAD,CACErC,QAAS,kBAzGpB,SAACoH,EAAK0Y,GACvB,IAAInW,EAAI,aAAO6iB,GACf7iB,EAAKvC,IAAO,EACZqlB,EAAW9iB,GACX0hB,EAAavL,GAsGiBqN,CAAW/lB,EAAK0Y,EAAQI,iBAE1BthB,QAAQ,QACRe,UAAU,SALZ,qBAUA,gBAAC0qB,GAAA,EAAD,CACElD,KAAMqF,EAAQplB,GACdkjB,OAAQ,kBAAMqC,GAAYvlB,IAF5B,UAIE,eAACijB,GAAA,EAAMjsB,OAAP,CAAcmsB,aAAW,EAAzB,SACE,eAACF,GAAA,EAAM3iB,MAAP,qCAIF,gBAAC2iB,GAAA,EAAM5iB,KAAP,WACE,gBAACmF,GAAA,EAAKM,MAAN,CACEC,UAAU,OACV1O,MAAO,CAAE+C,QAAS,IAFpB,UAIE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBAGA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,kBACZ5E,MAAOmT,EACPtO,SAAU,SAACT,GAAD,OAAOwe,EAAQxe,EAAEtM,OAAOkI,aAItC,eAACvH,GAAA,EAAD,CAAK1C,MAAO,CAAEyE,OAAQ,IAAtB,SACE,eAACb,GAAA,EAAD,CACEzD,QAAQ,UACR5B,KAAK,SACLgD,QAAS,kBAAM0sB,GAAWtlB,IAH5B,iCA9CAA,cAlKJ,WAC5B,IAAKwkB,GAAiB9L,EAAS,CAC7B,IAAMvG,EAAYuG,EACf1W,QAAO,SAACI,GAAD,OAA0B,IAAfA,EAAM0Q,QACxBhO,QAAO,SAAC3O,EAAGkc,GAAJ,OAAUlc,EAAI4sB,SAAS1Q,EAAE6G,eAAc,GACjD,OACE,eAACnf,GAAA,EAAD,CACE1C,MAAO,CACLQ,MAAO,OACPoH,KAAM,EACNqT,OAAQ,EACRxY,aAAc,WACdX,WAAY,YANhB,SASE,+DAAiCgZ,EAAUI,uBAsN1CyT,MAGH,gBAACH,GAAA,EAAD,CAAKC,SAAS,gBAAgBrtB,MAAM,gBAApC,UACE,eAACsB,GAAA,EAAD,CAAKxB,UAAU,qBAAf,SACE,eAACyB,GAAA,EAAD,UACE,oDAGH+qB,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAASxtB,QAAQ,SAAjB,SAA2BwtB,IAE3B,qCACE,gBAAC3d,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAClP,UAAU,WAAnD,UACE,iCACE,gCACE,uCACA,+CACA,yCACA,2CACA,uCACA,2CACA,uCACA,6CACA,uCACA,+CACA,mDAGJ,qCACGuY,GACCA,EAAUhR,KAAI,SAACgR,GACb,IAAuB,IAAnBA,EAAUgC,KACZ,OACE,iCACE,gCACE,8BAAKhC,EAAU0B,YACf,8BAAK1B,EAAUnJ,UAAU8K,MAAM,EAAG,MAClC,8BAAK3B,EAAU4B,SACf,8BAAK5B,EAAUxD,WACf,8BAAKwD,EAAU/P,YACf,8BAAK+P,EAAU8B,gBACf,8BAAK9B,EAAU+B,YACf,8BAAK/B,EAAUsB,aACf,8BAAKtB,EAAUgC,MAAQ,SACvB,8BAAKhC,EAAUiC,UAAUN,MAAM,EAAG,MAClC,gCACE,eAACxX,GAAA,EAAD,CACEzD,QAAQ,QACRe,UAAU,SACVK,QAAS,kBAnMd3C,EAoMyB6a,EAAUrQ,IAnM5DujB,GAAe,QACfM,EAAaruB,GAFW,IAACA,GAgMG,SAOE,oBAAGsC,UAAU,kBAGf,gBAAC0qB,GAAA,EAAD,CACElD,KAAMgE,EACNb,OAAQ,kBAAMc,GAAe,IAF/B,UAIE,eAACf,GAAA,EAAMjsB,OAAP,CAAcmsB,aAAW,EAAzB,SACE,eAACF,GAAA,EAAM3iB,MAAP,kCAEF,eAAC2iB,GAAA,EAAM5iB,KAAP,UACE,gBAACmF,GAAA,EAAD,CAAMC,SAAUigB,GAAhB,UACE,gBAAClgB,GAAA,EAAKM,MAAN,CACEC,UAAU,OACV1O,MAAO,CAAE+C,QAAS,IAFpB,UAIE,eAACoL,GAAA,EAAKQ,MAAN,CAAY3O,MAAO,CAAE+C,QAAS,IAA9B,uBAGA,eAACoL,GAAA,EAAKS,QAAN,CACErQ,KAAK,OACLsQ,YAAY,aACZ5E,MAAO6iB,EACPhe,SAAU,SAACT,GAAD,OACR0e,EAAe1e,EAAEtM,OAAOkI,aAK9B,eAACvH,GAAA,EAAD,CAAK1C,MAAO,CAAEyE,OAAQ,IAAtB,SACE,eAACb,GAAA,EAAD,CACEzD,QAAQ,UACR5B,KAAK,SACLgD,QAAS,kBAAMorB,GAAe,IAHhC,2CAlDFlT,EAAUrQ,eApPnB,WACzB,IAAKskB,GAAoBjU,EAAW,CAClC,IAAMqB,EAAYrB,EACf9O,QAAO,SAACI,GAAD,OAA0B,IAAfA,EAAM0Q,QACxBhO,QAAO,SAAC3O,EAAGkc,GAAJ,OAAUlc,EAAI4sB,SAAS1Q,EAAED,cAAa,GAChD,OACE,eAACrY,GAAA,EAAD,CACE1C,MAAO,CACLQ,MAAO,OACPoH,KAAM,EACNqT,OAAQ,EACRxY,aAAc,WACdX,WAAY,YANhB,SASE,4DAA8BgZ,EAAUI,uBA6SvC0T,YC9TIC,GAlHH,WAwGV,OACE,eAAC,gBAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UApBb,WACtB,OACE,iCACE,eAAC,GAAD,IACA,uBAAM9tB,UAAU,OAAhB,SACE,eAAC,IAAD,UACE,eAACZ,EAAA,EAAD,UACE,eAAC,IAAD,CAAOyuB,KAAK,aAAaD,OAAK,EAACE,UAAW1iB,WAIhD,eAAC,GAAD,IACA,eAAC,GAAD,UASA,eAAC,IAAD,CAAOyiB,KAAK,IAAIC,UA3GH,WACjB,OACE,iCACE,eAAC,GAAD,IACA,uBAAM9tB,UAAU,OAAhB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO6tB,KAAK,oBAAoBC,UAAWtoB,GAAYooB,OAAK,IAC5D,eAAC,IAAD,CACEC,KAAK,oCACLC,UAAWtoB,GACXooB,OAAK,IAEP,eAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAWtoB,GAAYooB,OAAK,IAC3D,eAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWtoB,GAAYooB,OAAK,IAC5C,gBAACxuB,EAAA,EAAD,WAEE,eAAC,IAAD,CAAOyuB,KAAK,YAAYC,UAAWxlB,KACnC,eAAC,IAAD,CAAOulB,KAAK,SAASC,UAAWnhB,KAChC,eAAC,IAAD,CAAOkhB,KAAK,aAAaC,UAAWlc,KACpC,eAAC,IAAD,CAAOic,KAAK,cAAcC,UAAW7c,KACrC,eAAC,IAAD,CAAO4c,KAAK,YAAYC,UAAW9d,KACnC,eAAC,IAAD,CAAO6d,KAAK,WAAWC,UAAWnd,KAClC,eAAC,IAAD,CAAOkd,KAAK,YAAYC,UAAWjgB,KACnC,eAAC,IAAD,CAAOggB,KAAK,WAAWC,UAAW1f,KAClC,eAAC,IAAD,CAAOyf,KAAK,eAAeC,UAAW7kB,KACtC,eAAC,IAAD,CAAO4kB,KAAK,kBAAkBC,UAAWvb,KACzC,eAAC,IAAD,CACEsb,KAAK,wBACLC,UAAW9a,KAEb,eAAC,IAAD,CAAO6a,KAAK,qBAAqBC,UAAW/Z,KAC5C,eAAC,IAAD,CACE8Z,KAAK,0BACLC,UAAWpZ,KAEb,eAAC,IAAD,CAAOmZ,KAAK,mBAAmBC,UAAW7X,KAC1C,eAAC,IAAD,CAAO4X,KAAK,qBAAqBC,UAAW7N,KAC5C,eAAC,IAAD,CACE4N,KAAK,qBACLC,UAAW9M,KAEb,eAAC,IAAD,CACE6M,KAAK,uBACLC,UAAWtV,KAEb,eAAC,IAAD,CACEqV,KAAK,0BACLC,UAAW7R,KAEb,eAAC,IAAD,CACE4R,KAAK,4BACLC,UAAWC,KAEb,eAAC,IAAD,CACEF,KAAK,4BACLC,UAAW3I,KAEb,eAAC,IAAD,CAAO0I,KAAK,oBAAoBC,UAAWrL,KAC3C,eAAC,IAAD,CACEoL,KAAK,uBACLC,UAAW/K,KAEb,eAAC,IAAD,CACE8K,KAAK,+BACLC,UAAWtJ,KAEb,eAAC,IAAD,CAAOqJ,KAAK,oBAAoBC,UAAWvG,KAC3C,eAAC,IAAD,CACEsG,KAAK,0BACLC,UAAWE,KAEb,eAAC,IAAD,CAAOH,KAAK,kBAAkBC,UAAWvC,KACzC,eAAC,IAAD,CACEsC,KAAK,iCACLC,UAAW/Z,GACX6Z,OAAK,YAMb,eAAC,GAAD,gB,8BCrHKK,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAE9BC,GACX,oCACWC,GACX,oCACWC,GAAiC,iCCmExCC,GAAUC,2BAAgB,CAC9BjmB,YC9CgC,WAAqD,IAApD3J,EAAmD,uDAA3C,CAAC+G,SAAS,EAAME,SAAU,IAAM4oB,EAAW,uCACpF,OAAQA,EAAOpxB,MACb,KAAKmG,GACH,MAAO,CAAEmC,SAAS,EAAME,SAAU,IACpC,KAAKpC,GACH,MAAO,CACLkC,SAAS,EACTE,SAAU4oB,EAAOnwB,QAAQuH,SACzB4N,MAAOgb,EAAOnwB,QAAQmV,MACtBC,KAAM+a,EAAOnwB,QAAQoV,MAEzB,KAAKhQ,GACH,MAAO,CAAEiC,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IDiCX2W,cCiCkC,WAAsC,IAArC3W,EAAoC,uDAA5B,CAAE4I,QAAS,IAAMinB,EAAW,uCACvE,OAAQA,EAAOpxB,MACb,KAAKgH,GACH,MAAO,CAAEsB,SAAS,GACpB,KAAKrB,GACH,MAAO,CAAEqB,SAAS,EAAO6D,SAAS,EAAMhC,QAASinB,EAAOnwB,SAC1D,KAAKiG,GACH,MAAO,CAAEoB,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKkG,GACH,MAAO,CAAEgD,QAAS,IACpB,QACE,OAAO5I,ID3CXyK,eCbkC,WAG9B,IAFJzK,EAEG,uDAFK,CAAE+G,SAAS,EAAM6B,QAAS,IAClCinB,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKsG,GACH,OAAO,cAAEgC,SAAS,GAAS/G,GAC7B,KAAKgF,GACH,MAAO,CAAE+B,SAAS,EAAO6B,QAASinB,EAAOnwB,SAC3C,KAAKuF,GACH,MAAO,CAAE8B,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IDEXoV,cCGkC,WAAyB,IAAxBpV,EAAuB,uDAAf,GAAI6vB,EAAW,uCAC1D,OAAQA,EAAOpxB,MACb,KAAKyG,GACH,MAAO,CAAE6B,SAAS,GACpB,KAAK5B,GACH,MAAO,CAAE4B,SAAS,EAAO6D,SAAS,GACpC,KAAKxF,GACH,MAAO,CAAE2B,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IDXXuV,cCekC,WAAyB,IAAxBvV,EAAuB,uDAAf,GAAI6vB,EAAW,uCAC1D,OAAQA,EAAOpxB,MACb,KAAK4G,GACH,MAAO,CAAE0B,SAAS,GACpB,KAAKzB,GACH,MAAO,CAAEyB,SAAS,EAAO6D,SAAS,EAAMhC,QAASinB,EAAOnwB,SAC1D,KAAK6F,GACH,MAAO,CAAEwB,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAK8F,GACH,MAAO,GACT,QACE,OAAOxF,IDzBX0K,oBC4CwC,WAAyB,IAAxB1K,EAAuB,uDAAf,GAAI6vB,EAAW,uCAChE,OAAQA,EAAOpxB,MACb,KAAKoH,GACH,MAAO,CAAEkB,SAAS,GACpB,KAAKjB,GACH,MAAO,CAAEiB,SAAS,EAAO6D,SAAS,GACpC,KAAK7E,GACH,MAAO,CAAEgB,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKsG,GACH,MAAO,GACT,QACE,OAAOhG,IDtDX8G,gBC0DoC,WAAoD,IAAnD9G,EAAkD,uDAA1C,CAAC+G,SAAQ,EAAME,SAAU,IAAM4oB,EAAW,uCACvF,OAAQA,EAAOpxB,MACb,KAAKwH,GACH,MAAO,CAAEc,SAAS,EAAME,SAAU,IACpC,KAAKf,GACH,MAAO,CAAEa,SAAS,EAAOE,SAAU4oB,EAAOnwB,SAC5C,KAAKyG,GACH,MAAO,CAAEY,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IDlEX2kB,gBCnCoC,WAAqD,IAApD3kB,EAAmD,uDAA3C,CAAC+G,SAAS,EAAME,SAAU,IAAM4oB,EAAW,uCACxF,OAAQA,EAAOpxB,MACb,KAAK2H,GACH,MAAO,CAAEW,SAAS,EAAME,SAAU,IACpC,KAAKZ,GACH,MAAO,CACLU,SAAS,EACTE,SAAU4oB,EAAOnwB,QACjBkL,SAAS,GAEb,KAAKtE,GACH,MAAO,CAAES,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IDuBXwD,KE5EyB,WAGrB,IAFJxD,EAEG,uDAFK,CAAEuD,UAAW,GAAI8N,gBAAiB,IAC1Cwe,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK0N,GACH,IAAMT,EAAOmkB,EAAOnwB,QAEdowB,EAAY9vB,EAAMuD,UAAUwsB,MAAK,SAACjlB,GAAD,OAAOA,EAAES,MAAQG,EAAKH,OAK7D,OAAIukB,EACK,6BACF9vB,GADL,IAEEuD,UAAWvD,EAAMuD,UAAUoF,KAAI,SAACmC,GAAD,OAC7BA,EAAES,MAAQukB,EAAUvkB,IAAMG,EAAOZ,OAI9B,6BACF9K,GADL,IAEEuD,UAAU,GAAD,oBAAMvD,EAAMuD,WAAZ,CAAuBmI,MAGtC,KAAKW,GACH,OAAO,6BACFrM,GADL,IAEEuD,UAAWvD,EAAMuD,UAAUsH,QAAO,SAACC,GAAD,OAAOA,EAAES,MAAQskB,EAAOnwB,aAE9D,KAAK4M,GACH,OAAO,6BACFtM,GADL,IAEEqR,gBAAiBwe,EAAOnwB,UAE5B,KAAK6M,GACH,OAAO,6BACFvM,GADL,IAEEgS,cAAe6d,EAAOnwB,UAE1B,KAAK0M,GACH,OAAO,6BACFpM,GADL,IAEEuD,UAAW,KAEf,QACE,OAAOvD,IF8BXd,UGxDgC,WAAyB,IAAxBc,EAAuB,uDAAf,GAAI6vB,EAAW,uCACtD,OAAQA,EAAOpxB,MACb,KAAKpD,EACH,MAAO,CAAE0L,SAAS,GACpB,KAAKzL,EACH,MAAO,CAAEyL,SAAS,EAAO9H,SAAU4wB,EAAOnwB,SAC5C,KAAKnE,EACH,MAAO,CAAEwL,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKlE,EACH,MAAO,GACT,QACE,OAAOwE,IH8CbsP,aGzCiC,WAAyB,IAAxBtP,EAAuB,uDAAf,GAAI6vB,EAAW,uCACvD,OAAQA,EAAOpxB,MACb,KAAKhD,EACH,MAAO,CAAEsL,SAAS,GACpB,KAAKrL,EACH,MAAO,CAAEqL,SAAS,EAAO9H,SAAU4wB,EAAOnwB,SAC5C,KAAK/D,EACH,MAAO,CAAEoL,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKlE,EACH,MAAO,GACT,QACE,OAAOwE,IH+BbyP,YG3BkC,WAAmC,IAAlCzP,EAAiC,uDAAzB,CAAE0P,KAAM,IAAMmgB,EAAW,uCAClE,OAAQA,EAAOpxB,MACb,KAAK7C,EACH,OAAO,6BAAKoE,GAAZ,IAAmB+G,SAAS,IAC9B,KAAKlL,EACH,MAAO,CAAEkL,SAAS,EAAO2I,KAAMmgB,EAAOnwB,SACxC,KAAK5D,EACH,MAAO,CAAEiL,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAK3D,EACH,MAAO,CAAE2T,KAAM,IACjB,QACE,OAAO1P,IHiBb2P,kBGbwC,WAAyB,IAAxB3P,EAAuB,uDAAf,GAAI6vB,EAAW,uCAC9D,OAAQA,EAAOpxB,MACb,KAAKzC,EACH,MAAO,CAAE+K,SAAS,GACpB,KAAK9K,EACH,MAAO,CAAE8K,SAAS,EAAO6D,SAAS,EAAM3L,SAAU4wB,EAAOnwB,SAC3D,KAAKxD,EACH,MAAO,CAAE6K,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKvD,EACH,MAAO,GACT,QACE,OAAO6D,IHGb4T,SGC+B,WAAoC,IAAnC5T,EAAkC,uDAA1B,CAAE6T,MAAO,IAAMgc,EAAW,uCAChE,OAAQA,EAAOpxB,MACb,KAAKrC,EACH,MAAO,CAAE2K,SAAS,GACpB,KAAK1K,EACH,MAAO,CAAE0K,SAAS,EAAO8M,MAAOgc,EAAOnwB,SACzC,KAAKpD,EACH,MAAO,CAAEyK,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKnD,EACH,MAAO,CAAEsX,MAAO,IAClB,QACE,OAAO7T,IHXb+T,WGeiC,WAAyB,IAAxB/T,EAAuB,uDAAf,GAAI6vB,EAAW,uCACvD,OAAQA,EAAOpxB,MACb,KAAKjC,EACH,MAAO,CAAEuK,SAAS,GACpB,KAAKtK,EACH,MAAO,CAAEsK,SAAS,EAAO6D,SAAS,GACpC,KAAKlO,EACH,MAAO,CAAEqK,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IHvBbuU,WG2BiC,WAAmC,IAAlCvU,EAAiC,uDAAzB,CAAE0P,KAAM,IAAMmgB,EAAW,uCACjE,OAAQA,EAAOpxB,MACb,KAAK9B,EACH,MAAO,CAAEoK,SAAS,GACpB,KAAKnK,EACH,MAAO,CAAEmK,SAAS,EAAO6D,SAAS,GACpC,KAAK/N,EACH,MAAO,CAAEkK,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAK5C,EACH,MAAO,CACL4S,KAAM,IAEV,QACE,OAAO1P,IHvCb6S,YInEgC,WAAyB,IAAxB7S,EAAuB,uDAAf,GAAI6vB,EAAW,uCACxD,OAAQA,EAAOpxB,MACb,KAAK1B,EACH,MAAO,CACLgK,SAAS,GAEb,KAAK/J,EACH,MAAO,CACL+J,SAAS,EACT6D,SAAS,EACT2F,MAAOsf,EAAOnwB,SAElB,KAAKzC,EACH,MAAO,CACL8J,SAAS,EACTC,MAAO6oB,EAAOnwB,SAElB,KAAKxC,EACH,MAAO,GACT,QACE,OAAO8C,IJgDXkT,aI5CiC,WAG7B,IAFJlT,EAEG,uDAFK,CAAE+G,SAAS,EAAMgM,WAAY,GAAI1B,gBAAiB,IAC1Dwe,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKtB,EACH,OAAO,6BACF6C,GADL,IAEE+G,SAAS,IAEb,KAAK3J,EACH,MAAO,CACL2J,SAAS,EACTwJ,MAAOsf,EAAOnwB,SAElB,KAAKrC,EACH,MAAO,CACL0J,SAAS,EACTC,MAAO6oB,EAAOnwB,SAElB,QACE,OAAOM,IJwBXmT,SIpB6B,WAAyB,IAAxBnT,EAAuB,uDAAf,GAAI6vB,EAAW,uCACrD,OAAQA,EAAOpxB,MACb,KAAKnB,EACH,MAAO,CACLyJ,SAAS,GAEb,KAAKxJ,EACH,MAAO,CACLwJ,SAAS,EACT6D,SAAS,GAEb,KAAKpN,GACH,MAAO,CACLuJ,SAAS,EACTC,MAAO6oB,EAAOnwB,SAElB,KAAKjC,GACH,MAAO,GACT,QACE,OAAOuC,IJEX4P,YIyBgC,WAAqC,IAApC5P,EAAmC,uDAA3B,CAAE+P,OAAQ,IAAM8f,EAAW,uCACpE,OAAQA,EAAOpxB,MACb,KAAKf,GACH,MAAO,CACLqJ,SAAS,GAEb,KAAKpJ,GACH,MAAO,CACLoJ,SAAS,EACTgJ,OAAQ8f,EAAOnwB,SAEnB,KAAK9B,GACH,MAAO,CACLmJ,SAAS,EACTC,MAAO6oB,EAAOnwB,SAElB,KAAK7B,GACH,MAAO,CAAEkS,OAAQ,IACnB,QACE,OAAO/P,IJ3CXsX,UI+C8B,WAAqC,IAApCtX,EAAmC,uDAA3B,CAAE+P,OAAQ,IAAM8f,EAAW,uCAClE,OAAQA,EAAOpxB,MACb,KAAKX,GACH,MAAO,CACLiJ,SAAS,GAEb,KAAKhJ,GACH,MAAO,CACLgJ,SAAS,EACTgJ,OAAQ8f,EAAOnwB,SAEnB,KAAK1B,GACH,MAAO,CACL+I,SAAS,EACTC,MAAO6oB,EAAOnwB,SAElB,QACE,OAAOM,IJ/DXsT,aIAiC,WAAyB,IAAxBtT,EAAuB,uDAAf,GAAI6vB,EAAW,uCACzD,OAAQA,EAAOpxB,MACb,KAAKR,GACH,MAAO,CACL8I,SAAS,GAEb,KAAK7I,GACH,MAAO,CACL6I,SAAS,EACT6D,SAAS,GAEb,KAAKzM,GACH,MAAO,CACL4I,SAAS,EACTC,MAAO6oB,EAAOnwB,SAElB,KAAKtB,GACH,MAAO,GACT,QACE,OAAO4B,IJlBX6Z,cK/DkC,WAG9B,IAFJ7Z,EAEG,uDAFK,CAAE+G,SAAS,EAAM4S,UAAW,IACpCkW,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK8Y,GACH,MAAO,CAAExQ,SAAS,EAAM4S,UAAW,IACrC,KAAKnC,GACH,MAAO,CACLzQ,SAAS,EACT4S,UAAWkW,EAAOnwB,QAClBmV,MAAOgb,EAAOnwB,QAAQmV,MACtBC,KAAM+a,EAAOnwB,QAAQoV,MAEzB,KAAK2C,GACH,MAAO,CAAE1Q,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IL+CXkqB,gBK3CoC,WAGhC,IAFJlqB,EAEG,uDAFK,CAAE+G,SAAS,EAAM4S,UAAW,IACpCkW,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKiZ,GACH,MAAO,CAAE3Q,SAAS,EAAM4S,UAAW,IACrC,KAAKhC,GACH,MAAO,CACL5Q,SAAS,EACT4S,UAAWkW,EAAOnwB,SAEtB,KAAKkY,GACH,MAAO,CAAE7Q,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IL6BX2tB,gBKzBoC,WAGhC,IAFJ3tB,EAEG,uDAFK,CAAE+G,SAAS,EAAM4S,UAAW,IACpCkW,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKoZ,GACH,MAAO,CAAE9Q,SAAS,EAAM4S,UAAW,IACrC,KAAK7B,GACH,MAAO,CACL/Q,SAAS,EACT4S,UAAWkW,EAAOnwB,SAEtB,KAAKqY,GACH,MAAO,CAAEhR,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,ILWXggB,gBKoDoC,WAGhC,IAFJhgB,EAEG,uDAFK,CAAE+G,SAAS,EAAM4S,UAAW,IACpCkW,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKqa,GACH,OAAO,cAAE/R,SAAS,GAAS/G,GAC7B,KAAK+Y,GACH,MAAO,CAAEhS,SAAS,EAAO4S,UAAWkW,EAAOnwB,SAC7C,KAAKsZ,GACH,MAAO,CAAEjS,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IL/DX8Z,gBKmFsC,WAAyB,IAAxB9Z,EAAuB,uDAAf,GAAI6vB,EAAW,uCAC5D,OAAQA,EAAOpxB,MACb,KAAK8Z,GACH,MAAO,CAAExR,SAAS,GACpB,KAAKyR,GACH,MAAO,CAAEzR,SAAS,EAAO6D,SAAS,GACpC,KAAK6N,GACH,MAAO,CAAE1R,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IL3FbigB,gBK+FsC,WAAyC,IAAxCjgB,EAAuC,uDAA/B,CAAG2Z,UAAW,IAAMkW,EAAW,uCAC5E,OAAQA,EAAOpxB,MACb,KAAKia,GACH,MAAO,CAAE3R,SAAS,GACpB,KAAK4R,GACH,MAAO,CAAE5R,SAAS,EAAO6D,SAAS,EAAM+O,UAAWkW,EAAOnwB,SAC5D,KAAKkZ,GACH,MAAO,CAAE7R,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKmZ,GACH,MAAO,CAAEc,UAAW,IACtB,QACE,OAAO3Z,ILzGb+d,gBKiEoC,WAAyB,IAAxB/d,EAAuB,uDAAf,GAAI6vB,EAAW,uCAC1D,OAAQA,EAAOpxB,MACb,KAAK0Z,GACH,MAAO,CAAEpR,SAAS,GACpB,KAAKqR,GACH,MAAO,CAAErR,SAAS,EAAO6D,SAAS,EAAM+O,UAAWkW,EAAOnwB,SAC5D,KAAK2Y,GACH,MAAO,CAAEtR,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAK4Y,GACH,MAAO,GACT,QACE,OAAOtY,IL3EbgwB,sBMhG0C,WAGtC,IAFJhwB,EAEG,uDAFK,CAAE+G,SAAS,EAAMkpB,kBAAmB,IAC5CJ,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK4wB,GACH,MAAO,CAAEtoB,SAAS,EAAMkpB,kBAAmB,IAC7C,KAAKX,GACH,MAAO,CACLvoB,SAAS,EACTkpB,kBAAmBJ,EAAOnwB,SAE9B,KAAK6vB,GACH,MAAO,CAAExoB,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,INkFXkwB,yBM9E4C,WAGxC,IAFJlwB,EAEG,uDAFK,CAAE+G,SAAS,EAAMkpB,kBAAmB,IAC5CJ,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK+wB,GACH,OAAO,cAAEzoB,SAAS,GAAS/G,GAC7B,KAAKyvB,GACH,MAAO,CAAE1oB,SAAS,EAAOkpB,kBAAmBJ,EAAOnwB,SACrD,KAAKgwB,GACH,MAAO,CAAE3oB,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,INmEX6mB,cKMkC,WAG9B,IAFJ7mB,EAEG,uDAFK,CAAE+G,SAAS,EAAM8f,cAAe,IACxCgJ,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKuZ,GACH,MAAO,CAAEjR,SAAS,EAAM8f,cAAe,IACzC,KAAK5O,GACH,MAAO,CACLlR,SAAS,EACT8f,cAAegJ,EAAOnwB,SAE1B,KAAKwY,GACH,MAAO,CAAEnR,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,ILpBXusB,eKwBmC,WAG/B,IAFJvsB,EAEG,uDAFK,CAAE+G,SAAS,EAAM4S,UAAW,IACpCkW,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKwa,GACH,MAAO,CAAElS,SAAS,EAAM4S,UAAW,IACrC,KAAKT,GACH,MAAO,CACLnS,SAAS,EACT4S,UAAWkW,EAAOnwB,QAClBmV,MAAOgb,EAAOnwB,QAAQmV,MACtBC,KAAM+a,EAAOnwB,QAAQoV,MAEzB,KAAKqE,GACH,MAAO,CAAEpS,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,ILxCXga,eKfmC,WAG/B,IAFJha,EAEG,uDAFK,CAAE+G,SAAS,EAAMiT,eAAgB,IACzC6V,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK2a,GACH,MAAO,CAAErS,SAAS,EAAMiT,eAAgB,IAC1C,KAAKX,GACH,MAAO,CACLtS,SAAS,EACTiT,eAAgB6V,EAAOnwB,SAE3B,KAAK4Z,GACH,MAAO,CAAEvS,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,ILCXshB,YO1FkC,WAG5B,IAFJthB,EAEG,uDAFK,CAAE+G,SAAS,EAAMwa,QAAS,IAClCsO,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK0hB,GACH,MAAO,CAAEpZ,SAAS,EAAMwa,QAAS,IACnC,KAAKnB,GACH,MAAO,CACLrZ,SAAS,EACTwa,QAASsO,EAAOnwB,QAChBmV,MAAOgb,EAAOnwB,QAAQmV,MACtBC,KAAM+a,EAAOnwB,QAAQoV,MAGzB,KAAKuL,GACH,MAAO,CAAEtZ,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IPyEbsiB,eO/CkC,WAG9B,IAFJtiB,EAEG,uDAFK,CAAE+G,SAAS,EAAMwa,QAAS,IAClCsO,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKsiB,GACH,OAAO,cAAEha,SAAS,GAAS/G,GAC7B,KAAKghB,GACH,MAAO,CAAEja,SAAS,EAAOwa,QAASsO,EAAOnwB,SAC3C,KAAKuhB,GACH,MAAO,CAAEla,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACvC,KAAKwhB,GACH,MAAO,GACX,QACE,OAAOlhB,IPkCXotB,cOrEoC,WAG9B,IAFJptB,EAEG,uDAFK,CAAE+G,SAAS,EAAMwa,QAAS,IAClCsO,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK6hB,GACH,MAAO,CAAEvZ,SAAS,EAAMwa,QAAS,IACnC,KAAKhB,GACH,MAAO,CACLxZ,SAAS,EACTwa,QAASsO,EAAOnwB,SAEpB,KAAK8gB,GACH,MAAO,CAAEzZ,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IPuDbutB,YO/BgC,WAG5B,IAFJvtB,EAEG,uDAFK,CAAE+G,SAAS,EAAMwa,QAAS,IAClCsO,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKgiB,GACH,OAAO,cAAE1Z,SAAS,GAAS/G,GAC7B,KAAK0gB,GACH,MAAO,CAAE3Z,SAAS,EAAOwa,QAASsO,EAAOnwB,SAC3C,KAAKihB,GACH,MAAO,CAAE5Z,SAAS,EAAOC,MAAO6oB,EAAOnwB,SAEzC,QACE,OAAOM,IPmBXytB,cOfkC,WAG9B,IAFJztB,EAEG,uDAFK,CAAE+G,SAAS,EAAMwa,QAAS,IAClCsO,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKmiB,GACH,OAAO,cAAE7Z,SAAS,GAAS/G,GAC7B,KAAK6gB,GACH,MAAO,CAAE9Z,SAAS,EAAOwa,QAASsO,EAAOnwB,SAC3C,KAAKohB,GACH,MAAO,CAAE/Z,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IPIX8jB,WQ9F+B,WAG3B,IAFJ9jB,EAEG,uDAFK,CAAE+G,SAAS,EAAMgd,OAAQ,IACjC8L,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKikB,GACH,MAAO,CAAE3b,SAAS,EAAMgd,OAAQ,IAClC,KAAKpB,GACH,MAAO,CACL5b,SAAS,EACTgd,OAAQ8L,EAAOnwB,SAEnB,KAAKkjB,GACH,MAAO,CAAE7b,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IRgFXgmB,cQ5EiC,WAG7B,IAFJhmB,EAEG,uDAFK,CAAE+G,SAAS,EAAMgd,OAAQ,IACjC8L,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKokB,GACH,OAAO,cAAE9b,SAAS,GAAS/G,GAC7B,KAAK8iB,GACH,MAAO,CAAE/b,SAAS,EAAO6D,SAAS,EAAMmZ,OAAQ8L,EAAOnwB,SACzD,KAAKqjB,GACH,MAAO,CAAEhc,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACvC,KAAKsjB,GACH,MAAO,GACX,QACE,OAAOhjB,IR+DXgkB,aQ5CmC,WAAyB,IAAxBhkB,EAAuB,uDAAf,GAAI6vB,EAAW,uCACzD,OAAQA,EAAOpxB,MACb,KAAK4kB,GACH,MAAO,CAAEtc,SAAS,GACpB,KAAKuc,GACH,MAAO,CAAEvc,SAAS,EAAO6D,SAAS,GACpC,KAAK2Y,GACH,MAAO,CAAExc,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IRoCb8lB,aQhCmC,WAAsC,IAArC9lB,EAAoC,uDAA5B,CAAG+jB,OAAQ,IAAM8L,EAAW,uCACtE,OAAQA,EAAOpxB,MACb,KAAK+kB,GACH,MAAO,CAAEzc,SAAS,GACpB,KAAK0c,GACH,MAAO,CAAE1c,SAAS,EAAO6D,SAAS,EAAMmZ,OAAQ8L,EAAOnwB,SACzD,KAAKgkB,GACH,MAAO,CAAE3c,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKikB,GACH,MAAO,CAAEI,OAAQ,IACnB,QACE,OAAO/jB,IRsBb0kB,aQ7DiC,WAAyB,IAAxB1kB,EAAuB,uDAAf,GAAI6vB,EAAW,uCACvD,OAAQA,EAAOpxB,MACb,KAAKwkB,GACH,MAAO,CAAElc,SAAS,GACpB,KAAKmc,GACH,MAAO,CAAEnc,SAAS,EAAO6D,SAAS,EAAMmZ,OAAQ8L,EAAOnwB,SACzD,KAAKyjB,GACH,MAAO,CAAEpc,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAK0jB,GACH,MAAO,GACT,QACE,OAAOpjB,IRmDbge,mBS7FuC,WAGjC,IAFJhe,EAEG,uDAFK,CAAE+G,SAAS,EAAMoX,eAAgB,IACzC0R,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKod,GACH,MAAO,CAAE9U,SAAS,EAAMoX,eAAgB,IAC1C,KAAKrC,GACH,MAAO,CACL/U,SAAS,EACToX,eAAgB0R,EAAOnwB,QACvBkL,SAAS,GAEb,KAAKmR,GACH,MAAO,CAAEhV,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IT8EbmqB,qBSzEyC,WAGrC,IAFJnqB,EAEG,uDAFK,CAAE+G,SAAS,EAAMoX,eAAgB,IACzC0R,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKud,GACH,MAAO,CAAEjV,SAAS,EAAMoX,eAAgB,IAC1C,KAAKlC,GACH,MAAO,CACLlV,SAAS,EACToX,eAAgB0R,EAAOnwB,SAE3B,KAAKwc,GACH,MAAO,CAAEnV,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IT2DXymB,sBSvD4C,WAGtC,IAFJzmB,EAEG,uDAFK,CAAE+G,SAAS,EAAM0f,sBAAuB,IAChDoJ,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAK0d,GACH,MAAO,CAAEpV,SAAS,EAAM0f,sBAAuB,IACjD,KAAKrK,GACH,MAAO,CACLrV,SAAS,EACT0f,sBAAuBoJ,EAAOnwB,SAElC,KAAK2c,GACH,MAAO,CAAEtV,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,ITyCbmwB,qBSrC2C,WAGrC,IAFJnwB,EAEG,uDAFK,CAAE+G,SAAS,EAAMopB,qBAAsB,IAC/CN,EACG,uCACH,OAAQA,EAAOpxB,MACb,KAAKwe,GACH,OAAO,cAAElW,SAAS,GAAS/G,GAC7B,KAAKkd,GACH,MAAO,CAAEnW,SAAS,EAAOopB,qBAAsBN,EAAOnwB,SACxD,KAAKyd,GACH,MAAO,CAAEpW,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,IT0BbowB,qBSN6C,WAAyB,IAAxBpwB,EAAuB,uDAAf,GAAI6vB,EAAW,uCACjE,OAAQA,EAAOpxB,MACb,KAAKie,GACH,MAAO,CAAE3V,SAAS,GACpB,KAAK4V,GACH,MAAO,CAAE5V,SAAS,EAAO6D,SAAS,GACpC,KAAKgS,GACH,MAAO,CAAE7V,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,QACE,OAAOM,ITFfqqB,qBSM6C,WAA8C,IAA7CrqB,EAA4C,uDAApC,CAAGme,eAAgB,IAAM0R,EAAW,uCACtF,OAAQA,EAAOpxB,MACb,KAAKoe,GACH,MAAO,CAAE9V,SAAS,GACpB,KAAK+V,GACH,MAAO,CAAE/V,SAAS,EAAO6D,SAAS,EAAMuT,eAAgB0R,EAAOnwB,SACjE,KAAKqd,GACH,MAAO,CAAEhW,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAKsd,GACH,MAAO,CAAEmB,eAAgB,IAC3B,QACE,OAAOne,IThBfoqB,qBSxB2C,WAAyB,IAAxBpqB,EAAuB,uDAAf,GAAI6vB,EAAW,uCAC/D,OAAQA,EAAOpxB,MACb,KAAK6d,GACH,MAAO,CAAEvV,SAAS,GACpB,KAAKwV,GACH,MAAO,CAAExV,SAAS,EAAO6D,SAAS,EAAMuT,eAAgB0R,EAAOnwB,SACjE,KAAK8c,GACH,MAAO,CAAEzV,SAAS,EAAOC,MAAO6oB,EAAOnwB,SACzC,KAAK+c,GACH,MAAO,GACT,QACE,OAAOzc,MTgBXqwB,GAAuB9xB,aAAa+xB,QAAQ,aAC9CrjB,KAAKsjB,MAAMhyB,aAAa+xB,QAAQ,cAChC,GAEEE,GAAsBjyB,aAAa+xB,QAAQ,YAC7CrjB,KAAKsjB,MAAMhyB,aAAa+xB,QAAQ,aAChC,KAMEG,GAAe,CACnBjtB,KAAM,CACJD,UAAW8sB,GACXhf,gBAP+B9S,aAAa+xB,QAAQ,mBACpDrjB,KAAKsjB,MAAMhyB,aAAa+xB,QAAQ,oBAChC,IAOFpxB,UAAW,CAAED,SAAUuxB,KAGnBE,GAAa,CAACC,MAQLC,GANDC,uBACZlB,GACAc,GACAK,+BAAoBC,mBAAe,WAAf,EAAmBL,MUjJzCM,IAASC,OACP,eAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFlyB,SAASwyB,eAAe,W","file":"static/js/main.cf4572fb.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/BACKYARD-BBQ.024bab84.svg\";","import React from \"react\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport logo from \"../../src/BACKYARD-BBQ.svg\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        style={{ backgroundColor: \"#ed1c24\", height: \"150px\" }}\r\n        \r\n        variant='dark'\r\n        expand='lg'\r\n        collapseOnSelect\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <img\r\n              style={{ height: \"80px\", width: \"200px\", cursor: \"pointer\" }}\r\n              src={logo}\r\n              alt='BACKYARD BBQ RESTAURANT'\r\n            />\r\n          </LinkContainer>\r\n          {/* <Route render={({ history }) => <SearchBox history={history} />} /> */}\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav style={{textTransform: \"uppercase\"}} className='ml-auto '>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link >\r\n                    <i className='fas fa-user'></i> SIGN IN\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown  title='ADMIN' id='adminmenu'>\r\n                  \r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/inventorylist'>\r\n                    <NavDropdown.Item>Expenses</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/receiptlist'>\r\n                    <NavDropdown.Item>Receipts</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/salarylist'>\r\n                    <NavDropdown.Item>Salaries</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/recipelist'>\r\n                    <NavDropdown.Item>Recipes</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/inventorylevellist'>\r\n                    <NavDropdown.Item>Inventory Levels</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/billlist'>\r\n                    <NavDropdown.Item>\r\n                      Bill Payable / Recieavable\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/financialsummary'>\r\n                    <NavDropdown.Item>Financial Summary</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n              <LinkContainer to='/products'>\r\n                <Nav.Link className='header-font'>MENU</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link className='header-font'>\r\n                  <i className='fas fa-shopping-cart'></i> CART\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <div\r\n        style={{\r\n          height: \"50px\",\r\n          backgroundColor: \"floralwhite\",\r\n          display: \"grid\",\r\n          boxShadow: \"0 1px 2px 0 hsl(0deg 0% 61% / 50%)\",\r\n          justifyContent: \"center\",\r\n          textAlign: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <a\r\n          href={\"https://goo.gl/maps/SuVkFVGJGHUektEk6\"}\r\n          target='_blank'\r\n          rel='noreferrer'\r\n        >\r\n          <i\r\n            style={{\r\n              marginRight: \"9px\",\r\n              color: \"#ed1c24\",\r\n              alignSelf: \"center\",\r\n              fontSize: \"27px\",\r\n            }}\r\n            class='fas fa-map-marker-alt'\r\n          ></i>\r\n          <text\r\n            style={{\r\n              color: \"darkorange\",\r\n              fontSize: \"20px\",\r\n              fontWeight: \"400\",\r\n              letterSpacing: \".05rem\",\r\n            }}\r\n          >\r\n            Find us on Google Maps\r\n          </text>\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      style={{\r\n        display: \"grid\",\r\n        height: \"150px\",\r\n        backgroundColor: \"floralwhite\",\r\n        alignContent: \"center\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              fontFamily: \"Barlow Condensed,sans-serif\",\r\n              fontWeight: \"500\",\r\n              marginBottom: \"20px\"\r\n            }}\r\n            className='text-center py-3'\r\n          >\r\n            © BACKYARD BBQ RESTAURANT ALL RIGHTS RESERVED\r\n          </Col>\r\n          <Col className='text-center py-3'>\r\n{/* \r\n          <button\r\n              style={{\r\n                backgroundColor: \"#DB4437\",\r\n                marginInline: \"10px\",\r\n                alignContent: \"center\",\r\n                display: \"inline-flex\",\r\n              }}\r\n              onClick={()=> window.open(\"https://goo.gl/maps/SuVkFVGJGHUektEk6\")}\r\n              className='social-media'\r\n            >\r\n              <i\r\n                style={{ fontSize: \"1.73em\", marginRight: \"9px\" }}\r\n                class=\"fas fa-map-marker-alt\"\r\n              ></i>{\" \"}\r\n              FIND US ON GOOGLE MAPS\r\n            </button> */}\r\n\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#4267B2\",\r\n                marginInline: \"10px\",\r\n                alignContent: \"center\",\r\n                display: \"inline-flex\",\r\n                width: \"250px\",\r\n                justifyContent: \"center\",\r\n                letterSpacing: \"1px\",\r\n                padding: \"10px\"\r\n              }}\r\n              onClick={()=> window.open(\"https://www.facebook.com/Backyardbbqrestaurant/?ref=page_internal\")}\r\n              className='social-media'\r\n            >\r\n              <i\r\n                style={{ fontSize: \"1.73em\", marginRight: \"9px\" }}\r\n                class='fab fa-facebook-square'\r\n              ></i>{\" \"}\r\n              LIKE US ON FACEBOOK\r\n            </button>\r\n\r\n            <button\r\n              style={{\r\n                backgroundColor: \"#F58529\",\r\n                marginInline: \"10px\",\r\n                alignContent: \"center\",\r\n                display: \"inline-flex\",\r\n                width: \"250px\",\r\n                justifyContent: \"center\",\r\n                letterSpacing: \"1px\",\r\n                padding: \"10px\"\r\n              }}\r\n              onClick={()=> window.open(\"https://www.instagram.com/backyard.bbq.restaurant/?hl=en\")}\r\n              className='social-media'\r\n            >\r\n              <i\r\n                style={{ fontSize: \"1.73em\", marginRight: \"9px\" }}\r\n                class='fab fa-instagram'\r\n              ></i>{\" \"}\r\n              FOLLOW US ON INSTAGRAM\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst CheckoutButtonBar = () => {\r\n  const history = useHistory();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  // console.log(history)\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#ed1c24\", height: \"70px\", width: \"100%\" }}>\r\n      <span style={{ lineHeight: \"60px\" }}>\r\n        <span style={{ display: \"inline-block\" }} />\r\n      </span>\r\n\r\n      <div\r\n        style={{\r\n          top: \"92%\",\r\n          position: \"absolute\",\r\n          right: \"5%\",\r\n          minWidth: \"200px\",\r\n        }}\r\n      >\r\n        <Button\r\n          type='button'\r\n          className='btn-block'\r\n          disabled={cartItems.length === 0}\r\n          onClick={checkoutHandler}\r\n          style={{\r\n            color: \"#fff\",\r\n            backgroundColor: \"#4582ec\",\r\n            boxShadow: \"0 5px 5px 0 rgba(0,0,0,0.15)\",\r\n            fontSize: \"20px\",\r\n            borderRadius: \"5px\",\r\n            width: \"100%\"\r\n          }}\r\n        >\r\n          Checkout\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutButtonBar;\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:'info',\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n        <span className='sr-only'>Loading...</span>\r\n\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\nexport const PRODUCT_FILTERED_REQUEST = 'PRODUCT_FILTERED_REQUEST'\r\nexport const PRODUCT_FILTERED_SUCCESS = 'PRODUCT_FILTERED_SUCCESS'\r\nexport const PRODUCT_FILTERED_FAIL = 'PRODUCT_FILTERED_FAIL'\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_FILTERED_REQUEST,\r\n  PRODUCT_FILTERED_SUCCESS,\r\n  PRODUCT_FILTERED_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listProducts =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listProductFiltered = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_FILTERED_REQUEST });\r\n    const { data } = await axios.get(`/api/products/filtered`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_FILTERED_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_FILTERED_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Card, Container } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\nimport ItemsCarousel from \"react-items-carousel\";\r\n\r\nconst HomeScreen = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  const [index, setIndex] = useState(0);\r\n\r\n  console.log(index);\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    history.push(`/product/${id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Welcome to Backyard BBQ</title>\r\n        <meta\r\n          name='description'\r\n          content='Restaurant online store for delivery'\r\n        ></meta>\r\n      </Helmet>\r\n\r\n      {!loading && (\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(${products[2].variants.variant_image})`,\r\n            width: \"100%\",\r\n            height: \"600px\",\r\n            backgroundSize: \"cover\",\r\n            flex: 1,\r\n          }}\r\n          className='div-image'\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              height: \"100%\",\r\n              justifyItems: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <h1\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"70px\",\r\n                textShadow: \"3px 3px black\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              ENJOY ALL YOUR FAVORITE MEALS AT\r\n            </h1>\r\n            <h1\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"90px\",\r\n                textAlign: \"center\",\r\n                textShadow: \"3px 3px black\",\r\n              }}\r\n            >\r\n              BACKYARD BBQ RESTAURANT\r\n            </h1>\r\n            <Link\r\n              style={{ justifyContent: \"center\", display: \"flex\" }}\r\n              to='/products'\r\n            >\r\n              <button className='center' variant='contained'>\r\n                START ORDER\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Container>\r\n        <h1\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontFamily: \"Montserrat,sans-serif\",\r\n            fontWeight: \"900\",\r\n            color: \"#4a4a4a\",\r\n            fontSize: \"2.7rem\"\r\n          }}\r\n        >\r\n          BACKYARD BBQ'S DEALS\r\n        </h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error} </Message>\r\n        ) : (\r\n          <div>\r\n            {/* {products.map((product, idx) => (\r\n              <Col key={idx} sm={16} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))} */}\r\n\r\n            <ItemsCarousel\r\n              requestToChangeActive={setIndex}\r\n              activeItemIndex={index}\r\n              numberOfCards={3}\r\n              gutter={20}\r\n              leftChevron={\r\n                <i\r\n                  style={{ color: \"black\" }}\r\n                  class='fas fa-chevron-circle-left'\r\n                ></i>\r\n              }\r\n              rightChevron={\r\n                <i\r\n                  style={{ color: \"black\" }}\r\n                  class='fas fa-chevron-circle-right'\r\n                ></i>\r\n              }\r\n              outsideChevron\r\n              chevronWidth={40}\r\n              slidesToScroll={3}\r\n              alwaysShowChevrons={false}\r\n            >\r\n              {products.map((product, idx) => {\r\n                return (\r\n                  <Card\r\n                    style={{ border: \"1px solid rgba(0, 0, 0, 0.125)\" }}\r\n                    key={idx}\r\n                    className='my-3 p-3 rounded'\r\n                  >\r\n                    <Card.Img\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"350px\",\r\n                        borderRadius: 3,\r\n                        objectFit: \"cover\",\r\n                        cursor: \"default\",\r\n                      }}\r\n                      src={product.variants.variant_image}\r\n                      variant='top'\r\n                    />\r\n\r\n                    <Card.Body>\r\n                      <Card.Title as='div'>\r\n                        <strong>{product.variants.option1_value}</strong>\r\n                      </Card.Title>\r\n                    </Card.Body>\r\n                    <button\r\n                      onClick={() => handleClick(product._id)}\r\n                      className='center-smaller'\r\n                    >\r\n                      ADD TO ORDER\r\n                    </button>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </ItemsCarousel>\r\n          </div>\r\n        )}\r\n      </Container>\r\n      {!loading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            flex: 2,\r\n            height: \"600px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(https://lamarquise.ae/wp-content/uploads/2020/09/Mix-Grill-Platter-01.jpg)`,\r\n              width: \"100%\",\r\n\r\n              backgroundSize: \"cover\",\r\n              flex: 1,\r\n              backgroundPosition: \"center\",\r\n              display: \"flex\",\r\n            }}\r\n            className='div-image'\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              flex: 1,\r\n              flexDirection: \"column\",\r\n              backgroundColor: \"floralwhite \",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h3\r\n              style={{\r\n                color: \"#4a4a4a\",\r\n                fontSize: \"40px\",\r\n                fontWeight: \"900\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Montserrat,sans-serif\",\r\n                padding: \"30px\"\r\n              }}\r\n            >\r\n              Try our new Arabic Platter !\r\n            </h3>\r\n            <h4\r\n              style={{\r\n                color: \"#4a4a4a\",\r\n                fontSize: \"20px\",\r\n                textAlign: \"center\",\r\n                padding: \"30px\",\r\n                lineHeight: \"2rem\"\r\n        \r\n              }}\r\n            >\r\n              Every month we come out with a new and unique premium deals for\r\n              you to try. Stop by your local Backyard BBQ today to try this\r\n              month's exclusive deal. Hurry in before it's gone and keep your\r\n              eyes peeled for next month's deal.\r\n            </h4>\r\n\r\n            <Link\r\n              style={{ justifyContent: \"center\", display: \"flex\", alignSelf:\"center\", marginTop: \"3rem\" }}\r\n              to='/products'\r\n            >\r\n              <button className='center' variant='contained'>\r\n                LEARN MORE\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && (\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(https://images.prismic.io/brinker-chilis/75f65348-f119-445b-8271-f41beb916ded_ChilisWeb_OutToIta_FajitaArray_Q3F20.jpg?auto=compress,format&rect=0,0,1600,512&w=1600&h=512)`,\r\n            width: \"100%\",\r\n            height: \"600px\",\r\n            backgroundSize: \"cover\",\r\n            flex: 1,\r\n            backgroundPosition: \"center\",\r\n          }}\r\n          className='div-image'\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              height: \"100%\",\r\n              justifyItems: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <h3\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"50px\",\r\n                fontWeight: \"900\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Montserrat,sans-serif\",\r\n              }}\r\n            >\r\n              Get Backyard BBQ for Delivery or Pickup now !\r\n            </h3>\r\n            <h4\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"20px\",\r\n                textAlign: \"center\",\r\n                lineHeight: \"2rem\"\r\n              }}\r\n            >\r\n              We've got food deals the whole family will love for lunch or\r\n              dinner!\r\n            </h4>\r\n\r\n            <Link\r\n              style={{ justifyContent: \"center\", display: \"flex\", padding:\"30px\" }}\r\n              to='/products'\r\n            >\r\n              <button className='center' variant='contained'>\r\n                ORDER NOW\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nconst ProductsScreen = ({ match }) => {\r\n  // const keyword = match.params.keyword;\r\n  // const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  console.log(productList);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Welcome to Backyard BBQ</title>\r\n        <meta\r\n          name='description'\r\n          content='Retaurant online store for delivery'\r\n        ></meta>\r\n      </Helmet>\r\n\r\n      {/* {!keyword && <ProductCarousel />} */}\r\n      <h1 style={{ textAlign: \"center\" }}>BACKYARD BBQ'S MENU</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row style={{ display: \"flex\" }}>\r\n          {products.map((product, idx) => {\r\n            if (\r\n              product.item_name !== \"Cigarette\" &&\r\n              product.item_name !== \"Delivery Charges\" &&\r\n              product.item_name !== \"Crockery\"\r\n            ) {\r\n              return (\r\n                <Col\r\n                  style={{ width: \"25%\" }}\r\n                  key={idx}\r\n                  sm={16}\r\n                  md={6}\r\n                  lg={4}\r\n                  xl={3}\r\n                >\r\n                  <Card key={idx} className='my-3 p-3 rounded'>\r\n                    <Link\r\n                      style={{\r\n                        boxShadow: \"0 2px 10px 0 hsl(0deg 0% 61% / 50%)\",\r\n                      }}\r\n                      to={`/product/${product._id}`}\r\n                    >\r\n                      <Card.Img\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"350px\",\r\n                          borderRadius: 3,\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        src={product.image_url}\r\n                        variant='top'\r\n                      />\r\n                    </Link>\r\n\r\n                    <Card.Body>\r\n                      <Card.Title as='div'>\r\n                        <strong>{product.item_name}</strong>\r\n                      </Card.Title>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            }\r\n          })}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","import React from 'react'\r\nimport { propTypes } from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n      <div className='rating'>\r\n        <span>\r\n          <i\r\n            style={{ color }}\r\n            className={\r\n              value >= 1\r\n                ? 'fas fa-star'\r\n                : value >= 0.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            style={{ color }}\r\n            className={\r\n              value >= 2\r\n                ? 'fas fa-star'\r\n                : value >= 1.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            style={{ color }}\r\n            className={\r\n              value >= 3\r\n                ? 'fas fa-star'\r\n                : value >= 2.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            style={{ color }}\r\n            className={\r\n              value >= 4\r\n                ? 'fas fa-star'\r\n                : value >= 3.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            style={{ color }}\r\n            className={\r\n              value >= 5\r\n                ? 'fas fa-star'\r\n                : value >= 4.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n          ></i>\r\n        </span>\r\n        <span>{text && text}</span>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n\r\nRating.defaultProps = {\r\n    color: '#f5ce42'\r\n}\r\n\r\n// Rating.propTypes = {\r\n//     color: propTypes.string.isRequired\r\n// }\r\n\r\nexport default Rating\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Card, Button, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Rating from \"../components/Rating\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\nimport { IndexLinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState([]);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [productList, setProductList] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { error, loading, product } = productDetails;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const { success: successProductReview, error: errorProductReview } =\r\n    productReviewCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productFind =\r\n    productList &&\r\n    product.variants &&\r\n    product.variants.filter(\r\n      (x) => x.option1_value === productList[x.option1_value]\r\n    );\r\n\r\n  //   console.log(productFind)\r\n  // console.log(cartItems);\r\n  // console.log(product)\r\n  // console.log(qty);\r\n  // console.log(productList)\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n\r\n    let obj = {};\r\n\r\n    product.variants &&\r\n      product.variants.map((items) => {\r\n        const pName = items.option1_value\r\n          ? items.option1_value\r\n          : product.item_name;\r\n\r\n        obj[pName] = 1;\r\n      });\r\n\r\n    setProductList(() => ({ ...obj }));\r\n\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n\r\n    if (productFind) {\r\n   \r\n      // console.log(list);\r\n\r\n      // product.variants &&\r\n      //   product.variants.map((items, index1) => {\r\n      //     cartItems.map((cart, index2) => {\r\n      //       if (cart.vid === items.variant_id) {\r\n      //         list[cart.option1_value] = cart.qty;\r\n      //       }\r\n      //     });\r\n      //   });\r\n\r\n      // setProductList(() => ({ ...list }));\r\n    }\r\n    if (successProductReview) {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, match, product._id]);\r\n\r\n\r\n   useMemo(() => {\r\n\r\n    if(productList) {\r\n      let list = {...productList}\r\n      product.variants &&\r\n        product.variants.map((items, index1) => {\r\n          cartItems.map((cart, index2) => {\r\n            if (cart.vid === items.variant_id) {\r\n              list[cart.option1_value] = cart.qty;\r\n            }\r\n          });\r\n        });\r\n\r\n      setProductList(() => ({ ...list }));\r\n    }\r\n\r\n  }, [cartItems, product.variants])\r\n\r\n  // const submitHandler = (e) => {\r\n  //   e.preventDefault();\r\n  //   dispatch(\r\n  //     createProductReview(match.params.id, {\r\n  //       rating,\r\n  //       comment,\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  const decrement = (index) => {\r\n    const list = { ...productList };\r\n\r\n    if (list[index] > 1) {\r\n      list[index] += -1;\r\n      setProductList(list);\r\n    }\r\n  };\r\n\r\n  const increment = (index) => {\r\n    const list = { ...productList };\r\n    list[index] += 1;\r\n    setProductList(list);\r\n  };\r\n\r\n  const addToCartHandler = (vid, index) => {\r\n    history.push(\r\n      `/cart/${match.params.id}?vid=${vid}?qty=${productList[index]}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Link className='btn btn-light my-3' to='/products'>\r\n        GO BACK\r\n      </Link> */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <h1 style={{ textAlign: \"center\" }}>\r\n            <strong>{product.item_name}</strong>\r\n          </h1>\r\n          <Row style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            {product.variants.map((item, index) => {\r\n              return (\r\n                <Col\r\n                  style={{ padding: \"5px\" }}\r\n                  sm={16}\r\n                  md={6}\r\n                  lg={4}\r\n                  xl={3}\r\n                  key={index}\r\n                >\r\n                  <Card className='my-3 p-3 rounded'>\r\n                    {item.option1_value && (\r\n                      <Card.Text\r\n                        style={{ textAlign: \"center\", marginBotton: \"10px\" }}\r\n                        as='div'\r\n                      >\r\n                        <strong> {item.option1_value} </strong>\r\n                      </Card.Text>\r\n                    )}\r\n                    <Card.Img\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"350px\",\r\n                        borderRadius: 3,\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      src={product.image_url}\r\n                      variant='top'\r\n                    />\r\n\r\n                    <Card.Body>\r\n                      {item.option2_value && (\r\n                        <Card.Text>{item.option2_value}</Card.Text>\r\n                      )}\r\n                      <Card.Title>Rs. {item.default_price}</Card.Title>\r\n\r\n                      <Col\r\n                        style={{\r\n                          marginTop: \"10px\",\r\n                          marginBottom: \"5px\",\r\n                          width: \"100%\",\r\n                        }}\r\n                        className='text-center py-3'\r\n                      >\r\n                        <Button\r\n                          className='social-media'\r\n                          type='button'\r\n                          onClick={() => decrement(item.option1_value)}\r\n                          style={{\r\n                            backgroundColor: \"red\",\r\n                            alignContent: \"center\",\r\n                            display: \"inline-flex\",\r\n                            marginInline: \"10px\",\r\n                          }}\r\n                        >\r\n                          <i\r\n                            style={{ fontSize: \"1.1em\" }}\r\n                            className='fas fa-minus-square'\r\n                          />\r\n                        </Button>\r\n\r\n                        <Card.Subtitle\r\n                          style={{\r\n                            marginInline: \"10px\",\r\n                            alignContent: \"center\",\r\n                            display: \"inline-flex\",\r\n                          }}\r\n                        >\r\n                          Quantity : {productList[item.option1_value]}\r\n                        </Card.Subtitle>\r\n\r\n                        <Button\r\n                          type='button'\r\n                          className='social-media'\r\n                          onClick={() => increment(item.option1_value)}\r\n                          style={{\r\n                            backgroundColor: \"red\",\r\n                            alignContent: \"center\",\r\n                            display: \"inline-flex\",\r\n                            marginInline: \"10px\",\r\n                          }}\r\n                        >\r\n                          <i\r\n                            style={{ fontSize: \"1.1em\" }}\r\n                            className='fas fa-plus-square'\r\n                          />\r\n                        </Button>\r\n                      </Col>\r\n\r\n                      <Button\r\n                        onClick={() =>\r\n                          addToCartHandler(item.variant_id, item.option1_value)\r\n                        }\r\n                        className='social-media'\r\n                        type='button'\r\n                        style={{\r\n                          width: \"100%\",\r\n                          backgroundColor: \"red\",\r\n                          fontSize: \"0.6em\",\r\n                        }}\r\n                      >\r\n                        ADD TO CART\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n          {/* <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating}></Rating>\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select..</option>\r\n                          <option value='1'>Poor</option>\r\n                          <option value='2'>Fair</option>\r\n                          <option value='3'>Good</option>\r\n                          <option value='4'>Very Good</option>\r\n                          <option value='5'>Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[2]) : 1;\r\n  const vid = location.search && location.search.split(\"=\")[1].split(\"?\")[0];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty, vid));\r\n    }\r\n  }, [dispatch, productId, qty, vid]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  // console.log(history)\r\n\r\n  return (\r\n    <Col>\r\n      <h1\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontFamily: \"Montserrat,sans-serif\",\r\n          fontWeight: \"900\",\r\n          color: \"#4a4a4a\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        Cart\r\n      </h1>\r\n      <div style={{ display: \"inline-flex\", width: \"100%\" }}>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your Cart is Empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <div style={{ width: \"100%\" }}>\r\n            {cartItems.map((item, index) => {\r\n              return (\r\n                <Row\r\n                  key={item.vid}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    flexBasis: \"33.3%\",\r\n                    padding: \"10px\",\r\n                    alignItems: \"center\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <Col md={2}>\r\n                    <Link to={`/product/${item.product}`}>\r\n                      <Image\r\n                        style={{\r\n                          objectFit: \"cover\",\r\n                          height: \"150px\",\r\n                          width: \"150px\",\r\n                        }}\r\n                        src={item.image}\r\n                        fluid\r\n                        rounded\r\n                      ></Image>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col>x {item.qty}</Col>\r\n                  <Col md={3}>\r\n                    <Row>\r\n                      <h4>{item.option1_value}</h4>\r\n                    </Row>\r\n                    <Row>{item.option2_value}</Row>\r\n                    <Row>{item.name}</Row>\r\n                  </Col>\r\n\r\n                  <Col md={2}>Rs.{item.price}</Col>\r\n                  {/* <Col md={2}>\r\n                      <Form>\r\n                        <Button\r\n                          className='bi bi-plus'\r\n                          type='button'\r\n                          onClick={() =>\r\n                            dispatch(\r\n                              addToCart(\r\n                                item.product,\r\n                                Number(item.qty > 1 ? item.qty - 1 : item.qty)\r\n                              )\r\n                            )\r\n                          }\r\n                        >\r\n                          <i className='fas fa-minus-square' />\r\n                        </Button>\r\n                        <h3>{item.qty}</h3>\r\n                        <Button\r\n                          type='button'\r\n                          onClick={() =>\r\n                            dispatch(\r\n                              addToCart(item.product, Number(item.qty + 1))\r\n                            )\r\n                          }\r\n                        >\r\n                          <i className='fas fa-plus-square' />\r\n                        </Button>\r\n                      </Form>\r\n                    </Col> */}\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.vid)}\r\n                    >\r\n                      <i className='fas fa-trash' />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        <Card style={{ width: \"20%\", height: \"fit-content\" }}>\r\n          <ListGroup variants='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal:\r\n                {/* ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) */}\r\n              </h2>\r\n              <text>\r\n                Rs.\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                  .toFixed(0)}\r\n              </text>\r\n            </ListGroup.Item>\r\n\r\n            {/* <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Checkout\r\n              </Button> */}\r\n          </ListGroup>\r\n        </Card>\r\n      </div>\r\n      {/* <div style={{height: \"70px\", width:\"100%\", backgroundColor:\"#ed1c24\", position:\"fixed\", bottom:\"0\"}}>\r\n\r\n      </div> */}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty, vid) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  const pd = data.variants.filter((items) => items.variant_id === vid);\r\n\r\n  // console.log(data)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.item_name,\r\n      image: data.image_url,\r\n      price: pd[0].default_price,\r\n      option1_value: pd[0].option1_value,\r\n      option2_value: pd[0].option2_value,\r\n      qty,\r\n      vid,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col\r\n          style={{\r\n            display: \"grid\",\r\n            alignContent: \"center\",\r\n            width: \"100%\",\r\n          }}\r\n          md={10}\r\n        >\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from '../components/Message'\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/pay`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Delivery Details</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Delivery Details</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  console.log(cart);\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer\r\n      \r\n    >\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Delivery Details</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Cash'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  console.log(cart)\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, {  useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(0);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    // const addPayPalScript = async () => {\r\n    //   const { data: clientId } = await axios.get('/api/config/paypal')\r\n    //   const script = document.createElement('script')\r\n    //   script.type = 'text/javascript'\r\n    //   script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n    //   script.async = true\r\n    //   script.onload = () => {\r\n    //     setSdkReady(true)\r\n    //   }\r\n    //   document.body.appendChild(script)\r\n    // }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n        // if (!order || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } \r\n  }, [dispatch, orderId, order, history, userInfo, successPay, successDeliver]);\r\n\r\n  const paymentHandler = () => {\r\n   dispatch(payOrder(order))\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rs. {item.price} = Rs. {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>Rs. {order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>Rs. {order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>Rs. {order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>Rs. {order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {/* {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                   \r\n                    <Butto\r\n          \r\n                      onClick={paymentHandler}\r\n                    ></Butto\r\n                  \r\n                </ListGroup.Item>\r\n              )}  */}\r\n            {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            {loadingPay && <Loader />}\r\n            {userInfo &&\r\n                userInfo.isAdmin && \r\n                !order.isPaid &&(\r\n                <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={paymentHandler}\r\n                    >Rs.{order.totalPrice}</ Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                   : `/page/${x + 1}`\r\n                : \r\n                `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>VARIANT ID</th>\r\n                <th>CATEGORY</th>\r\n                <th>OPTION1_VALUE</th>\r\n                <th>SIZE</th>\r\n                <th>PRICE</th>\r\n                {/* <th>BRAND</th> */}\r\n              </tr>\r\n            </thead>\r\n            <>\r\n            {products.map((product) => {\r\n              return (\r\n                <tbody key={product._id}>\r\n                  {product.variants.map((item) => {\r\n                    console.log(item);\r\n                    return (\r\n                      <tr key={item.variant_id}>\r\n                        <td>{item.variant_id}</td>\r\n                        <td>{product.item_name}</td>\r\n                        <td>\r\n                          {product.option1_name !== \"size\" ||\r\n                          product.option1_name !== null\r\n                            ? item.option1_value\r\n                            : product.item_name}\r\n                        </td>\r\n                        <td>{item.option2_value}</td>\r\n                        <td>Rs.{item.default_price}</td>\r\n                        {/* <td>{product.category}</td> */}\r\n                        <td>\r\n                          <LinkContainer\r\n                            to={`/admin/product/${product._id}/edit`}\r\n                          >\r\n                            <Button variant='light' className='btn-sm'>\r\n                              <i className='fas fa-edit'></i>\r\n                            </Button>\r\n                          </LinkContainer>\r\n                          <Button\r\n                            variant='danger'\r\n                            className='btn-sm'\r\n                            onClick={() => deleteHandler(product._id)}\r\n                          >\r\n                            <i className='fas fa-trash'></i>\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              );\r\n            })}\r\n            </>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.item_name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.item_name)\r\n        setPrice(product.price)\r\n        setImage(product.image_url)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","export const INVENTORY_LIST_REQUEST = 'INVENTORY_LIST_REQUEST'\r\nexport const INVENTORY_LIST_SUCCESS = 'INVENTORY_LIST_SUCCESS'\r\nexport const INVENTORY_LIST_FAIL = 'INVENTORY_LIST_FAIL'\r\n\r\nexport const INVENTORY_SALARY_REQUEST = 'INVENTORY_SALARY_REQUEST'\r\nexport const INVENTORY_SALARY_SUCCESS = 'INVENTORY_SALARY_SUCCESS'\r\nexport const INVENTORY_SALARY_FAIL = 'INVENTORY_SALARY_FAIL'\r\n\r\nexport const INVENTORY_UNPAID_REQUEST = 'INVENTORY_UNPAID_REQUEST'\r\nexport const INVENTORY_UNPAID_SUCCESS = 'INVENTORY_UNPAID_SUCCESS'\r\nexport const INVENTORY_UNPAID_FAIL = 'INVENTORY_UNPAID_FAIL'\r\n\r\nexport const INVENTORY_COST_REQUEST = 'INVENTORY_COST_REQUEST'\r\nexport const INVENTORY_COST_SUCCESS = 'INVENTORY_COST_SUCCESS'\r\nexport const INVENTORY_COST_FAIL = 'INVENTORY_COST_FAIL'\r\n\r\nexport const INVENTORY_CREATE_REQUEST = 'INVENTORY_CREATE_REQUEST'\r\nexport const INVENTORY_CREATE_SUCCESS = 'INVENTORY_CREATE_SUCCESS'\r\nexport const INVENTORY_CREATE_FAIL = 'INVENTORY_CREATE_FAIL'\r\nexport const INVENTORY_CREATE_RESET = 'INVENTORY_CREATE_RESET'\r\n\r\nexport const INVENTORY_DELETE_REQUEST = 'INVENTORY_DELETE_REQUEST'\r\nexport const INVENTORY_DELETE_SUCCESS = 'INVENTORY_DELETE_SUCCESS'\r\nexport const INVENTORY_DELETE_FAIL = 'INVENTORY_DELETE_FAIL'\r\n\r\nexport const INVENTORY_UPDATE_REQUEST = 'INVENTORY_UPDATE_REQUEST'\r\nexport const INVENTORY_UPDATE_SUCCESS = 'INVENTORY_UPDATE_SUCCESS'\r\nexport const INVENTORY_UPDATE_FAIL = 'INVENTORY_UPDATE_FAIL'\r\nexport const INVENTORY_UPDATE_RESET = 'INVENTORY_UPDATE_RESET'\r\n\r\nexport const INVENTORY_DETAILS_REQUEST = 'INVENTORY_DETAILS_REQUEST'\r\nexport const INVENTORY_DETAILS_SUCCESS = 'INVENTORY_DETAILS_SUCCESS'\r\nexport const INVENTORY_DETAILS_FAIL = 'INVENTORY_DETAILS_FAIL'\r\n\r\nexport const INVENTORY_GROUP_REQUEST = 'INVENTORY_GROUP_REQUEST'\r\nexport const INVENTORY_GROUP_SUCCESS = 'INVENTORY_GROUP_SUCCESS'\r\nexport const INVENTORY_GROUP_FAIL = 'INVENTORY_GROUP_FAIL'\r\n\r\nexport const INVENTORY_DATES_REQUEST = 'INVENTORY_DATES_REQUEST'\r\nexport const INVENTORY_DATES_SUCCESS = 'INVENTORY_DATES_SUCCESS'\r\nexport const INVENTORY_DATES_FAIL = 'INVENTORY_DATES_FAIL'","import axios from \"axios\";\r\nimport {\r\n  INVENTORY_LIST_REQUEST,\r\n  INVENTORY_LIST_SUCCESS,\r\n  INVENTORY_LIST_FAIL,\r\n  INVENTORY_CREATE_REQUEST,\r\n  INVENTORY_CREATE_SUCCESS,\r\n  INVENTORY_CREATE_FAIL,\r\n  INVENTORY_UPDATE_REQUEST,\r\n  INVENTORY_UPDATE_SUCCESS,\r\n  INVENTORY_UPDATE_FAIL,\r\n  INVENTORY_DETAILS_REQUEST,\r\n  INVENTORY_DETAILS_SUCCESS,\r\n  INVENTORY_DETAILS_FAIL,\r\n  INVENTORY_DELETE_REQUEST,\r\n  INVENTORY_DELETE_SUCCESS,\r\n  INVENTORY_DELETE_FAIL,\r\n  INVENTORY_GROUP_REQUEST,\r\n  INVENTORY_GROUP_SUCCESS,\r\n  INVENTORY_GROUP_FAIL,\r\n  INVENTORY_DATES_REQUEST,\r\n  INVENTORY_DATES_SUCCESS,\r\n  INVENTORY_DATES_FAIL,\r\n  INVENTORY_COST_REQUEST,\r\n  INVENTORY_COST_SUCCESS,\r\n  INVENTORY_COST_FAIL,\r\n  INVENTORY_SALARY_REQUEST,\r\n  INVENTORY_SALARY_SUCCESS,\r\n  INVENTORY_SALARY_FAIL,\r\n  INVENTORY_UNPAID_REQUEST,\r\n  INVENTORY_UNPAID_SUCCESS,\r\n  INVENTORY_UNPAID_FAIL,\r\n} from \"../constants/inventoryConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listInventory = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORY_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/inventory`, config\r\n    );\r\n\r\n\r\n    dispatch({\r\n      type: INVENTORY_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const salaryInventory = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORY_SALARY_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/inventory/salary`, config\r\n    );\r\n\r\n\r\n    dispatch({\r\n      type: INVENTORY_SALARY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_SALARY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const unpaidInventory = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORY_UNPAID_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/inventory/unpaid`, config\r\n    );\r\n\r\n\r\n\r\n    dispatch({\r\n      type: INVENTORY_UNPAID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_UNPAID_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listDatesInventory = (startDate,endDate) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORY_DATES_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/inventory/dates?startDate=${startDate}&endDate=${endDate}`, config\r\n    );\r\n\r\n    // console.log(inventory)\r\n\r\n    dispatch({\r\n      type: INVENTORY_DATES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_DATES_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const costInventory = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORY_COST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/inventory/inventorycost`, config);\r\n\r\n    dispatch({\r\n      type: INVENTORY_COST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_COST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const groupInventory = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORY_GROUP_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/inventory/inventorygroup`, config);\r\n\r\n    dispatch({\r\n      type: INVENTORY_GROUP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_GROUP_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listInventoryDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: INVENTORY_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/inventory/${id}`);\r\n\r\n    dispatch({\r\n      type: INVENTORY_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: INVENTORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createInventory = (inventory) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: INVENTORY_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/inventory`, inventory, config);\r\n\r\n    dispatch({\r\n      type: INVENTORY_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateInventory = (inventory) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: INVENTORY_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/inventory/${inventory._id}`,\r\n      inventory,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: INVENTORY_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: INVENTORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteInventory = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: INVENTORY_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/inventory/${id}`, config);\r\n\r\n    dispatch({\r\n      type: INVENTORY_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORY_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\n// import Paginate from \"../components/Paginate\";\r\nimport {\r\n  listInventory,\r\n  deleteInventory,\r\n  listDatesInventory,\r\n} from \"../actions/inventoryActions\";\r\n// import { INVENTORY_CREATE_RESET } from \"../constants/productConstants\";\r\n// import { listDatesInventory } from \"../actions/inventoryActions\";\r\nimport \"../css/Search.css\";\r\n\r\nconst InventoryListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const inventoryList = useSelector((state) => state.inventoryList);\r\n  const { loading, error, inventory } = inventoryList;\r\n\r\n  const inventoryDelete = useSelector((state) => state.inventoryDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = inventoryDelete;\r\n\r\n  const inventoryDatesList = useSelector((state) => state.inventoryDates);\r\n  const {\r\n    loading: loadingDates,\r\n    error: errorDates,\r\n    inventoryDates,\r\n  } = inventoryDatesList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [showSearch, setShowSearch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(listInventory());\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteInventory(id));\r\n    }\r\n  };\r\n\r\n  const selectionRange = {\r\n    startDate: startDate,\r\n    endDate: endDate,\r\n    key: \"selection\",\r\n  };\r\n\r\n  function handleSelect(ranges) {\r\n    setStartDate(ranges.selection.startDate);\r\n    setEndDate(ranges.selection.endDate);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setShowSearch(false);\r\n    dispatch(\r\n      listDatesInventory(startDate.toISOString(), endDate.toISOString())\r\n    );\r\n  };\r\n\r\n  const reduceTotalCost = () => {\r\n    if (loadingDates && !loading) {\r\n      const TotalCost = inventory\r\n        .map((items) => items.total_cost)\r\n        .reduce((a, b) => a + b, 0);\r\n      return (\r\n        <Row\r\n          style={{\r\n            width: \"100%\",\r\n            flex: 1,\r\n            bottom: 0,\r\n            alignContent: \"flex-end\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n        >\r\n          <h5>Total Rs : {TotalCost.toLocaleString()}</h5>\r\n        </Row>\r\n      );\r\n    } else if (!loadingDates) {\r\n      const TotalCost = inventoryDates\r\n        .map((items) => items.total_cost)\r\n        .reduce((a, b) => a + b, 0);\r\n\r\n      return (\r\n        <Row style={{ flex: 1, bottom: 0 }}>\r\n          <h5>Total Rs : {TotalCost.toLocaleString()}</h5>\r\n        </Row>\r\n      );\r\n    }\r\n  };\r\n\r\n  console.log(inventory)\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Inventory</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <LinkContainer to={`/admin/inventory/create`}>\r\n            <Button className='my-3'>\r\n              <i className='fas fa-plus'></i> Create Inventory Item\r\n            </Button>\r\n          </LinkContainer>\r\n        </Col>\r\n      </Row>\r\n      {/* {loadingDelete && <Loader />} */}\r\n      {/* {errorDelete && <Message variant='danger'>{errorDelete}</Message>} */}\r\n      {/* {loadingCreate && <Loader />} */}\r\n      {/* {errorCreate && <Message variant='danger'>{errorCreate}</Message>} */}\r\n      {loadingDates && !loading ? (\r\n        <>\r\n          <div className='banner_search'>\r\n            {showSearch && (\r\n              <div className='search'>\r\n                <DateRangePicker\r\n                  ranges={[selectionRange]}\r\n                  onChange={handleSelect}\r\n                ></DateRangePicker>\r\n                <Button onClick={handleSubmit}>Search Inventory</Button>\r\n              </div>\r\n            )}\r\n            <Button\r\n              className='banner_searchButton'\r\n              variant='outlined'\r\n              onClick={() => setShowSearch(!showSearch)}\r\n            >\r\n              Search Date\r\n            </Button>\r\n          </div>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>USER</th>\r\n                <th>DATE CREATED</th>\r\n                <th>VENDOR</th>\r\n                <th>CATEGORY</th>\r\n                <th>ITEM</th>\r\n                <th>QUANTITY</th>\r\n                <th>COST</th>\r\n                <th>TOTAL COST</th>\r\n                <th>PAID</th>\r\n                <th>PAYMENT DATE</th>\r\n                <th>EDIT/DELETE</th>\r\n              </tr>\r\n            </thead>\r\n            <>\r\n              {inventory &&\r\n                inventory.map((inventory) => {\r\n                  return (\r\n                    <tbody key={inventory._id}>\r\n                      <tr>\r\n                        <td>{inventory.edited_by}</td>\r\n                        <td>{inventory.createdAt.slice(0, 10)}</td>\r\n                        <td>{inventory.vendor}</td>\r\n                        <td>{inventory.category_name}</td>\r\n                        <td>{inventory.item_name}</td>\r\n                        <td>{inventory.item_quantity}</td>\r\n                        <td>{inventory.item_cost}</td>\r\n                        <td>{inventory.total_cost}</td>\r\n                        <td>{inventory.paid && \"PAID\"}</td>\r\n                        <td>{inventory.date_paid.slice(0, 10)}</td>\r\n                        <td>\r\n                          <LinkContainer\r\n                            to={`/admin/inventory/${inventory._id}/edit`}\r\n                          >\r\n                            <Button variant='light' className='btn-sm'>\r\n                              <i className='fas fa-edit'></i>\r\n                            </Button>\r\n                          </LinkContainer>\r\n                          <Button\r\n                            variant='danger'\r\n                            className='btn-sm'\r\n                            onClick={() => deleteHandler(inventory._id)}\r\n                          >\r\n                            <i className='fas fa-trash'></i>\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n            </>\r\n          </Table>\r\n          {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n          {reduceTotalCost()}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className='banner_search'>\r\n            {showSearch && (\r\n              <div className='search'>\r\n                <DateRangePicker\r\n                  ranges={[selectionRange]}\r\n                  onChange={handleSelect}\r\n                ></DateRangePicker>\r\n                <Button onClick={handleSubmit}>Search Inventory</Button>\r\n              </div>\r\n            )}\r\n            <Button\r\n              className='banner_searchButton'\r\n              variant='outlined'\r\n              onClick={() => setShowSearch(!showSearch)}\r\n            >\r\n              Search Date\r\n            </Button>\r\n          </div>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>USER</th>\r\n                <th>DATE CREATED</th>\r\n                <th>VENDOR</th>\r\n                <th>CATEGORY</th>\r\n                <th>ITEM</th>\r\n                <th>QUANTITY</th>\r\n                <th>COST</th>\r\n                <th>TOTAL COST</th>\r\n                <th>PAID</th>\r\n                <th>PAYMENT DATE</th>\r\n                <th>EDIT/DELETE</th>\r\n              </tr>\r\n            </thead>\r\n            <>\r\n              {inventoryDates &&\r\n                inventoryDates.map((inventory) => {\r\n                  return (\r\n                    <tbody key={inventory._id}>\r\n                      <tr>\r\n                        <td>{inventory.edited_by}</td>\r\n                        <td>{inventory.createdAt.slice(0, 10)}</td>\r\n                        <td>{inventory.vendor}</td>\r\n                        <td>{inventory.category_name}</td>\r\n                        <td>{inventory.item_name}</td>\r\n                        <td>{inventory.item_quantity}</td>\r\n                        <td>{inventory.item_cost}</td>\r\n                        <td>{inventory.total_cost}</td>\r\n                        <td>{inventory.paid && \"PAID\"}</td>\r\n                        <td>{inventory.date_paid.slice(0, 10)}</td>\r\n                        <td>\r\n                          <LinkContainer\r\n                            to={`/admin/inventory/${inventory._id}/edit`}\r\n                          >\r\n                            <Button variant='light' className='btn-sm'>\r\n                              <i className='fas fa-edit'></i>\r\n                            </Button>\r\n                          </LinkContainer>\r\n                          <Button\r\n                            variant='danger'\r\n                            className='btn-sm'\r\n                            onClick={() => deleteHandler(inventory._id)}\r\n                          >\r\n                            <i className='fas fa-trash'></i>\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n            </>\r\n          </Table>\r\n          {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n          {reduceTotalCost()}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryListScreen;\r\n","export const INVENTORYLEVEL_LIST_REQUEST = 'INVENTORYLEVEL_LIST_REQUEST'\r\nexport const INVENTORYLEVEL_LIST_SUCCESS = 'INVENTORYLEVEL_LIST_SUCCESS'\r\nexport const INVENTORYLEVEL_LIST_FAIL = 'INVENTORYLEVEL_LIST_FAIL'\r\n\r\nexport const INVENTORYLEVEL_SALARY_REQUEST = 'INVENTORYLEVEL_SALARY_REQUEST'\r\nexport const INVENTORYLEVEL_SALARY_SUCCESS = 'INVENTORYLEVEL_SALARY_SUCCESS'\r\nexport const INVENTORYLEVEL_SALARY_FAIL = 'INVENTORYLEVEL_SALARY_FAIL'\r\n\r\nexport const INVENTORYLEVEL_GROUPED_REQUEST = 'INVENTORYLEVEL_GROUPED_REQUEST'\r\nexport const INVENTORYLEVEL_GROUPED_SUCCESS = 'INVENTORYLEVEL_GROUPED_SUCCESS'\r\nexport const INVENTORYLEVEL_GROUPED_FAIL = 'INVENTORYLEVEL_GROUPED_FAIL'\r\n\r\nexport const INVENTORYLEVEL_CREATE_REQUEST = 'INVENTORYLEVEL_CREATE_REQUEST'\r\nexport const INVENTORYLEVEL_CREATE_SUCCESS = 'INVENTORYLEVEL_CREATE_SUCCESS'\r\nexport const INVENTORYLEVEL_CREATE_FAIL = 'INVENTORYLEVEL_CREATE_FAIL'\r\nexport const INVENTORYLEVEL_CREATE_RESET = 'INVENTORYLEVEL_CREATE_RESET'\r\n\r\nexport const INVENTORYLEVEL_DELETE_REQUEST = 'INVENTORYLEVEL_DELETE_REQUEST'\r\nexport const INVENTORYLEVEL_DELETE_SUCCESS = 'INVENTORYLEVEL_DELETE_SUCCESS'\r\nexport const INVENTORYLEVEL_DELETE_FAIL = 'INVENTORYLEVEL_DELETE_FAIL'\r\n\r\nexport const INVENTORYLEVEL_UPDATE_REQUEST = 'INVENTORYLEVEL_UPDATE_REQUEST'\r\nexport const INVENTORYLEVEL_UPDATE_SUCCESS = 'INVENTORYLEVEL_UPDATE_SUCCESS'\r\nexport const INVENTORYLEVEL_UPDATE_FAIL = 'INVENTORYLEVEL_UPDATE_FAIL'\r\nexport const INVENTORYLEVEL_UPDATE_RESET = 'INVENTORYLEVEL_UPDATE_RESET'\r\n\r\nexport const INVENTORYLEVEL_DETAILS_REQUEST = 'INVENTORYLEVEL_DETAILS_REQUEST'\r\nexport const INVENTORYLEVEL_DETAILS_SUCCESS = 'INVENTORYLEVEL_DETAILS_SUCCESS'\r\nexport const INVENTORYLEVEL_DETAILS_FAIL = 'INVENTORYLEVEL_DETAILS_FAIL'","import axios from \"axios\";\r\nimport {\r\n  INVENTORYLEVEL_LIST_REQUEST,\r\n  INVENTORYLEVEL_LIST_SUCCESS,\r\n  INVENTORYLEVEL_LIST_FAIL,\r\n  INVENTORYLEVEL_CREATE_REQUEST,\r\n  INVENTORYLEVEL_CREATE_SUCCESS,\r\n  INVENTORYLEVEL_CREATE_FAIL,\r\n  INVENTORYLEVEL_UPDATE_REQUEST,\r\n  INVENTORYLEVEL_UPDATE_SUCCESS,\r\n  INVENTORYLEVEL_UPDATE_FAIL,\r\n  INVENTORYLEVEL_DETAILS_REQUEST,\r\n  INVENTORYLEVEL_DETAILS_SUCCESS,\r\n  INVENTORYLEVEL_DETAILS_FAIL,\r\n  INVENTORYLEVEL_DELETE_REQUEST,\r\n  INVENTORYLEVEL_DELETE_SUCCESS,\r\n  INVENTORYLEVEL_DELETE_FAIL,\r\n  INVENTORYLEVEL_GROUPED_REQUEST,\r\n  INVENTORYLEVEL_GROUPED_SUCCESS,\r\n  INVENTORYLEVEL_GROUPED_FAIL,\r\n  INVENTORYLEVEL_SALARY_REQUEST,\r\n  INVENTORYLEVEL_SALARY_SUCCESS,\r\n  INVENTORYLEVEL_SALARY_FAIL,\r\n} from \"../constants/inventoryLevelConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listInventoryLevel = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORYLEVEL_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/inventoryLevel`, config);\r\n\r\n    dispatch({\r\n      type: INVENTORYLEVEL_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORYLEVEL_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const salaryInventoryLevel = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORYLEVEL_SALARY_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/inventoryLevel/salary`, config);\r\n\r\n    dispatch({\r\n      type: INVENTORYLEVEL_SALARY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORYLEVEL_SALARY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const groupedInventoryLevel = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: INVENTORYLEVEL_GROUPED_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/inventoryLevel/grouped`, config);\r\n\r\n    dispatch({\r\n      type: INVENTORYLEVEL_GROUPED_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORYLEVEL_GROUPED_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listInventoryLevelDetails = (category) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: INVENTORYLEVEL_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/inventoryLevel/${category}`);\r\n\r\n    dispatch({\r\n      type: INVENTORYLEVEL_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: INVENTORYLEVEL_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createInventoryLevel =\r\n  (inventoryLevel) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: INVENTORYLEVEL_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/inventoryLevel`,\r\n        inventoryLevel,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: INVENTORYLEVEL_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: INVENTORYLEVEL_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateInventoryLevel =\r\n  (inventoryLevel) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: INVENTORYLEVEL_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/inventoryLevel`,\r\n        inventoryLevel,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: INVENTORYLEVEL_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      dispatch({ type: INVENTORYLEVEL_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: INVENTORYLEVEL_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteInventory = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: INVENTORYLEVEL_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/inventoryLevel/${id}`, config);\r\n\r\n    dispatch({\r\n      type: INVENTORYLEVEL_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: INVENTORYLEVEL_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form, Dropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n// import Paginate from \"../components/Paginate\";\r\nimport { createInventory } from \"../actions/inventoryActions\";\r\nimport { listInventoryLevel } from \"../actions/inventoryLevelActions\";\r\nimport { INVENTORY_CREATE_RESET } from \"../constants/inventoryConstants\";\r\nimport Select from \"react-select\";\r\n\r\nconst InventoryCreateScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const date = new Date();\r\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n  const month =\r\n    date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\r\n  const year = date.getFullYear();\r\n  const todayDate = `${year}-${month}-${day}`;\r\n\r\n  console.log(day);\r\n\r\n  const inventoryCreate = useSelector((state) => state.inventoryCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = inventoryCreate;\r\n\r\n  const inventoryLevelList = useSelector((state) => state.inventoryLevelList);\r\n  const {\r\n    loading: loadingList,\r\n    error: errorList,\r\n    success: successList,\r\n    inventoryLevel,\r\n  } = inventoryLevelList;\r\n\r\n  // console.log(inventoryCategory);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [user, setUser] = useState(userInfo);\r\n\r\n  const CL = inventoryLevel.map((item) => {\r\n    return item.category;\r\n  });\r\n\r\n  const remove_duplicates = (arr) => {\r\n    var obj = {};\r\n    var ret_arr = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n      obj[arr[i]] = true;\r\n    }\r\n    for (var key in obj) {\r\n      ret_arr.push({ label: key, value: true });\r\n    }\r\n    return ret_arr;\r\n  };\r\n\r\n  const categoryList = remove_duplicates(CL);\r\n\r\n  const [category, setCategory] = useState(categoryList[0]);\r\n  const [name, setName] = useState(\"\");\r\n  const [cost, setCost] = useState(0);\r\n  const [size, setSize] = useState(0);\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [paid, setPaid] = useState(true);\r\n  const [datePaid, setDatePaid] = useState(todayDate);\r\n  const [vendor, setVendor] = useState(\"\");\r\n\r\n  // console.log(datePaid);\r\n\r\n  let undefine;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (categoryList) {\r\n      setCategory(categoryList[0]);\r\n    }\r\n\r\n    if (successCreate) {\r\n      dispatch({ type: INVENTORY_CREATE_RESET });\r\n      history.push(`/admin/inventory/create`);\r\n      setCategory(\"\");\r\n      setName(\"\");\r\n      setCost(0);\r\n      setSize(0);\r\n      setQuantity(0);\r\n      setTotalCost(0);\r\n      setPaid(true);\r\n      setDatePaid(todayDate);\r\n      setUser(userInfo);\r\n      setVendor(\"\");\r\n    } else {\r\n      dispatch(listInventoryLevel());\r\n    }\r\n  }, [\r\n    history,\r\n    userInfo,\r\n    successCreate,\r\n    errorCreate,\r\n    dispatch,\r\n    todayDate,\r\n    undefine,\r\n  ]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createInventory({\r\n        user,\r\n        category,\r\n        name,\r\n        cost,\r\n        size,\r\n        quantity,\r\n        totalCost,\r\n        paid,\r\n        datePaid: paid && new Date(datePaid).toISOString(),\r\n        vendor,\r\n      })\r\n    );\r\n  };\r\n\r\n  // console.log(categoryList);\r\n\r\n  if (!category && categoryList[0]) {\r\n    undefine = categoryList[0].label;\r\n  } else if (category && categoryList) {\r\n    undefine = category;\r\n  }\r\n\r\n  // console.log(undefine);\r\n\r\n  const IL = inventoryLevel\r\n    .filter((items) => items.category === undefine && items)\r\n    .map((items) => ({ label: items.item, value: true }));\r\n\r\n  // console.log(category);\r\n  // console.log(IL);\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/inventorylist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Create Inventory Item</h1>\r\n        {loadingCreate && <Loader />}\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loadingList ? (\r\n          <Loader />\r\n        ) : errorList ? (\r\n          <Message variant='danger'>{errorList}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            {/*\r\n             <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group> \r\n            */}\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n\r\n              {categoryList[0] && (\r\n                <Select\r\n                  className='basic-single'\r\n                  classNamePrefix='select'\r\n                  \r\n                  isDisabled={false}\r\n                  isLoading={false}\r\n                  isClearable={false}\r\n                  isRtl={false}\r\n                  isSearchable={true}\r\n                  options={categoryList}\r\n                  name='products'\r\n                  onChange={(e) => setCategory(e.label)}\r\n                  required\r\n                />\r\n              )}\r\n            </Form.Group>\r\n\r\n            {/* \r\n            <Form.Group>\r\n              {categoryList.map((item, idx) => {\r\n                return (\r\n                  <Form.Select key={idx} >\r\n                    <option></option>\r\n                  </Form.Select>\r\n                );\r\n              })}\r\n            </Form.Group> */}\r\n\r\n            {/* <Dropdown>\r\n              <Dropdown.Toggle variant='success' id='dropdown-basic'>\r\n                {category}\r\n              </Dropdown.Toggle>\r\n\r\n              {categoryList.map((item, idx) => {\r\n                return (\r\n                  <Dropdown.Menu key={idx}>\r\n                    <Dropdown.Item>{item}</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                );\r\n              })}\r\n            </Dropdown> */}\r\n            {/* \r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group> */}\r\n\r\n            {category && (\r\n              <Form.Group controlId='category'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Select\r\n                  className='basic-single'\r\n                  classNamePrefix='select'\r\n                  // defaultValue={}\r\n                  isDisabled={false}\r\n                  isLoading={false}\r\n                  isClearable={false}\r\n                  isRtl={false}\r\n                  isSearchable={true}\r\n                  options={IL}\r\n                  name='products'\r\n                  onChange={(e) => setName(e.label)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Form.Group controlId='vendor'>\r\n              <Form.Label>Vendor</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Vendor'\r\n                value={vendor}\r\n                onChange={(e) => setVendor(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='cost'>\r\n              <Form.Label>Cost</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter price'\r\n                value={cost}\r\n                onChange={(e) => setCost(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='size'>\r\n              <Form.Label>Size</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Size'\r\n                value={size}\r\n                onChange={(e) => setSize(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='quantity'>\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Quantity'\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='totalCost'>\r\n              <Form.Label>Total Cost</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                required\r\n                value={totalCost}\r\n                onChange={(e) =>\r\n                  setTotalCost(\r\n                    quantity && cost ? quantity * cost : e.target.value\r\n                  )\r\n                }\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <fieldset>\r\n              <Form.Label>Payment</Form.Label>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Check\r\n                  inline\r\n                  label='Paid'\r\n                  name='group1'\r\n                  type='radio'\r\n                  id='paidTrue'\r\n                  value={true}\r\n                  onChange={() => setPaid(true)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label='Not Paid'\r\n                  name='group1'\r\n                  type='radio'\r\n                  id='paidFalse'\r\n                  value={false}\r\n                  onChange={() => setPaid(false) && setDatePaid(null)}\r\n                />\r\n              </Form.Group>\r\n            </fieldset>\r\n\r\n            {paid && (\r\n              <Form.Group controlId='totalCost'>\r\n                <Form.Label>Payment Date</Form.Label>\r\n                <Form.Control\r\n                  type='date'\r\n                  placeholder='Enter Date'\r\n                  value={datePaid}\r\n                  required\r\n                  onChange={(e) => setDatePaid(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryCreateScreen;\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listInventoryDetails, updateInventory } from '../actions/inventoryActions'\r\nimport { INVENTORY_UPDATE_RESET } from '../constants/inventoryConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const inventoryId = match.params.id\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [cost, setCost] = useState(0);\r\n  const [size, setSize] = useState(0);\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [paid, setPaid] = useState(true);\r\n  const [datePaid, setDatePaid] = useState(\"\");\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const inventoryDetail = useSelector((state) => state.inventoryDetail)\r\n  const { loading, error, inventory } = inventoryDetail\r\n\r\n  const inventoryUpdate = useSelector((state) => state.inventoryUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = inventoryUpdate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [user, setUser] = useState(userInfo);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: INVENTORY_UPDATE_RESET })\r\n      history.push('/admin/inventorylist')\r\n    } else {\r\n      if (!inventory.item_name || inventory._id !== inventoryId) {\r\n        dispatch(listInventoryDetails(inventoryId))\r\n      } else {\r\n\r\n        setCategory(inventory.category)\r\n        setName(inventory.item_name)\r\n        setCost(inventory.item_cost)\r\n        setSize(inventory.item_size)\r\n        setQuantity(inventory.item_quantity)\r\n        setTotalCost(inventory.total_cost)\r\n        setPaid(inventory.paid)\r\n        setDatePaid(inventory.date_paid)\r\n        setUser(userInfo)\r\n      }\r\n    }\r\n  }, [dispatch, history, successUpdate, inventory, userInfo, inventoryId])\r\n\r\n  \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateInventory({\r\n        user,\r\n        name,\r\n        category,\r\n        cost,\r\n        size,\r\n        quantity,\r\n        totalCost,\r\n        paid,\r\n        datePaid,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/inventorylist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Update Inventory Item</h1>\r\n        {loadingUpdate  && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter Name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='cost'>\r\n              <Form.Label>Cost</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Cost'\r\n                value={cost}\r\n                onChange={(e) => setCost(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='size'>\r\n              <Form.Label>Size</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Size'\r\n                value={size}\r\n                onChange={(e) => setSize(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='quantity'>\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Quantity'\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='totalCost'>\r\n              <Form.Label>Total Cost</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Total Cost'\r\n                value={totalCost}\r\n                onChange={(e) => setTotalCost(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <fieldset>\r\n              <Form.Label>Payment</Form.Label>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Check\r\n                  inline\r\n                  label='Paid'\r\n                  name='group1'\r\n                  type='radio'\r\n                  id='paidTrue'\r\n                  value={true}\r\n                  onChange={() => setPaid(true)}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label='Not Paid'\r\n                  name='group1'\r\n                  type='radio'\r\n                  id='paidFalse'\r\n                  value={false}\r\n                  onChange={() => setPaid(false) && setDatePaid(null)}\r\n                />\r\n              </Form.Group>\r\n            </fieldset>\r\n\r\n            {paid && (\r\n              <Form.Group controlId='paymentDate'>\r\n                <Form.Label>Payment Date</Form.Label>\r\n                <Form.Control\r\n                  type='date'\r\n                  placeholder='Enter Date'\r\n                  value={datePaid}\r\n                  onChange={(e) => setDatePaid(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","export const RECEIPT_LIST_REQUEST = \"RECEIPT_LIST_REQUEST\";\r\nexport const RECEIPT_LIST_SUCCESS = \"RECEIPT_LIST_SUCCESS\";\r\nexport const RECEIPT_LIST_FAIL = \"RECEIPT_LIST_FAIL\";\r\n\r\nexport const RECEIPT_UNPAID_REQUEST = \"RECEIPT_UNPAID_REQUEST\";\r\nexport const RECEIPT_UNPAID_SUCCESS = \"RECEIPT_UNPAID_SUCCESS\";\r\nexport const RECEIPT_UNPAID_FAIL = \"RECEIPT_UNPAID_FAIL\";\r\n\r\nexport const RECEIPT_PAID_REQUEST = \"RECEIPT_PAID_REQUEST\";\r\nexport const RECEIPT_PAID_SUCCESS = \"RECEIPT_PAID_SUCCESS\";\r\nexport const RECEIPT_PAID_FAIL = \"RECEIPT_PAID_FAIL\";\r\n\r\nexport const RECEIPT_REMOVE_REQUEST = \"RECEIPT_REMOVE_REQUEST\";\r\nexport const RECEIPT_REMOVE_SUCCESS = \"RECEIPT_REMOVE_SUCCESS\";\r\nexport const RECEIPT_REMOVE_FAIL = \"RECEIPT_REMOVE_FAIL\";\r\n\r\nexport const RECEIPT_DETAILS_REQUEST = \"RECEIPT_DETAILS_REQUEST\";\r\nexport const RECEIPT_DETAILS_SUCCESS = \"RECEIPT_DETAILS_SUCCESS\";\r\nexport const RECEIPT_DETAILS_FAIL = \"RECEIPT_DETAILS_FAIL\";\r\nexport const RECEIPT_DETAILS_RESET = \"RECEIPT_DETAILS_RESET\";\r\n","import axios from \"axios\";\r\nimport {\r\n  RECEIPT_LIST_REQUEST,\r\n  RECEIPT_LIST_SUCCESS,\r\n  RECEIPT_LIST_FAIL,\r\n  RECEIPT_DETAILS_REQUEST,\r\n  RECEIPT_DETAILS_SUCCESS,\r\n  RECEIPT_DETAILS_FAIL,\r\n  RECEIPT_UNPAID_REQUEST,\r\n  RECEIPT_UNPAID_SUCCESS,\r\n  RECEIPT_UNPAID_FAIL,\r\n  RECEIPT_PAID_REQUEST,\r\n  RECEIPT_PAID_SUCCESS,\r\n  RECEIPT_PAID_FAIL,\r\n  RECEIPT_REMOVE_REQUEST,\r\n  RECEIPT_REMOVE_SUCCESS,\r\n  RECEIPT_REMOVE_FAIL,\r\n} from \"../constants/receiptConstants\";\r\nimport { logout } from \"./userActions\";\r\n// const receiptData = require(\"../receiptData\");\r\n\r\nexport const listReceipt =\r\n  (pageNumber = \"\") =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: RECEIPT_LIST_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      console.log(pageNumber)\r\n\r\n      if (pageNumber === \"All\") {\r\n        const { data } = await axios.get(\r\n          `/api/receipt?display=All`,\r\n          config\r\n        );\r\n\r\n        dispatch({\r\n          type: RECEIPT_LIST_SUCCESS,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        const { data } = await axios.get(\r\n          `/api/receipt?pageNumber=${pageNumber}`,\r\n          config\r\n        );\r\n\r\n        dispatch({\r\n          type: RECEIPT_LIST_SUCCESS,\r\n          payload: data,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: RECEIPT_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const unpaidReceipt = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: RECEIPT_UNPAID_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/receipt/unpaid`, config);\r\n    // console.log(data);\r\n\r\n    dispatch({\r\n      type: RECEIPT_UNPAID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: RECEIPT_UNPAID_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listReceiptDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: RECEIPT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.put(`/api/receipt?receiptNumber=${id}`);\r\n\r\n    dispatch({\r\n      type: RECEIPT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RECEIPT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const paidReceipt = (receipt) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: RECEIPT_PAID_REQUEST });\r\n\r\n    console.log(receipt.receiptNumber);\r\n\r\n    const { data } = await axios.put(\r\n      `/api/receipt/paid?receiptNumber=${receipt.receiptNumber}`,\r\n      receipt\r\n    );\r\n\r\n    dispatch({\r\n      type: RECEIPT_PAID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RECEIPT_PAID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeReceipt = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: RECEIPT_REMOVE_REQUEST });\r\n\r\n    const { data } = await axios.put(`/api/receipt/remove?receiptNumber=${id}`);\r\n\r\n    dispatch({\r\n      type: RECEIPT_REMOVE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: RECEIPT_REMOVE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Row, Button, Col,} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listReceipt } from \"../actions/receiptActions\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n\r\n\r\nconst ReceiptListScreen = ({ history, match }) => {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const receiptList = useSelector((state) => state.receiptList);\r\n  const { loading, error, receipt, page, pages } = receiptList;\r\n\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n\r\n  console.log(receipt)\r\n\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo || userInfo.isAdmin) {\r\n      dispatch(listReceipt(pageNumber));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, match, pageNumber]);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPageNumber(value)\r\n  }\r\n \r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Receipt</h1>\r\n        </Col>\r\n      \r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>DATE CREATED</th>\r\n                <th>RECEIPT NUMBER</th>\r\n                <th>POINTS EARNED</th>\r\n                <th>POINTS BALANCE</th>\r\n                <th>TOTAL DISCOUNT</th>\r\n                <th>TOTAL MONEY</th>\r\n                <th>DETAIL</th>\r\n              </tr>\r\n            </thead>\r\n            <>\r\n              {receipt.receipts.map((receipt, idx) => {\r\n                return (\r\n                  <tbody key={idx}>\r\n                    <tr>\r\n                      <td>{receipt.receipt_date}</td>\r\n                      <td>{receipt.receipt_number}</td>\r\n                      <td>{receipt.points_earned}</td>\r\n                      <td>{receipt.points_balance}</td>\r\n\r\n                      <td>Rs. {receipt.total_discount}</td>\r\n                      <td>Rs. {receipt.total_money}</td>\r\n                      <td>\r\n                        <LinkContainer to={`receipt/${receipt.receipt_number}`}>\r\n                          <Button variant='light' className='btn-sm'>\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                );\r\n              })}\r\n            </>\r\n          </Table>\r\n        <Row style={{display: \"grid\", justifyContent: \"center\"}}>\r\n        <Stack spacing={2}>\r\n  \r\n      <Pagination count={pages} page={page} onChange={handleChange} />\r\n    </Stack>\r\n        </Row>\r\n\r\n\r\n          \r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReceiptListScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, ListGroup, Card} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listReceiptDetails } from \"../actions/receiptActions\";\r\n\r\nconst ReceiptDetailScreen = ({ match, history }) => {\r\n  const receiptId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const receiptDetails = useSelector((state) => state.receiptDetails);\r\n  const { receipt, loading, error } = receiptDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  console.log(receiptDetails)\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (!receipt || receipt.receipt_number !== receiptId) {\r\n      dispatch(listReceiptDetails(receiptId));\r\n    }\r\n  }, [dispatch, history, userInfo, receipt, receiptId]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {receipt.receipt_number}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Details</h2>\r\n              <p>\r\n                <strong>Date: </strong> {receipt.receipt_date}\r\n              </p>\r\n              <p>\r\n                <strong>Customer ID: </strong>\r\n                {receipt.customer_id}\r\n              </p>\r\n              <p>\r\n                <strong>Points Earned:</strong>\r\n                {receipt.points_earned}\r\n              </p>\r\n              <p>\r\n                <strong>Points Balance:</strong>\r\n                {receipt.points_balance}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Items</h2>\r\n\r\n              <ListGroup variant='flush'>\r\n                {receipt.line_items.map((item, index) => (\r\n                  <ListGroup.Item key={index}>\r\n                    <Row>\r\n                      <Col md={1}></Col>\r\n                      <Col>{item.variant_name}</Col>\r\n                      <Col md={4}>\r\n                        {item.quantity} x Rs. {item.price} = \r\n                        Rs. {item.quantity * item.price}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Receipt Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Discount</Col>\r\n                  <Col>Rs. {receipt.total_discount}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>Rs. {receipt.total_money}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReceiptDetailScreen;\r\n","export const RECIPE_LIST_REQUEST = \"RECIPE_LIST_REQUEST\";\r\nexport const RECIPE_LIST_SUCCESS = \"RECIPE_LIST_SUCCESS\";\r\nexport const RECIPE_LIST_FAIL = \"RECIPE_LIST_FAIL\";\r\n\r\nexport const RECIPE_DETAILS_REQUEST = \"RECIPE_DETAILS_REQUEST\";\r\nexport const RECIPE_DETAILS_SUCCESS = \"RECIPE_DETAILS_SUCCESS\";\r\nexport const RECIPE_DETAILS_FAIL = \"RECIPE_DETAILS_FAIL\";\r\nexport const RECIPE_DETAILS_RESET = \"RECIPE_DETAILS_RESET\";\r\n\r\nexport const RECIPE_CREATE_REQUEST = 'RECIPE_CREATE_REQUEST'\r\nexport const RECIPE_CREATE_SUCCESS = 'RECIPE_CREATE_SUCCESS'\r\nexport const RECIPE_CREATE_FAIL = 'RECIPE_CREATE_FAIL'\r\nexport const RECIPE_CREATE_RESET = 'RECIPE_CREATE_RESET'\r\n\r\nexport const RECIPE_DELETE_REQUEST = 'RECIPE_DELETE_REQUEST'\r\nexport const RECIPE_DELETE_SUCCESS = 'RECIPE_DELETE_SUCCESS'\r\nexport const RECIPE_DELETE_FAIL = 'RECIPE_DELETE_FAIL'\r\n\r\nexport const RECIPE_UPDATE_REQUEST = 'RECIPE_UPDATE_REQUEST'\r\nexport const RECIPE_UPDATE_SUCCESS = 'RECIPE_UPDATE_SUCCESS'\r\nexport const RECIPE_UPDATE_FAIL = 'RECIPE_UPDATE_FAIL'\r\nexport const RECIPE_UPDATE_RESET = 'RECIPE_UPDATE_RESET'","import axios from \"axios\";\r\nimport {\r\n  RECIPE_LIST_REQUEST,\r\n  RECIPE_LIST_SUCCESS,\r\n  RECIPE_LIST_FAIL,\r\n  RECIPE_DETAILS_REQUEST,\r\n  RECIPE_DETAILS_SUCCESS,\r\n  RECIPE_DETAILS_FAIL,\r\n  RECIPE_DELETE_SUCCESS,\r\n  RECIPE_DELETE_REQUEST,\r\n  RECIPE_DELETE_FAIL,\r\n  RECIPE_CREATE_REQUEST,\r\n  RECIPE_CREATE_SUCCESS,\r\n  RECIPE_CREATE_FAIL,\r\n  RECIPE_UPDATE_REQUEST,\r\n  RECIPE_UPDATE_SUCCESS,\r\n  RECIPE_UPDATE_FAIL,\r\n} from \"../constants/recipeConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listRecipes = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: RECIPE_LIST_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/recipes`, config);\r\n  \r\n      dispatch({\r\n        type: RECIPE_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: RECIPE_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listRecipeDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: RECIPE_DETAILS_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/recipes/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: RECIPE_DETAILS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: RECIPE_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\nexport const createRecipe = (recipe) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: RECIPE_CREATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(`/api/recipes`, recipe, config);\r\n  \r\n      dispatch({\r\n        type: RECIPE_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: RECIPE_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  \r\n  export const updateRecipe = (recipe) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: RECIPE_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/recipes/${recipe._id}`,\r\n        recipe,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: RECIPE_UPDATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n      dispatch({ type: RECIPE_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: RECIPE_UPDATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const deleteRecipe = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: RECIPE_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`/api/recipes/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: RECIPE_DELETE_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: RECIPE_DELETE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Row, Button, Col,  Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { deleteRecipe, listRecipes } from \"../actions/recipeActions\";\r\n\r\n\r\nconst RecipeListScreen = ({ history }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const recipeList = useSelector((state) => state.recipeList);\r\n  const { loading, error, recipe } = recipeList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const recipeDelete = useSelector((state) => state.recipeDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = recipeDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo || userInfo.isAdmin) {\r\n      dispatch(listRecipes());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteRecipe(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col className='text-right'>\r\n        <LinkContainer to={`/admin/recipe/create`}>\r\n          <Button className='my-3'>\r\n            <i className='fas fa-plus'></i> Create Recipe Item\r\n          </Button>\r\n        </LinkContainer>\r\n      </Col>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n        <h1 style={{ textAlign: \"center\" }}>RECIPES</h1>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n            <Row style={{ display: \"flex\" }}>\r\n              {recipe.map((recipe, idx) => {\r\n                return (\r\n                  <Col\r\n                  style={{ width: \"25%\" }}\r\n                  key={idx}\r\n                  sm={16}\r\n                  md={6}\r\n                  lg={4}\r\n                  xl={3}\r\n                >\r\n                  <Card key={idx} className='my-3 p-3 rounded'>\r\n                    <Link\r\n                      style={{\r\n                        boxShadow: \"0 2px 10px 0 hsl(0deg 0% 61% / 50%)\",\r\n                      }}\r\n                      to={`recipe/${recipe._id}/edit/${recipe.label}`}\r\n                    >\r\n                      <Card.Img\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"350px\",\r\n                          borderRadius: 3,\r\n                          objectFit: \"cover\",\r\n                        }}\r\n                        src={recipe.image}\r\n                        variant='top'\r\n                      />\r\n                    </Link>\r\n\r\n                    <Card.Body>\r\n                      <Card.Title style={{padding: \"10px\", minHeight: \"100px\"}} as='div'>\r\n                        <strong>{recipe.label}</strong>\r\n                      </Card.Title>\r\n                      <Button\r\n                        onClick={() => deleteHandler(recipe._id)}\r\n                        \r\n                        className='social-media'\r\n                        type='button'\r\n                        style={{\r\n                          width: \"100%\",\r\n                          backgroundColor: \"red\",\r\n                          fontSize: \"0.6em\",\r\n                        }}\r\n                      >\r\n                        DELETE\r\n                      </Button>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeListScreen;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Select from \"react-select\";\r\n// import {FormControl, MenuItem, Select, InputLabel} from '@material-ui/core/';\r\n// import Paginate from \"../components/Paginate\";\r\nimport { createRecipe } from \"../actions/recipeActions\";\r\nimport { listProductFiltered } from \"../actions/productActions\";\r\nimport { listRecipes } from \"../actions/recipeActions\";\r\nimport { listInventoryLevel } from \"../actions/inventoryLevelActions\";\r\nimport { RECIPE_CREATE_RESET } from \"../constants/recipeConstants\";\r\n\r\nconst RecipeCreateScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [label, setLabel] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([\r\n    { text: \"\", weight: 0, image: \"\", category: \"\", cost: 0, average_cost: 0 },\r\n  ]);\r\n  const [variant_id, setVariant_id] = useState(\"\");\r\n  const [totalCost, setTotalCost] = useState(0);\r\n\r\n  const recipeCreate = useSelector((state) => state.recipeCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = recipeCreate;\r\n\r\n  const productFiltered = useSelector((state) => state.productFiltered);\r\n  const {\r\n    loading: loadingFiltered,\r\n    error: errorFiltered,\r\n    success: successFiltered,\r\n    products,\r\n  } = productFiltered;\r\n\r\n  const recipeList = useSelector((state) => state.recipeList);\r\n  const { loading, error, recipe } = recipeList;\r\n\r\n  const inventoryLevelList = useSelector((state) => state.inventoryLevelList);\r\n  const {\r\n    loading: loadingInventoryLevelList,\r\n    error: errorInventoryLevelError,\r\n    success: successInventoryLevelSuccess,\r\n    inventoryLevel,\r\n  } = inventoryLevelList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [user, setUser] = useState(userInfo);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(listProductFiltered());\r\n      dispatch(listRecipes());\r\n      dispatch(listInventoryLevel());\r\n    }\r\n\r\n    if (successCreate) {\r\n      dispatch({ type: RECIPE_CREATE_RESET });\r\n      history.push(`/admin/recipelist`);\r\n      setLabel(\"\");\r\n      setImage(\"\");\r\n      setIngredients([]);\r\n      setUser(userInfo);\r\n    }\r\n  }, [\r\n    history,\r\n    userInfo,\r\n    successCreate,\r\n    errorCreate,\r\n    dispatch,\r\n    successInventoryLevelSuccess,\r\n  ]);\r\n\r\n  // console.log(productFiltered)\r\n\r\n  const selectProducts =\r\n    products &&\r\n    products\r\n      .map((items) => {\r\n        if (\r\n          items.category !== \"Delivery\" &&\r\n          items.category !== \"Deals\" &&\r\n          items.category !== \"Crockery\" &&\r\n          items.category === items.option1_name\r\n        ) {\r\n          return {\r\n            variant_id: items.variant_id,\r\n            label: items._id,\r\n            product: items.id,\r\n            value: true,\r\n            image_url: items.image,\r\n          };\r\n        }\r\n      })\r\n      .filter((filtered) => filtered);\r\n\r\n  // console.log(selectProducts)\r\n  // console.log(label);\r\n  // console.log(image);\r\n  // console.log(ingredients);\r\n  // console.log(variant_id);\r\n  // console.log(product);\r\n\r\n  let filteredCategories =\r\n    inventoryLevel &&\r\n    inventoryLevel\r\n      .filter((item) => {\r\n        if (\r\n          item.category === \"Grocery\" ||\r\n          item.category === \"Spice\" ||\r\n          item.category === \"Fruits & Vegetables\" ||\r\n          item.category === \"Dairy\" ||\r\n          item.category === \"Wheat\" ||\r\n          item.category === \"Poultry\" ||\r\n          item.category === \"Beef\" ||\r\n          item.category === \"Mutton\"\r\n        )\r\n          return item;\r\n      })\r\n      .map((item) => {\r\n        return {\r\n          value: true,\r\n          label: item.item,\r\n          _id: item._id,\r\n          category: item.category,\r\n          name: \"text\",\r\n          average_cost: item.average_cost,\r\n        };\r\n      });\r\n\r\n  const handleInputChangeProducts = (e) => {\r\n    setLabel(e.label);\r\n    setImage(e.image_url);\r\n    setVariant_id(e.variant_id);\r\n  };\r\n\r\n  const handleInputChange = (e, index) => {\r\n    let list = [...ingredients];\r\n\r\n    if (e.name === \"text\") {\r\n      // console.log(e.label)\r\n      // console.log(list[index][\"text\"])\r\n      list[index][\"text\"] = e.label;\r\n      let findCategory = filteredCategories.filter((items) => {\r\n        if (items.label === list[index][\"text\"]) {\r\n          return items;\r\n        }\r\n      });\r\n\r\n      list[index][\"category\"] = findCategory[0].category;\r\n      list[index][\"text\"] = findCategory[0].label;\r\n      list[index][\"cost\"] = findCategory[0].average_cost;\r\n      if (list[index][\"weight\"] > 0) {\r\n        list[index][\"average_cost\"] =\r\n          (list[index][\"cost\"] / 1000) * list[index][\"weight\"];\r\n      }\r\n    }\r\n    // console.log(list);\r\n    if (e.target) {\r\n      list[index][\"weight\"] = e.target.value;\r\n      list[index][\"average_cost\"] =\r\n        (list[index][\"cost\"] / 1000) * list[index][\"weight\"];\r\n      // console.log((cost / 1000) * list[index][\"weight\"])\r\n    }\r\n\r\n    setIngredients(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...ingredients];\r\n    list.splice(index, 1);\r\n    setIngredients(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setIngredients([\r\n      ...ingredients,\r\n      {\r\n        text: \"\",\r\n        weight: 0,\r\n        image: \"\",\r\n        category: \"\",\r\n        cost: 0,\r\n        average_cost: 0,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createRecipe({\r\n        user,\r\n        label,\r\n        image,\r\n        ingredients,\r\n        variant_id,\r\n        total_cost: totalCost\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n  if(ingredients) {\r\n    setTotalCost(() => ingredients.reduce((a, b) => a + b.average_cost, 0))\r\n  }\r\n  }, [ingredients])\r\n  \r\n\r\n  // console.log(totalCost)\r\n  // reduce((acc, item) => item.rating + acc, 0)\r\n\r\n  // let sum = ingredients && ingredients.reduce((a, b) => a + b.average_cost, 0);\r\n\r\n  // console.log(sum);\r\n  // console.log({ user, label, image, ingredients, variant_id });\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/recipelist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer style={{ flex: 1 }}>\r\n        <h1>Create Recipe Item</h1>\r\n\r\n        {errorCreate &&\r\n          loadingCreate &&\r\n          loading &&\r\n          loadingFiltered &&\r\n          selectProducts &&\r\n          filteredCategories &&\r\n          products(<Message variant='danger'>{errorCreate}</Message>)}\r\n        {errorFiltered ? (\r\n          <Message variant='danger'>{errorFiltered}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            {/* <Form.Group controlId='label'> */}\r\n            <Form.Label style={{ padding: 10 }}>Item Name</Form.Label>\r\n            <Fragment>\r\n              {selectProducts[0] && (\r\n                <Select\r\n                  className='basic-single'\r\n                  classNamePrefix='select'\r\n                  defaultValue={selectProducts[0]}\r\n                  isDisabled={false}\r\n                  isLoading={false}\r\n                  isClearable={false}\r\n                  isRtl={false}\r\n                  isSearchable={true}\r\n                  options={selectProducts}\r\n                  name='products'\r\n                  onChange={(e) => handleInputChangeProducts(e)}\r\n                />\r\n              )}\r\n            </Fragment>\r\n            {/* </Form.Group> */}\r\n\r\n            <Form.Group controlId='name' style={{ padding: 10 }}>\r\n              <Form.Label style={{ padding: 10 }}>Image URL</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter Image'\r\n                value={image}\r\n                readOnly\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <h2 style={{ padding: 10 }}>Ingredients</h2>\r\n\r\n            {ingredients.map((i, index) => {\r\n              return (\r\n                <Row className='create-update' key={index} style={{ width: \"100%\", padding: 10 }}>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId='Item'\r\n                    style={{\r\n                      width: \"100%\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                      padding: 10,\r\n                      borderRadius: 15,\r\n                      flex: 2,\r\n                    }}\r\n                  >\r\n                    <Form.Label>Ingredient</Form.Label>\r\n                    <Fragment>\r\n                      {filteredCategories[0] && (\r\n                        <Select\r\n                          className='basic-single'\r\n                          classNamePrefix='select'\r\n                          defaultValue={filteredCategories[0]}\r\n                          isDisabled={false}\r\n                          isLoading={false}\r\n                          isClearable={false}\r\n                          isRtl={false}\r\n                          isSearchable={true}\r\n                          name='text'\r\n                          options={filteredCategories}\r\n                          onChange={(e) => handleInputChange(e, index)}\r\n                        />\r\n                      )}\r\n                    </Fragment>\r\n                  </Form.Group>\r\n\r\n                  {/* add weight to input */}\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId='weight'\r\n                    style={{\r\n                      width: \"65%\",\r\n                      alignItems: \"center\",\r\n                      padding: 10,\r\n                      borderRadius: 15,\r\n                    }}\r\n                  >\r\n                    <Form.Label>Weight (Grams)</Form.Label>\r\n                    <Form.Control\r\n                      name='weight'\r\n                      type='text'\r\n                      placeholder='Enter Weight'\r\n                      value={i.weight}\r\n                      onChange={(e) => handleInputChange(e, index) }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId='averageCost'\r\n                    style={{\r\n                      width: \"65%\",\r\n                      alignItems: \"center\",\r\n                      padding: 10,\r\n                      borderRadius: 15,\r\n                    }}\r\n                  >\r\n                    <Form.Label>Average Cost</Form.Label>\r\n                    <Form.Control\r\n                      name='averageCost'\r\n                      type='text'\r\n                      placeholder='Cost'\r\n                      value={ingredients[index].average_cost}\r\n                      // onChange={() => setTotalCost(sum)}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId='buttons'\r\n                    style={{\r\n                      width: \"100%\",\r\n\r\n                      borderRadius: 15,\r\n                      flexDirection: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    <Form.Label>Add/Remove</Form.Label>\r\n                    <div style={{ width: 10, height: 0 }}></div>\r\n                    {ingredients.length - 1 === index && (\r\n                      <Button\r\n                        as={Col}\r\n                        className='my-3'\r\n                        onClick={handleAddClick}\r\n                        style={{\r\n                          marginRight: 5,\r\n                          backgroundColor: \"red\",\r\n                          border: 0,\r\n                        }}\r\n                      >\r\n                        <i className='fas fa-plus'></i>\r\n                      </Button>\r\n                    )}\r\n\r\n                    {ingredients.length !== 1 && (\r\n                      <Button\r\n                        className='my-3'\r\n                        onClick={() => handleRemoveClick(index)}\r\n                        style={{ backgroundColor: \"red\", border: 0 }}\r\n                      >\r\n                        <i className='fas fa-minus'></i>\r\n                      </Button>\r\n                    )}\r\n                  </Form.Group>\r\n                </Row>\r\n              );\r\n            })}\r\n            <Row style={{ display: \"grid\", placeItems: \"end\" }}>\r\n              <Form.Group\r\n                as={Col}\r\n                controlId='totalCost'\r\n                style={{\r\n                  width: \"50%\",\r\n                  alignItems: \"flex-end\",\r\n                  padding: 10,\r\n                  borderRadius: 15,\r\n                }}\r\n              >\r\n                <Form.Label>Total Cost</Form.Label>\r\n                <Form.Control\r\n                  name='totalCost'\r\n                  type='text'\r\n                  placeholder='Total Cost'\r\n                  value={totalCost}\r\n                  // onChange={() => setTotalCost(sum)}\r\n                  readOnly\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Button\r\n                style={{ backgroundColor: \"red\", border: 0 }}\r\n                type='submit'\r\n                variant='primary'\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeCreateScreen;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  Fragment,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  listRecipes,\r\n  updateRecipe,\r\n  listRecipeDetails,\r\n} from \"../actions/recipeActions\";\r\nimport { listProductFiltered } from \"../actions/productActions\";\r\nimport { listInventoryLevel } from \"../actions/inventoryLevelActions\";\r\nimport {\r\n  RECIPE_UPDATE_RESET,\r\n  RECIPE_DETAILS_RESET,\r\n} from \"../constants/recipeConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst RecipeEditScreen = ({ history, match }) => {\r\n  const recipeId = match.params.id;\r\n  const pName = match.params.name;\r\n\r\n  // console.log(match);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const recipeUpdate = useSelector((state) => state.recipeUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = recipeUpdate;\r\n\r\n  const productFiltered = useSelector((state) => state.productFiltered);\r\n  const {\r\n    loading: loadingFiltered,\r\n    error: errorFiltered,\r\n    success: successFiltered,\r\n    products,\r\n  } = productFiltered;\r\n\r\n  const inventoryLevelList = useSelector((state) => state.inventoryLevelList);\r\n  const {\r\n    loading: loadingLevelList,\r\n    error: errorLevelError,\r\n    success: successLevelList,\r\n    inventoryLevel,\r\n  } = inventoryLevelList;\r\n\r\n  const recipeDetails = useSelector((state) => state.recipeDetails);\r\n  const { loading, error, success, recipe } = recipeDetails;\r\n\r\n  // console.log(recipe)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [label, setLabel] = useState({});\r\n  const [image, setImage] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([\r\n    { text: \"\", weight: 0, image: \"\", category: \"\", cost: 0, average_cost: 0 },\r\n  ]);\r\n  const [variant_id, setVariant_id] = useState(\"\");\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [filteredCategories, setFilteredCategories] = useState([]);\r\n  const [productDetail, setProductDetail] = useState({});\r\n\r\n  // console.log(filteredCategories);\r\n\r\n  // console.log(history.goBack)\r\n  useMemo(() => {\r\n    dispatch({ type: RECIPE_DETAILS_RESET });\r\n  }, [dispatch]);\r\n\r\n  console.log(productDetail);\r\n\r\n  useMemo(async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    if (pName) {\r\n      const { data } = await axios.get(\r\n        `/api/products/variants?name=${pName}`,\r\n        config\r\n      );\r\n\r\n      setProductDetail(data[0]);\r\n    }\r\n  }, [pName, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: RECIPE_UPDATE_RESET });\r\n      history.push(`/admin/recipelist`);\r\n    }\r\n\r\n    dispatch(listProductFiltered());\r\n    dispatch(listRecipes());\r\n    dispatch(listInventoryLevel());\r\n    dispatch(listRecipeDetails(recipeId));\r\n  }, [dispatch, history, recipeId, successUpdate, userInfo]);\r\n  // console.log(success);\r\n\r\n  useMemo(() => {\r\n    if (successLevelList) {\r\n      let filtered = inventoryLevel\r\n        .filter((item) => {\r\n          if (\r\n            item.category === \"Grocery\" ||\r\n            item.category === \"Spice\" ||\r\n            item.category === \"Fruits & Vegetables\" ||\r\n            item.category === \"Dairy\" ||\r\n            item.category === \"Wheat\" ||\r\n            item.category === \"Poultry\" ||\r\n            item.category === \"Beef\" ||\r\n            item.category === \"Mutton\" ||\r\n            item.item === \"Water\"\r\n          )\r\n            return item;\r\n        })\r\n        .map((item) => {\r\n          return {\r\n            value: true,\r\n            label: item.item,\r\n            _id: item._id,\r\n            category: item.category,\r\n            average_cost: item.average_cost ? item.average_cost : 0,\r\n          };\r\n        });\r\n\r\n      setFilteredCategories([...filtered]);\r\n    }\r\n  }, [inventoryLevel, successLevelList]);\r\n\r\n  useMemo(() => {\r\n    if (success && filteredCategories[0] && ingredients.length <= 1) {\r\n      let list = recipe.ingredients.map((items, idx) => {\r\n        let averageCost = filteredCategories\r\n          .filter((item) => items.text === item.label)\r\n          .map((i) => {\r\n            return {\r\n              average_cost: i.average_cost\r\n                ? (i.average_cost / 1000) * items.weight\r\n                : 0,\r\n            };\r\n          });\r\n\r\n        return {\r\n          ...items,\r\n          index: idx,\r\n          label: items.text,\r\n          value: idx + 1,\r\n          ...averageCost[0],\r\n        };\r\n      });\r\n\r\n      setIngredients([...list]);\r\n      setLabel({ value: true, label: recipe.label });\r\n      setVariant_id(recipe.variant_id && recipe.variant_id);\r\n      setImage(recipe.image);\r\n    }\r\n  }, [filteredCategories, ingredients, recipe, success]);\r\n\r\n  useMemo(() => {\r\n    if (ingredients) {\r\n      setTotalCost(\r\n        ingredients\r\n          .filter((items) => items.average_cost)\r\n          .reduce((a, b) => {\r\n            return a + b.average_cost;\r\n          }, 0)\r\n      );\r\n    }\r\n  }, [ingredients]);\r\n\r\n  const handleInputChange = (e, index) => {\r\n    let list = [...ingredients];\r\n\r\n    if (e.target) {\r\n      list[index][\"weight\"] = e.target.value;\r\n    }\r\n\r\n    let findCategory = filteredCategories.filter((items) => {\r\n      if (items.label === list[index][\"text\"]) {\r\n        return items;\r\n      } else if (items.label === e.target) {\r\n        return items;\r\n      }\r\n    });\r\n\r\n    if (findCategory.length > 0) {\r\n      console.log(findCategory[0]);\r\n\r\n      list[index][\"category\"] = findCategory[0].category;\r\n      list[index][\"text\"] = findCategory[0].label;\r\n      list[index][\"label\"] = findCategory[0].label;\r\n\r\n      if (list[index][\"weight\"] > 0) {\r\n        list[index][\"average_cost\"] =\r\n          findCategory[0].average_cost > 0\r\n            ? (findCategory[0].average_cost / 1000) * list[index][\"weight\"]\r\n            : 0;\r\n      }\r\n    }\r\n\r\n    setIngredients(list);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...ingredients];\r\n    list.splice(index, 1);\r\n    setIngredients(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setIngredients([\r\n      ...ingredients,\r\n      { text: \"\", weight: 0, image: \"\", category: \"\", cost: 0 },\r\n    ]);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      updateRecipe({\r\n        _id: recipeId,\r\n        label: label.label,\r\n        image,\r\n        ingredients,\r\n        variant_id,\r\n      })\r\n    );\r\n  };\r\n\r\n  // console.log(recipe);\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/recipelist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n\r\n      <h1 style={{ textAlign: \"center\" }}>{recipe && recipe.label}</h1>\r\n      <div style={{ flex: 1 }}>\r\n        <FormContainer>\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(${image})`,\r\n              width: \"100%\",\r\n              height: \"500px\",\r\n              backgroundSize: \"contain\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundPosition: \"center\",\r\n              flex: 1,\r\n            }}\r\n            className='div-image'\r\n          ></div>\r\n          {loadingUpdate && loading}\r\n          {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n          {errorFiltered ? (\r\n            <Message variant='danger'>{errorFiltered}</Message>\r\n          ) : (\r\n            <Form onSubmit={submitHandler}>\r\n              {/* <Form.Group controlId='label' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Item Name</Form.Label>\r\n\r\n                <Fragment>\r\n                  {label.label && (\r\n                    <Form.Control\r\n                      name='itemName'\r\n                      type='text'\r\n                      placeholder='Item Name'\r\n                      value={label.label}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  )}\r\n                </Fragment>\r\n              </Form.Group> */}\r\n\r\n              {/* <Form.Group controlId='name' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Image URL</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Image'\r\n                  value={image}\r\n                  readOnly\r\n                ></Form.Control>\r\n              </Form.Group> */}\r\n              <h2 style={{ padding: 50, textAlign: \"center\" }}>Ingredients</h2>\r\n\r\n              {ingredients.map((i, index) => {\r\n                return (\r\n                  <Row className='create-update' key={index}>\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId='Item'\r\n                      style={{\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        padding: 10,\r\n                        borderRadius: 15,\r\n                        flex: 3,\r\n                      }}\r\n                    >\r\n                      <Form.Label>Ingredient</Form.Label>\r\n                      <Row></Row>\r\n                      <Fragment>\r\n                        {filteredCategories &&\r\n                          ingredients[index].index === index && (\r\n                            <Select\r\n                              className='basic-single '\r\n                              classNamePrefix='select '\r\n                              defaultValue={ingredients[index]}\r\n                              isDisabled={false}\r\n                              isLoading={false}\r\n                              isClearable={false}\r\n                              isRtl={false}\r\n                              isSearchable={true}\r\n                              name='text'\r\n                              options={filteredCategories}\r\n                              onChange={(e) => handleInputChange(e, index)}\r\n                            />\r\n                          )}\r\n                      </Fragment>\r\n                    </Form.Group>\r\n\r\n                    {/* add weight to input */}\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId='weight'\r\n                      style={{\r\n                        width: \"65%\",\r\n                        alignItems: \"center\",\r\n                        padding: 10,\r\n                        borderRadius: 15,\r\n                      }}\r\n                    >\r\n                      <Form.Label>Weight (Grams)</Form.Label>\r\n                      <Form.Control\r\n                        name='weight'\r\n                        type='text'\r\n                        placeholder='Enter Weight'\r\n                        value={i.weight}\r\n                        onChange={(e) => handleInputChange(e, index)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId='averageCost'\r\n                      style={{\r\n                        width: \"65%\",\r\n                        alignItems: \"center\",\r\n                        padding: 10,\r\n                        borderRadius: 15,\r\n                      }}\r\n                    >\r\n                      <Form.Label>Average Cost</Form.Label>\r\n                      <Form.Control\r\n                        name='averageCost'\r\n                        type='text'\r\n                        placeholder='Cost'\r\n                        value={\r\n                          ingredients[index].average_cost > 0\r\n                            ? ingredients[index].average_cost.toFixed(2)\r\n                            : 0\r\n                        }\r\n                        readOnly\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                      as={Col}\r\n                      controlId='buttons'\r\n                      style={{\r\n                        width: \"100%\",\r\n                        padding: \"10px\",\r\n                        borderRadius: 15,\r\n                        flexDirection: \"flex-end\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      <Form.Label>Add/Remove</Form.Label>\r\n                      <div style={{ width: 10, height: 0 }}></div>\r\n                      {ingredients.length - 1 === index && (\r\n                        <Button\r\n                          as={Col}\r\n                          onClick={handleAddClick}\r\n                          style={{\r\n                            marginRight: 5,\r\n                            backgroundColor: \"red\",\r\n                            border: 0,\r\n                          }}\r\n                        >\r\n                          <i className='fas fa-plus'></i>\r\n                        </Button>\r\n                      )}\r\n\r\n                      {ingredients.length !== 1 && (\r\n                        <Button\r\n                          onClick={() => handleRemoveClick(index)}\r\n                          style={{ backgroundColor: \"red\", border: 0 }}\r\n                        >\r\n                          <i className='fas fa-minus'></i>\r\n                        </Button>\r\n                      )}\r\n                    </Form.Group>\r\n                  </Row>\r\n                );\r\n              })}\r\n\r\n              {productDetail && (\r\n                <Row style={{ display: \"flex\", flex: 2 }}>\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId='sellingPrice'\r\n                    style={{\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 15,\r\n                    }}\r\n                  >\r\n                    <Form.Label>Selling Price</Form.Label>\r\n                    <Form.Control\r\n                      name='sellingPrice'\r\n                      type='text'\r\n                      placeholder='Selling Price'\r\n                      value={productDetail.variants.default_price.toFixed(2)}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    controlId='totalCost'\r\n                    style={{\r\n                      flex: 1,\r\n                      padding: 10,\r\n                      borderRadius: 15,\r\n                    }}\r\n                  >\r\n                    <Form.Label>Total Cost</Form.Label>\r\n                    <Form.Control\r\n                      name='totalCost'\r\n                      type='text'\r\n                      placeholder='Total Cost'\r\n                      value={totalCost.toFixed(2)}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Row>\r\n              )}\r\n\r\n              <Row>\r\n                <Button\r\n                  type='submit'\r\n                  variant='primary'\r\n                  style={{ backgroundColor: \"red\", border: 0 }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Row>\r\n            </Form>\r\n          )}\r\n        </FormContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeEditScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Row, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport { costInventory } from \"../actions/inventoryActions\";\r\n\r\nimport {\r\n  groupedInventoryLevel,\r\n  listInventoryLevel,\r\n} from \"../actions/inventoryLevelActions\";\r\n\r\nconst InventoryLevelListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const inventoryLevelGroups = useSelector(\r\n    (state) => state.inventoryLevelGrouped\r\n  );\r\n  const {\r\n    loading: loadingInventoryLevel,\r\n    error: errorInventoryLevel,\r\n    inventoryLevelGrouped,\r\n  } = inventoryLevelGroups;\r\n\r\n  const inventoryLevels = useSelector((state) => state.inventoryLevelList);\r\n  const { loading, error, inventoryLevel } = inventoryLevels;\r\n\r\n  const inventoryCosts = useSelector((state) => state.inventoryCost);\r\n  const {\r\n    loading: loadingCost,\r\n    error: errorCost,\r\n    inventoryCost,\r\n  } = inventoryCosts;\r\n\r\n  console.log(inventoryCost);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo || userInfo.isAdmin) {\r\n      dispatch(groupedInventoryLevel());\r\n      dispatch(listInventoryLevel());\r\n      dispatch(costInventory());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  const costs = inventoryCost.map((item) => ({\r\n    item_name: item._id,\r\n    average_cost: item.TotalCost / item.TotalQuantity,\r\n  }));\r\n\r\n  // console.log(inventoryLevel)\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>INVENTORY LEVEL</h1>\r\n          {/* <TotalStock/> */}\r\n        </Col>\r\n      </Row>\r\n      { loadingInventoryLevel && loading && loadingCost ? \r\n        <Loader />\r\n       : (\r\n        <>\r\n          {/* <Table striped bordered hover responsive className='table-sm'> */}\r\n          {/* <thead>\r\n              <tr>\r\n                <th>CATEGORY</th>\r\n                <th>TOTAL COST</th>\r\n                <th>DETAIL</th>\r\n              </tr>\r\n            </thead> */}\r\n          {/* <>\r\n              {inventoryLevel.map((inventory, idx) => {\r\n                return (\r\n                  <tbody key={idx}>\r\n                    <tr>\r\n                      <td>{inventory._id}</td>\r\n\r\n                      <td>Rs. {inventory.TotalCost}</td>\r\n\r\n                      <td> */}\r\n          {/* <LinkContainer to={`receipt/${receipt.receipt_number}`}> */}\r\n          {/* <Button variant='light' className='btn-sm'> */}\r\n          {/* <div style={{ width: \"100%\" }}> */}\r\n          <Table hover bordered variant='light'>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <h6>CATEGORY</h6>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {inventoryLevelGrouped.map((inventory, idx) => {\r\n              return (\r\n                <tbody style={{ backgroundColor: \"white\" }} key={idx}>\r\n                  <tr style={{ flex: 1, backgroundColor: \"white\" }}>\r\n                    <Accordion\r\n                      style={{ width: \"100%\", backgroundColor: \"white\" }}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls='panel1c-content'\r\n                        id='panel1c-header'\r\n                        style={{ width: \"100%\" }}\r\n                      >\r\n                        <h6>{inventory._id}</h6>\r\n                      </AccordionSummary>\r\n\r\n                      <AccordionDetails style={{ width: \"100%\" }}>\r\n                        <Table\r\n                          bordered\r\n                          hover\r\n                          variant='light'\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              <th>LAST UPDATED</th>\r\n                              <th>CATEGORY</th>\r\n                              <th>TOTAL STOCK</th>\r\n                              <th>AVERAGE COST</th>\r\n                              <th>VENDOR</th>\r\n                            </tr>\r\n                          </thead>\r\n                          {inventoryLevel &&\r\n                            inventoryLevel.map((items, idx) => {\r\n                              // console.log(items)\r\n                              if (items.category === inventory._id) {\r\n                                return (\r\n                                  <tbody key={idx}>\r\n                                    <tr>\r\n                                      <td>\r\n                                        {items.updated_at && new Date(items.updated_at)\r\n                                          .toISOString()\r\n                                          .slice(0, 10)}\r\n                                      </td>\r\n                                      <td>{items.item}</td>\r\n                                      <td>{items.in_stock}</td>\r\n                                      <td>Rs. {items.average_cost}</td>\r\n                                      <td>{items.vendor}</td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                );\r\n                              }\r\n                            })}\r\n                        </Table>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </tr>\r\n                </tbody>\r\n              );\r\n            })}\r\n          </Table>\r\n          {/* </div> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryLevelListScreen;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col, Modal, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\n// import Paginate from \"../components/Paginate\";\r\nimport {\r\n  salaryInventory,\r\n  listDatesInventory,\r\n} from \"../actions/inventoryActions\";\r\n// import { INVENTORY_CREATE_RESET } from \"../constants/productConstants\";\r\n// import { listDatesInventory } from \"../actions/inventoryActions\";\r\nimport \"../css/Search.css\";\r\nimport {\r\n  createInventoryLevel,\r\n  salaryInventoryLevel,\r\n  updateInventoryLevel,\r\n} from \"../actions/inventoryLevelActions\";\r\nimport { INVENTORYLEVEL_CREATE_RESET } from \"../constants/inventoryLevelConstants\";\r\nimport { INVENTORYLEVEL_UPDATE_RESET } from \"../constants/inventoryLevelConstants\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from \"react-select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SalaryListScreen = ({ history, match }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [updateShow, setUpdateShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [id, setId] = useState(0);\r\n  const [salary, setSalary] = useState(0);\r\n  const [jobTitle, setJobTitle] = useState(\"\");\r\n  const [dateEmployeed, setDateEmployeed] = useState(\r\n    new Date().toISOString().slice(0, 10)\r\n  );\r\n  const [employeed, setEmployeed] = useState(true);\r\n  const [updatedSalary, setUpdatedSalary] = useState(0);\r\n  const [updatedJobTitle, setUpdatedJobTitle] = useState(\"\");\r\n  const [updatedId, setUpdatedId] = useState(\"\");\r\n  const [updatedStartDate, setUpdatedStartDate] = useState(\r\n    new Date().toISOString().slice(0, 10)\r\n  );\r\n\r\n  console.log(updatedSalary);\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const inventorySalary = useSelector((state) => state.inventorySalary);\r\n  const {\r\n    loading,\r\n    error,\r\n    success: successInventory,\r\n    inventory,\r\n  } = inventorySalary;\r\n\r\n  const inventoryLevelSalary = useSelector(\r\n    (state) => state.inventoryLevelSalary\r\n  );\r\n  const {\r\n    loading: loadingInventoryLevel,\r\n    error: errorInventoryLevel,\r\n    success: successInventoryLevel,\r\n    inventoryLevel,\r\n  } = inventoryLevelSalary;\r\n\r\n  const inventoryLevelCreate = useSelector(\r\n    (state) => state.inventoryLevelCreate\r\n  );\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = inventoryLevelCreate;\r\n\r\n  const inventoryLevelUpdate = useSelector(\r\n    (state) => state.inventoryLevelUpdate\r\n  );\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = inventoryLevelUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(salaryInventory());\r\n      dispatch(salaryInventoryLevel());\r\n    }\r\n\r\n    if (successCreate || successUpdate) {\r\n      dispatch({ type: INVENTORYLEVEL_CREATE_RESET });\r\n      dispatch({ type: INVENTORYLEVEL_UPDATE_RESET });\r\n      history.push(\"/admin/salarylist\");\r\n      setName(\"\");\r\n      setSalary(0);\r\n      setDateEmployeed(new Date().toISOString().slice(0, 10));\r\n      setEmployeed(true);\r\n      setUpdatedSalary(0);\r\n      setUpdatedJobTitle(\"\");\r\n      setUpdatedId(\"\");\r\n      setUpdatedStartDate(new Date().toISOString().slice(0, 10));\r\n    }\r\n  }, [dispatch, history, successCreate, successUpdate, userInfo]);\r\n\r\n  useMemo(() => {\r\n    const updateList = () => {\r\n      if (name) {\r\n        let filteredList = inventoryLevel.filter(\r\n          (items) => items.item === name\r\n        );\r\n        let index = filteredList[0] && filteredList[0].salary.length - 1;\r\n\r\n        if (filteredList && index >= 0) {\r\n          setUpdatedId(() => filteredList[0].salary[index]._id);\r\n          setUpdatedSalary(() => filteredList[0].salary[index].monthly_salary);\r\n        } else if (!index) {\r\n          setUpdatedId(\"\");\r\n          setUpdatedSalary(0);\r\n        }\r\n      }\r\n    };\r\n\r\n    updateList();\r\n  }, [inventoryLevel, name]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createInventoryLevel({\r\n        user: userInfo,\r\n        category: \"Salary\",\r\n        item: name,\r\n        salary: [\r\n          {\r\n            monthly_salary: salary,\r\n            start_date: new Date(dateEmployeed).toISOString(),\r\n          },\r\n        ],\r\n        created_at: new Date().toISOString(),\r\n      })\r\n    );\r\n  };\r\n\r\n  const submitUpdateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateInventoryLevel({\r\n        user: userInfo,\r\n        item: name,\r\n        monthly_salary: updatedSalary,\r\n        start_date: new Date(updatedStartDate).toISOString(),\r\n        employeed: employeed,\r\n        id: updatedId,\r\n      })\r\n    );\r\n  };\r\n\r\n  const uniqueNames = Array.from(\r\n    new Set(inventory.map((items) => items.item_name))\r\n  ).sort((a, b) => a.localeCompare(b));\r\n\r\n  const reactSelectList = uniqueNames.map((items) => ({\r\n    label: items,\r\n    value: true,\r\n  }));\r\n\r\n  const totes = {};\r\n\r\n  uniqueNames.filter((item) => {\r\n    let sum = 0;\r\n    inventory.map((items, idx) => {\r\n      if (items.item_name === item) {\r\n        sum = sum + items.total_cost;\r\n\r\n        totes[item] = {\r\n          total_paid: sum,\r\n        };\r\n\r\n        inventoryLevel.map((iL, idx) => {\r\n          if (iL.item === item) {\r\n            let total = 0;\r\n\r\n            if (iL.salary[0]) {\r\n              // console.log(iL)\r\n              let monthlySalary =\r\n                iL.salary[iL.salary.length - 1].monthly_salary;\r\n\r\n              // totes[item] = {\r\n              //   monthly_salary: monthlySalary,\r\n              // };\r\n\r\n              for (let i = 0; i < iL.salary.length; i++) {\r\n                const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n                let firstDate = new Date(iL.salary[i].start_date);\r\n                let secondDate = iL.salary[i].end_date\r\n                  ? new Date(iL.salary[i].end_date)\r\n                  : new Date();\r\n\r\n                let diffDays = Math.round(\r\n                  Math.abs((firstDate - secondDate) / oneDay)\r\n                );\r\n\r\n                let dailySalary =\r\n                  (parseInt(iL.salary[i].monthly_salary) * 12) / 365;\r\n\r\n                total = diffDays * dailySalary + total;\r\n\r\n                console.log(dailySalary);\r\n                console.log(total);\r\n\r\n                totes[item] = {\r\n                  total_payable: total,\r\n                  total_paid: sum,\r\n                  monthly_salary: monthlySalary,\r\n                };\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // console.log(inventoryLevel)\r\n\r\n  console.log(totes);\r\n\r\n  // console.log(updatedId)\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Salaries</h1>\r\n        </Col>\r\n        <Button className='my-3' onClick={() => setShow(true)}>\r\n          <i className='fas fa-plus'></i> ADD EMPLOYEE\r\n        </Button>\r\n\r\n        <Modal show={show} onHide={() => setShow(false)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Employee</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Full Name</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Full Name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='id' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>\r\n                  Identification Number\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter ID'\r\n                  value={id}\r\n                  onChange={(e) => setId(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='jobtitle' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Job Title</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Job Title'\r\n                  value={jobTitle}\r\n                  onChange={(e) => setJobTitle(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='salary' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Monthly Salary</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Salary'\r\n                  value={salary.toLocaleString()}\r\n                  onChange={(e) => setSalary(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='date_employeed' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Date Employeed</Form.Label>\r\n                <Form.Control\r\n                  type='date'\r\n                  placeholder='Enter Date Employeed'\r\n                  value={dateEmployeed}\r\n                  onChange={(e) => setDateEmployeed(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Row style={{ margin: 15 }}>\r\n                <Button\r\n                  variant='primary'\r\n                  type='submit'\r\n                  onClick={() => setShow(false)}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              </Row>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Button className='my-3' onClick={() => setUpdateShow(true)}>\r\n          <i className='fas fa-plus'></i> EDIT EMPLOYEE\r\n        </Button>\r\n\r\n        <Modal show={updateShow} onHide={() => setUpdateShow(false)}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Employee</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form onSubmit={submitUpdateHandler}>\r\n              <Form.Group controlId='name' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Full Name</Form.Label>\r\n                <Select\r\n                  className='basic-single'\r\n                  classNamePrefix='select'\r\n                  // defaultValue={uniqueNames[0]}\r\n                  isDisabled={false}\r\n                  isLoading={!reactSelectList}\r\n                  isClearable={false}\r\n                  isRtl={false}\r\n                  isSearchable={true}\r\n                  name='names'\r\n                  options={reactSelectList}\r\n                  onChange={(e) => setName(e.label)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='jobtitle' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Job Title</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Job Title'\r\n                  value={updatedJobTitle}\r\n                  onChange={(e) => setUpdatedJobTitle(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='salary' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Monthly Salary</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Salary'\r\n                  value={updatedSalary && updatedSalary.toLocaleString()}\r\n                  onChange={(e) => setUpdatedSalary(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='start_date' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Start Date</Form.Label>\r\n                <Form.Control\r\n                  type='date'\r\n                  placeholder='Enter Date Employeed'\r\n                  value={updatedStartDate}\r\n                  onChange={(e) => setUpdatedStartDate(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='date_employeed' style={{ padding: 10 }}>\r\n                <Form.Label style={{ padding: 10 }}>Employeed</Form.Label>\r\n                <div></div>\r\n\r\n                <Form.Check\r\n                  inline\r\n                  label='Employeed'\r\n                  name='group1'\r\n                  type='radio'\r\n                  id={`inline-2`}\r\n                  defaultChecked\r\n                  onChange={() => setEmployeed(true)}\r\n                />\r\n\r\n                <Form.Check\r\n                  inline\r\n                  label='Not Employeed'\r\n                  name='group1'\r\n                  type='radio'\r\n                  id={`inline-2`}\r\n                  onChange={() => setEmployeed(false)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Row style={{ margin: 15 }}>\r\n                <Button\r\n                  variant='primary'\r\n                  type='submit'\r\n                  onClick={() => setUpdateShow(false)}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              </Row>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Row>\r\n      {/* {loadingDelete && <Loader />} */}\r\n      {/* {errorDelete && <Message variant='danger'>{errorDelete}</Message>} */}\r\n      {/* {loadingCreate && <Loader />} */}\r\n      {/* {errorCreate && <Message variant='danger'>{errorCreate}</Message>} */}\r\n      {!loading && (\r\n        <>\r\n          <Table responsive bordered variant='light'>\r\n            <thead>\r\n              <tr></tr>\r\n            </thead>\r\n            {uniqueNames.map((name, idx) => {\r\n              return (\r\n                <tbody style={{ backgroundColor: \"white\" }} key={idx}>\r\n                  <tr style={{ backgroundColor: \"white\" }}>\r\n                    <Accordion\r\n                      style={{ width: \"100%\", backgroundColor: \"white\" }}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls='panel1c-content'\r\n                        id='panel1c-header'\r\n                        style={{ width: \"100%\", flex: 1 }}\r\n                      >\r\n                        <td>\r\n                          <div className={classes.column}>\r\n                            <Typography className={classes.heading}>\r\n                              {name}\r\n                            </Typography>\r\n                          </div>\r\n\r\n                          <div className={classes.column}>\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              Total Paid - Rs. {totes[name].total_paid}\r\n                            </Typography>\r\n                          </div>\r\n\r\n                          <div className={classes.column}>\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              Monthly Salary - Rs. {totes[name].monthly_salary}\r\n                            </Typography>\r\n                          </div>\r\n\r\n                          <div className={classes.column}>\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              Remainder Balance - Rs.\r\n                              {totes[name].total_payable &&\r\n                                (\r\n                                  totes[name].total_payable -\r\n                                  totes[name].total_paid\r\n                                ).toFixed(1)}\r\n                            </Typography>\r\n                          </div>\r\n                        </td>\r\n                      </AccordionSummary>\r\n\r\n                      <AccordionDetails style={{ width: \"100%\" }}>\r\n                        <Table\r\n                          bordered\r\n                          hover\r\n                          variant='light'\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              <th>LAST UPDATED</th>\r\n                              <th>TOTAL PAID</th>\r\n                            </tr>\r\n                          </thead>\r\n                          {inventory &&\r\n                            inventory.map((items, idx) => {\r\n                              // console.log(items)\r\n                              if (items.item_name === name) {\r\n                                return (\r\n                                  <tbody key={idx}>\r\n                                    <tr>\r\n                                      <td>\r\n                                        {new Date(\r\n                                          items.date_paid\r\n                                        ).toLocaleDateString()}\r\n                                      </td>\r\n\r\n                                      <td>Rs. {items.total_cost}</td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                );\r\n                              }\r\n                            })}\r\n                        </Table>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </tr>\r\n                </tbody>\r\n              );\r\n            })}\r\n          </Table>\r\n\r\n          {/* <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>EDITED BY</th>\r\n                <th>DATE CREATED</th>\r\n                <th>NAME</th>\r\n                <th>MONTHLY SALARY</th>\r\n                <th>PAID</th>\r\n                <th>REMAINDER SALARY</th>\r\n                <th>PAYMENT DATE</th>\r\n                <th>EDIT/DELETE</th>\r\n              </tr>\r\n            </thead>\r\n            <>\r\n              {inventory &&\r\n                inventory.map((inventory) => {\r\n                  return (\r\n                    <tbody key={inventory._id}>\r\n                      <tr>\r\n                        <td>{inventory.edited_by}</td>\r\n                        <td>{inventory.createdAt.slice(0, 10)}</td>\r\n                        <td>{inventory.item_name}</td>\r\n                        <td>{inventory.monthly_salary}</td>\r\n                        <td>{inventory.paid && \"PAID\"}</td>\r\n                        <td>{inventory.total_cost}</td>\r\n                        <td>{inventory.date_paid.slice(0, 10)}</td>\r\n                        <td>\r\n                          <Button variant='light' className='btn-sm'>\r\n                            <i className='fas fa-edit'></i>\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n            </>\r\n          </Table> */}\r\n          {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalaryListScreen;\r\n","import React, { useEffect, useState, useCal } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col, Modal, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\n// import Paginate from \"../components/Paginate\";\r\nimport {\r\n  groupInventory,\r\n  listDatesInventory,\r\n} from \"../actions/inventoryActions\";\r\nimport { listReceipt } from \"../actions/receiptActions\";\r\n// import { INVENTORY_CREATE_RESET } from \"../constants/productConstants\";\r\n// import { listDatesInventory } from \"../actions/inventoryActions\";\r\nimport \"../css/Search.css\";\r\n\r\nconst SalaryListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const inventoryGroup = useSelector((state) => state.inventoryGroup);\r\n  const { loading, error, success, inventory } = inventoryGroup;\r\n\r\n  const receiptList = useSelector((state) => state.receiptList);\r\n  const {\r\n    loading: receiptLoading,\r\n    error: errorReceipt,\r\n    success: receiptSuccess,\r\n    receipt,\r\n  } = receiptList;\r\n\r\n\r\n  const inventoryDatesList = useSelector((state) => state.inventoryDates);\r\n  const {\r\n    loading: loadingDates,\r\n    error: errorDates,\r\n    inventoryDates,\r\n  } = inventoryDatesList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [showSearch, setShowSearch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(groupInventory());\r\n      dispatch(listReceipt(\"All\"));\r\n    }\r\n  }, [dispatch, history, userInfo, success]);\r\n\r\n  const selectionRange = {\r\n    startDate: startDate,\r\n    endDate: endDate,\r\n    key: \"selection\",\r\n  };\r\n\r\n  function handleSelect(ranges) {\r\n    setStartDate(ranges.selection.startDate);\r\n    setEndDate(ranges.selection.endDate);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    setShowSearch(false);\r\n    dispatch(\r\n      listDatesInventory(startDate.toISOString(), endDate.toISOString())\r\n    );\r\n  };\r\n\r\n  let totalSale = 0;\r\n  receipt &&\r\n    receipt.map((x) => {\r\n      if (x._id === \"SALE\" || x._id === null) {\r\n        totalSale = totalSale + x.Total;\r\n      }\r\n    });\r\n\r\n  const expectedCash =\r\n    totalSale && inventory[0] && totalSale - parseInt(inventory[0].TotalCost);\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Financial Summary</h1>\r\n        </Col>\r\n      </Row>\r\n    \r\n      {loadingDates && !loading && inventory && totalSale && expectedCash ? (\r\n        <>\r\n          <div className='banner_search'>\r\n            {showSearch && (\r\n              <div className='search'>\r\n                <DateRangePicker\r\n                  ranges={[selectionRange]}\r\n                  onChange={handleSelect}\r\n                ></DateRangePicker>\r\n                <Button onClick={handleSubmit}>Search Inventory</Button>\r\n              </div>\r\n            )}\r\n            <Button\r\n              className='banner_searchButton'\r\n              variant='outlined'\r\n              onClick={() => setShowSearch(!showSearch)}\r\n            >\r\n              Search Date\r\n            </Button>\r\n          </div>\r\n          <Table striped responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>CATEGORY</th>\r\n                <th>FINANCIAL DETAILS</th>\r\n              </tr>\r\n            </thead>\r\n            <>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Previous Cash</td>\r\n                  <td>Rs. 0</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Total Sale</td>\r\n                  <td>Rs. {totalSale.toLocaleString()}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Total Expense</td>\r\n                  <td>Rs. {inventory[0].TotalCost.toLocaleString()}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Expected Cash</td>\r\n                  <td>Rs. {expectedCash.toLocaleString()}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Profit Margin</td>\r\n                  <td>{((expectedCash / totalSale) * 100).toFixed(2)}%</td>\r\n                </tr>\r\n              </tbody>\r\n            </>\r\n          </Table>\r\n          {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className='banner_search'>\r\n            {showSearch && (\r\n              <div className='search'>\r\n                <DateRangePicker\r\n                  ranges={[selectionRange]}\r\n                  onChange={handleSelect}\r\n                ></DateRangePicker>\r\n                <Button onClick={handleSubmit}>Search Inventory</Button>\r\n              </div>\r\n            )}\r\n            <Button\r\n              className='banner_searchButton'\r\n              variant='outlined'\r\n              onClick={() => setShowSearch(!showSearch)}\r\n            >\r\n              Search Date\r\n            </Button>\r\n          </div>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>EDITED BY</th>\r\n                <th>DATE CREATED</th>\r\n                <th>NAME</th>\r\n                <th>MONTHLY SALARY</th>\r\n                <th>PAID</th>\r\n                <th>REMAINDER SALARY</th>\r\n                <th>PAYMENT DATE</th>\r\n                <th>EDIT/DELETE</th>\r\n              </tr>\r\n            </thead>\r\n            <>\r\n              {\r\n                //   <tbody key={inventory._id}>\r\n                //     <tr>\r\n                //       <td>{inventory.edited_by}</td>\r\n                //       {/* <td>{inventory.createdAt.slice(0, 10)}</td> */}\r\n                //       <td>{inventory.item_name}</td>\r\n                //       <td>{inventory.monthly_salary}</td>\r\n                //       <td>{inventory.paid && \"PAID\"}</td>\r\n                //       <td>{inventory.total_cost}</td>\r\n                //       {/* <td>{inventory.date_paid.slice(0, 10)}</td> */}\r\n                //       <td>\r\n                //         <Button variant='light' className='btn-sm'>\r\n                //           <i className='fas fa-edit'></i>\r\n                //         </Button>\r\n                //       </td>\r\n                //     </tr>\r\n                //   </tbody>\r\n              }\r\n            </>\r\n          </Table>\r\n          {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalaryListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {\r\n  Table,\r\n  Row,\r\n  Button,\r\n  Col,\r\n  Tabs,\r\n  Tab,\r\n  Modal,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  unpaidReceipt,\r\n  listReceiptDetails,\r\n  paidReceipt,\r\n  removeReceipt,\r\n} from \"../actions/receiptActions\";\r\nimport { unpaidInventory, updateInventory } from \"../actions/inventoryActions\";\r\nimport { RECEIPT_DETAILS_RESET } from \"../constants/receiptConstants\";\r\n\r\nconst BillScreen = ({ history }) => {\r\n  // const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [payableShow, setPayableShow] = useState(false);\r\n\r\n  const [receiptId, setReceiptId] = useState(\"\");\r\n  const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\r\n  const [payableDate, setPayableDate] = useState(\r\n    new Date().toISOString().slice(0, 10)\r\n  );\r\n  const [payableId, setPayableId] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const receiptUnpaid = useSelector((state) => state.receiptUnpaid);\r\n  const {\r\n    loading: loadingUnpaid,\r\n    error: errorUnpaid,\r\n    success: successUnpaid,\r\n    receipt,\r\n  } = receiptUnpaid;\r\n\r\n  const receiptPaid = useSelector((state) => state.receiptPaid);\r\n  const {\r\n    loading: loadingPaid,\r\n    error: errorPaid,\r\n    success: successPaid,\r\n  } = receiptPaid;\r\n\r\n  const receiptRemove = useSelector((state) => state.receiptRemove);\r\n  const {\r\n    loading: loadingRemove,\r\n    error: errorRemove,\r\n    success: successRemove,\r\n  } = receiptRemove;\r\n\r\n  const inventoryUnpaid = useSelector((state) => state.inventoryUnpaid);\r\n  const {\r\n    loading: loadingInventory,\r\n    error: errorInventory,\r\n    success: successInventory,\r\n    inventory,\r\n  } = inventoryUnpaid;\r\n\r\n  const inventoryUpdate = useSelector((state) => state.inventoryUpdate);\r\n  const {\r\n    loading: loadingInventoryUpdate,\r\n    error: errorInventoryUpdate,\r\n    success: successInventoryUpdate,\r\n  } = inventoryUpdate;\r\n\r\n  // console.log(errorPaid);\r\n\r\n  const receiptDetails = useSelector((state) => state.receiptDetails);\r\n  const {\r\n    loading: loadingDetails,\r\n    error: errorDetails,\r\n    success: successDetails,\r\n  } = receiptDetails;\r\n\r\n  //   console.log(inventoryAll);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [showArr, setShowArr] = useState(\r\n    receipt &&\r\n      receipt.map((items) => {\r\n        if (items.paid === false) {\r\n          return false;\r\n        }\r\n      })\r\n  );\r\n  // const state = () => setShowArr([...falseArr]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo || userInfo.isAdmin) {\r\n      dispatch(unpaidReceipt());\r\n      dispatch(unpaidInventory());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successDetails || successPaid || successRemove) {\r\n      dispatch({ type: RECEIPT_DETAILS_RESET });\r\n      history.push(\"/admin/billlist\");\r\n      setReceiptId(\"\");\r\n    }\r\n\r\n    if (successInventoryUpdate) {\r\n      history.push(\"/admin/billlist\");\r\n      setPayableDate(new Date().toISOString().slice(0, 10));\r\n      setPayableId(\"\");\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successInventory,\r\n    successDetails,\r\n    successPaid,\r\n    successRemove,\r\n    successInventoryUpdate,\r\n  ]);\r\n\r\n  const reduceBillsRecievable = () => {\r\n    if (!loadingUnpaid && receipt) {\r\n      const TotalCost = receipt\r\n        .filter((items) => items.paid === false)\r\n        .reduce((a, b) => a + parseInt(b.total_money), 0);\r\n      return (\r\n        <Row\r\n          style={{\r\n            width: \"100%\",\r\n            flex: 1,\r\n            bottom: 0,\r\n            alignContent: \"flex-end\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n        >\r\n          <h5>Total Bills Recievable Rs : {TotalCost.toLocaleString()}</h5>\r\n        </Row>\r\n      );\r\n    }\r\n  };\r\n\r\n  const reduceBillsPayable = () => {\r\n    if (!loadingInventory && inventory) {\r\n      const TotalCost = inventory\r\n        .filter((items) => items.paid === false)\r\n        .reduce((a, b) => a + parseInt(b.total_cost), 0);\r\n      return (\r\n        <Row\r\n          style={{\r\n            width: \"100%\",\r\n            flex: 1,\r\n            bottom: 0,\r\n            alignContent: \"flex-end\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n        >\r\n          <h5>Total Bills Payable Rs : {TotalCost.toLocaleString()}</h5>\r\n        </Row>\r\n      );\r\n    }\r\n  };\r\n\r\n  const submitPaid = (idx) => {\r\n    handleClose(idx);\r\n    dispatch(\r\n      paidReceipt({\r\n        receiptNumber: receiptId,\r\n        date: new Date(date).toISOString(),\r\n      })\r\n    );\r\n  };\r\n\r\n  const submitRemove = (receiptNumber) => {\r\n    dispatch(removeReceipt(receiptNumber));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(listReceiptDetails(receiptId));\r\n  };\r\n\r\n  const submitPayableHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateInventory({ _id: payableId, datePaid: new Date(payableDate).toISOString(), paid: true })\r\n    );\r\n  };\r\n\r\n  const handleOpen = (idx, receipt) => {\r\n    let list = [...showArr];\r\n    list[idx] = true;\r\n    setShowArr(list);\r\n    setReceiptId(receipt);\r\n  };\r\n\r\n  const handleClose = (idx) => {\r\n    let list = [...showArr];\r\n    list[idx] = false;\r\n    setShowArr(list);\r\n  };\r\n\r\n  // console.log(receipt);\r\n  // console.log(receiptList);\r\n  // console.log(receiptId);\r\n  // console.log(date);\r\n\r\n  const handlePayableOpen = (id) => {\r\n    setPayableShow(true);\r\n    setPayableId(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        defaultActiveKey='bills_recievable'\r\n        id='uncontrolled-tab'\r\n        className='mb-3'\r\n      >\r\n        <Tab eventKey='bills_recievable' title='Bills Recievable'>\r\n          <Row className='align-items-center'>\r\n            <Col>\r\n              <h1>Bills Recievable</h1>\r\n            </Col>\r\n          </Row>\r\n          {loadingUnpaid ? (\r\n            <Loader />\r\n          ) : errorUnpaid ? (\r\n            <Message variant='danger'>{errorUnpaid}</Message>\r\n          ) : (\r\n            <>\r\n              <Row className='align-items-center'>\r\n                <Button className='my-3' onClick={() => setShow(true)}>\r\n                  <i className='fas fa-plus'></i> Add Bill Receivable\r\n                </Button>\r\n\r\n                <Modal show={show} onHide={() => setShow(false)}>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Add Bill Receivable</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='id' style={{ padding: 10 }}>\r\n                        <Form.Label style={{ padding: 10 }}>\r\n                          Receipt Number\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          type='text'\r\n                          placeholder='Enter ID'\r\n                          value={receiptId}\r\n                          onChange={(e) => setReceiptId(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Row style={{ margin: 15 }}>\r\n                        <Button\r\n                          variant='primary'\r\n                          type='submit'\r\n                          onClick={() => setShow(false)}\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </Row>\r\n                    </Form>\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </Row>\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>DATE CREATED</th>\r\n                    <th>RECEIPT NUMBER</th>\r\n                    <th>POINTS EARNED</th>\r\n                    <th>POINTS BALANCE</th>\r\n                    <th>TOTAL DISCOUNT</th>\r\n                    <th>TOTAL MONEY</th>\r\n                    <th>DETAIL</th>\r\n                  </tr>\r\n                </thead>\r\n                <>\r\n                  {receipt.map((receipt, idx) => {\r\n                    if (receipt.paid === false) {\r\n                      return (\r\n                        <tbody key={idx}>\r\n                          <tr>\r\n                            <td>{receipt.receipt_date}</td>\r\n                            <td>{receipt.receipt_number}</td>\r\n                            <td>{receipt.points_earned}</td>\r\n                            <td>{receipt.points_balance}</td>\r\n\r\n                            <td>Rs. {receipt.total_discount}</td>\r\n                            <td>Rs. {receipt.total_money}</td>\r\n                            <td>\r\n                              <Button\r\n                                onClick={() =>\r\n                                  handleOpen(idx, receipt.receipt_number)\r\n                                }\r\n                                variant='light'\r\n                                className='btn-sm'\r\n                              >\r\n                                Details\r\n                              </Button>\r\n\r\n                              <Modal\r\n                                show={showArr[idx]}\r\n                                onHide={() => handleClose(idx)}\r\n                              >\r\n                                <Modal.Header closeButton>\r\n                                  <Modal.Title>\r\n                                    Paid Bill Receivable\r\n                                  </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                  <Form.Group\r\n                                    controlId='date'\r\n                                    style={{ padding: 10 }}\r\n                                  >\r\n                                    <Form.Label style={{ padding: 10 }}>\r\n                                      Date Paid\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                      type='date'\r\n                                      placeholder='Enter Date Paid'\r\n                                      value={date}\r\n                                      onChange={(e) => setDate(e.target.value)}\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Row style={{ margin: 15 }}>\r\n                                    <Button\r\n                                      variant='primary'\r\n                                      type='submit'\r\n                                      onClick={() => submitPaid(idx)}\r\n                                    >\r\n                                      Paid\r\n                                    </Button>\r\n                                  </Row>\r\n                                </Modal.Body>\r\n                              </Modal>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    }\r\n                  })}\r\n                </>\r\n              </Table>\r\n              {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n            </>\r\n          )}\r\n          {reduceBillsRecievable()}\r\n        </Tab>\r\n\r\n        <Tab eventKey='bills_payable' title='Bills Payable'>\r\n          <Row className='align-items-center'>\r\n            <Col>\r\n              <h1>Bills Payable</h1>\r\n            </Col>\r\n          </Row>\r\n          {loadingInventory ? (\r\n            <Loader />\r\n          ) : errorInventory ? (\r\n            <Message variant='danger'>{errorInventory}</Message>\r\n          ) : (\r\n            <>\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>USER</th>\r\n                    <th>DATE CREATED</th>\r\n                    <th>VENDOR</th>\r\n                    <th>CATEGORY</th>\r\n                    <th>ITEM</th>\r\n                    <th>QUANTITY</th>\r\n                    <th>COST</th>\r\n                    <th>TOTAL COST</th>\r\n                    <th>PAID</th>\r\n                    <th>PAYMENT DATE</th>\r\n                    <th>EDIT/DELETE</th>\r\n                  </tr>\r\n                </thead>\r\n                <>\r\n                  {inventory &&\r\n                    inventory.map((inventory) => {\r\n                      if (inventory.paid === false) {\r\n                        return (\r\n                          <tbody key={inventory._id}>\r\n                            <tr>\r\n                              <td>{inventory.edited_by}</td>\r\n                              <td>{inventory.createdAt.slice(0, 10)}</td>\r\n                              <td>{inventory.vendor}</td>\r\n                              <td>{inventory.category}</td>\r\n                              <td>{inventory.item_name}</td>\r\n                              <td>{inventory.item_quantity}</td>\r\n                              <td>{inventory.item_cost}</td>\r\n                              <td>{inventory.total_cost}</td>\r\n                              <td>{inventory.paid && \"PAID\"}</td>\r\n                              <td>{inventory.date_paid.slice(0, 10)}</td>\r\n                              <td>\r\n                                <Button\r\n                                  variant='light'\r\n                                  className='btn-sm'\r\n                                  onClick={() =>\r\n                                    handlePayableOpen(inventory._id)\r\n                                  }\r\n                                >\r\n                                  <i className='fas fa-edit'></i>\r\n                                </Button>\r\n\r\n                                <Modal\r\n                                  show={payableShow}\r\n                                  onHide={() => setPayableShow(false)}\r\n                                >\r\n                                  <Modal.Header closeButton>\r\n                                    <Modal.Title>Bill Payment Date</Modal.Title>\r\n                                  </Modal.Header>\r\n                                  <Modal.Body>\r\n                                    <Form onSubmit={submitPayableHandler}>\r\n                                      <Form.Group\r\n                                        controlId='date'\r\n                                        style={{ padding: 10 }}\r\n                                      >\r\n                                        <Form.Label style={{ padding: 10 }}>\r\n                                          Paid Date\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                          type='date'\r\n                                          placeholder='Enter Date'\r\n                                          value={payableDate}\r\n                                          onChange={(e) =>\r\n                                            setPayableDate(e.target.value)\r\n                                          }\r\n                                        ></Form.Control>\r\n                                      </Form.Group>\r\n\r\n                                      <Row style={{ margin: 15 }}>\r\n                                        <Button\r\n                                          variant='primary'\r\n                                          type='submit'\r\n                                          onClick={() => setPayableShow(false)}\r\n                                        >\r\n                                          Save Changes\r\n                                        </Button>\r\n                                      </Row>\r\n                                    </Form>\r\n                                  </Modal.Body>\r\n                                </Modal>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        );\r\n                      }\r\n                    })}\r\n                </>\r\n              </Table>\r\n              {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n            </>\r\n          )}\r\n          {reduceBillsPayable()}\r\n        </Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillScreen;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport CheckoutButtonBar from \"./components/CheckoutButtonBar\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductsScreen from \"./screens/ProductsScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport InventoryListScreen from \"./screens/InventoryListScreen\";\nimport InventoryCreateScreen from \"./screens/InventoryCreateScreen\";\nimport InventoryEditScreen from \"./screens/inventoryEditScreen\";\nimport ReceiptListScreen from \"./screens/ReceiptListScreen\";\nimport ReceiptDetailScreen from \"./screens/ReceiptDetailScreen\";\nimport RecipeListScreen from \"./screens/RecipeListScreen\";\nimport RecipeCreateScreen from \"./screens/RecipeCreateScreen\";\nimport RecipeEditScreen from \"./screens/RecipeEditScreen\";\nimport InventoryLevelListScreen from \"./screens/InventoryLevelListScreen\";\nimport SalaryListScreen from \"./screens/SalaryListScreen\";\nimport FinancialSummaryScreen from \"./screens/FinancialSummaryScreen\";\nimport BillScreen from \"./screens/BillScreen\";\n\nconst App = () => {\n  const withHeader = () => {\n    return (\n      <div>\n        <Header />\n        <main className='py-3'>\n          <Switch>\n            <Route path='/page/:pageNumber' component={HomeScreen} exact />\n            <Route\n              path='/search/:keyword/page/:pageNumber'\n              component={HomeScreen}\n              exact\n            />\n            <Route path='/search/:keyword' component={HomeScreen} exact />\n            <Route path='/' component={HomeScreen} exact />\n            <Container>\n              {/* <Route path=\"/\" render={ ( props ) => ( props.location.pathname !== \"/\") && <Header /> }> */}\n              <Route path='/products' component={ProductsScreen} />\n              <Route path='/login' component={LoginScreen} />\n              <Route path='/order/:id' component={OrderScreen} />\n              <Route path='/placeorder' component={PlaceOrderScreen} />\n              <Route path='/shipping' component={ShippingScreen} />\n              <Route path='/payment' component={PaymentScreen} />\n              <Route path='/register' component={RegisterScreen} />\n              <Route path='/profile' component={ProfileScreen} />\n              <Route path='/product/:id' component={ProductScreen} />\n              <Route path='/admin/userlist' component={UserListScreen} />\n              <Route\n                path='/admin/user/:id/edit/'\n                component={UserEditScreen}\n              />\n              <Route path='/admin/productlist' component={ProductListScreen} />\n              <Route\n                path='/admin/product/:id/edit'\n                component={ProductEditScreen}\n              />\n              <Route path='/admin/orderlist' component={OrderListScreen} />\n              <Route path='/admin/receiptlist' component={ReceiptListScreen} />\n              <Route\n                path='/admin/receipt/:id'\n                component={ReceiptDetailScreen}\n              />\n              <Route\n                path='/admin/inventorylist'\n                component={InventoryListScreen}\n              />\n              <Route\n                path='/admin/inventory/create'\n                component={InventoryCreateScreen}\n              />\n              <Route\n                path='/admin/inventory/:id/edit'\n                component={InventoryEditScreen}\n              />\n              <Route\n                path='/admin/inventorylevellist'\n                component={InventoryLevelListScreen}\n              />\n              <Route path='/admin/recipelist' component={RecipeListScreen} />\n              <Route\n                path='/admin/recipe/create'\n                component={RecipeCreateScreen}\n              />\n              <Route\n                path='/admin/recipe/:id/edit/:name'\n                component={RecipeEditScreen}\n              />\n              <Route path='/admin/salarylist' component={SalaryListScreen} />\n              <Route\n                path='/admin/financialsummary'\n                component={FinancialSummaryScreen}\n              />\n              <Route path='/admin/billlist' component={BillScreen} />\n              <Route\n                path='/admin/productlist/:pageNumber'\n                component={ProductListScreen}\n                exact\n              />\n            </Container>\n          </Switch>\n        </main>\n\n        <Footer />\n      </div>\n    );\n  };\n\n  const addedCartButton = () => {\n    return (\n      <div>\n        <Header />\n        <main className='py-3'>\n          <Switch>\n            <Container>\n              <Route path='/cart/:id?' exact component={CartScreen} />\n            </Container>\n          </Switch>\n        </main>\n        <CheckoutButtonBar />\n        <Footer />\n      </div>\n    );\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/cart/:id?' component={addedCartButton} />\n        <Route path='/' component={withHeader} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","export const INVENTORYCATEGORY_LIST_REQUEST = \"INVENTORYCATEGORY_LIST_REQUEST\";\r\nexport const INVENTORYCATEGORY_LIST_SUCCESS = \"INVENTORYCATEGORY_LIST_SUCCESS\";\r\nexport const INVENTORYCATEGORY_LIST_FAIL = \"INVENTORYCATEGORY_LIST_FAIL\";\r\n\r\nexport const INVENTORYCATEGORY_DETAILS_REQUEST =\r\n  \"INVENTORYCATEGORY_DETAILS_REQUEST\";\r\nexport const INVENTORYCATEGORY_DETAILS_SUCCESS =\r\n  \"INVENTORYCATEGORY_DETAILS_SUCCESS\";\r\nexport const INVENTORYCATEGORY_DETAILS_FAIL = \"INVENTORYCATEGORY_DETAILS_FAIL\";\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n  productFilteredReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userDeleteReducer,\r\n  userListReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducers\";\r\nimport {\r\n  inventoryListReducer,\r\n  inventoryDetailReducer,\r\n  inventoryCreateReducer,\r\n  InventoryUpdateReducer,\r\n  inventoryDeleteReducer,\r\n  inventoryGroupReducer,\r\n  inventoryDatesReducer,\r\n  inventoryCostReducer,\r\n  inventorySalaryReducer,\r\n  inventoryUnpaidReducer\r\n} from \"./reducers/inventoryReducers\";\r\n\r\nimport {\r\n  inventoryCategoryListReducer,\r\n  inventoryCategoryDetailReducer,\r\n} from \"./reducers/inventoryCategoryReducers\";\r\n\r\nimport {\r\n  receiptListReducer,\r\n  receiptUnpaidReducer,\r\n  receiptDetailReducer,\r\n  receiptPaidReducer,\r\n  receiptRemoveReducer\r\n} from \"./reducers/receiptReducers\";\r\n\r\nimport {\r\n  recipeListReducer,\r\n  recipeDetailReducer,\r\n  recipeCreateReducer,\r\n  recipeUpdateReducer,\r\n  recipeDeleteReducer,\r\n} from \"./reducers/recipeReducers\";\r\n\r\nimport {\r\n  inventoryLevelListReducer,\r\n  inventoryLevelDetailReducer,\r\n  inventoryLevelCreateReducer,\r\n  InventoryLevelUpdateReducer,\r\n  inventoryLevelDeleteReducer,\r\n  inventoryLevelGroupedReducer,\r\n  inventoryLevelSalaryReducer\r\n} from \"./reducers/inventoryLevelReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDetails: productDetailReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  productFiltered: productFilteredReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  inventoryList: inventoryListReducer,\r\n  inventorySalary: inventorySalaryReducer,\r\n  inventoryUnpaid: inventoryUnpaidReducer,\r\n  inventoryDetail: inventoryDetailReducer,\r\n  inventoryDelete: inventoryDeleteReducer,\r\n  inventoryUpdate: InventoryUpdateReducer,\r\n  inventoryCreate: inventoryCreateReducer,\r\n  inventoryCategoryList: inventoryCategoryListReducer,\r\n  inventoryCategoryDetails: inventoryCategoryDetailReducer,\r\n  inventoryCost: inventoryCostReducer,\r\n  inventoryGroup: inventoryGroupReducer,\r\n  inventoryDates: inventoryDatesReducer,\r\n  receiptList: receiptListReducer,\r\n  receiptDetails: receiptDetailReducer,\r\n  receiptUnpaid: receiptUnpaidReducer,\r\n  receiptPaid: receiptPaidReducer,\r\n  receiptRemove: receiptRemoveReducer,\r\n  recipeList: recipeListReducer,\r\n  recipeDetails: recipeDetailReducer,\r\n  recipeDelete: recipeDeleteReducer,\r\n  recipeUpdate: recipeUpdateReducer,\r\n  recipeCreate: recipeCreateReducer,\r\n  inventoryLevelList: inventoryLevelListReducer,\r\n  inventoryLevelSalary: inventoryLevelSalaryReducer,\r\n  inventoryLevelGrouped: inventoryLevelGroupedReducer,\r\n  inventoryLevelDetail: inventoryLevelDetailReducer,\r\n  inventoryLevelDelete: inventoryLevelDeleteReducer,\r\n  inventoryLevelUpdate: InventoryLevelUpdateReducer,\r\n  inventoryLevelCreate: inventoryLevelCreateReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_FILTERED_REQUEST,\r\n  PRODUCT_FILTERED_SUCCESS,\r\n  PRODUCT_FILTERED_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {loading: true, products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productFilteredReducer = (state = {loading: true, products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_FILTERED_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_FILTERED_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload,\r\n        success: true\r\n      }\r\n    case PRODUCT_FILTERED_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailReducer = (\r\n  state = { loading: true, product: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {loading:true, products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.vid === item.vid)\r\n\r\n// console.log(item)\r\n// console.log(state.cartItems)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.vid === existItem.vid ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.vid !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n  } from '../constants/userConstants'\r\n\r\n  export const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n        return { loading: true }\r\n      case USER_LOGIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_LOGIN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  \r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_REGISTER_REQUEST:\r\n        return { loading: true }\r\n      case USER_REGISTER_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_REGISTER_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_DETAILS_REQUEST:\r\n        return { ...state, loading: true }\r\n      case USER_DETAILS_SUCCESS:\r\n        return { loading: false, user: action.payload }\r\n      case USER_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_DETAILS_RESET:\r\n        return { user: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_PROFILE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_PROFILE_SUCCESS:\r\n        return { loading: false, success: true, userInfo: action.payload }\r\n      case USER_UPDATE_PROFILE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_PROFILE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n        return { loading: true }\r\n      case USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload }\r\n      case USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LIST_RESET:\r\n        return { users: [] }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_RESET:\r\n        return {\r\n          user: {},\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  ","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  INVENTORY_LIST_REQUEST,\r\n  INVENTORY_LIST_SUCCESS,\r\n  INVENTORY_LIST_FAIL,\r\n  INVENTORY_CREATE_RESET,\r\n  INVENTORY_CREATE_FAIL,\r\n  INVENTORY_CREATE_SUCCESS,\r\n  INVENTORY_CREATE_REQUEST,\r\n  INVENTORY_DELETE_REQUEST,\r\n  INVENTORY_DELETE_SUCCESS,\r\n  INVENTORY_DELETE_FAIL,\r\n  INVENTORY_UPDATE_REQUEST,\r\n  INVENTORY_UPDATE_SUCCESS,\r\n  INVENTORY_UPDATE_FAIL,\r\n  INVENTORY_UPDATE_RESET,\r\n  INVENTORY_DETAILS_REQUEST,\r\n  INVENTORY_DETAILS_SUCCESS,\r\n  INVENTORY_DETAILS_FAIL,\r\n  INVENTORY_GROUP_REQUEST,\r\n  INVENTORY_GROUP_SUCCESS,\r\n  INVENTORY_GROUP_FAIL,\r\n  INVENTORY_DATES_REQUEST,\r\n  INVENTORY_DATES_SUCCESS,\r\n  INVENTORY_DATES_FAIL,\r\n  INVENTORY_COST_REQUEST,\r\n  INVENTORY_COST_SUCCESS,\r\n  INVENTORY_COST_FAIL,\r\n  INVENTORY_SALARY_REQUEST,\r\n  INVENTORY_SALARY_SUCCESS,\r\n  INVENTORY_SALARY_FAIL,\r\n  INVENTORY_UNPAID_REQUEST,\r\n  INVENTORY_UNPAID_SUCCESS,\r\n  INVENTORY_UNPAID_FAIL,\r\n} from \"../constants/inventoryConstants\";\r\n\r\nexport const inventoryListReducer = (\r\n  state = { loading: true, inventory: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORY_LIST_REQUEST:\r\n      return { loading: true, inventory: [] };\r\n    case INVENTORY_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventory: action.payload,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case INVENTORY_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventorySalaryReducer = (\r\n  state = { loading: true, inventory: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORY_SALARY_REQUEST:\r\n      return { loading: true, inventory: [] };\r\n    case INVENTORY_SALARY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventory: action.payload,\r\n      };\r\n    case INVENTORY_SALARY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventoryUnpaidReducer = (\r\n  state = { loading: true, inventory: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORY_UNPAID_REQUEST:\r\n      return { loading: true, inventory: [] };\r\n    case INVENTORY_UNPAID_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventory: action.payload,\r\n      };\r\n    case INVENTORY_UNPAID_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventoryDatesReducer = (\r\n  state = { loading: true, inventoryDates: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORY_DATES_REQUEST:\r\n      return { loading: true, inventoryDates: [] };\r\n    case INVENTORY_DATES_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventoryDates: action.payload\r\n      };\r\n    case INVENTORY_DATES_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventoryCostReducer = (\r\n  state = { loading: true, inventoryCost: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORY_COST_REQUEST:\r\n      return { loading: true, inventoryCost: [] };\r\n    case INVENTORY_COST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventoryCost: action.payload\r\n      };\r\n    case INVENTORY_COST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventoryGroupReducer = (\r\n  state = { loading: true, inventory: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORY_GROUP_REQUEST:\r\n      return { loading: true, inventory: [] };\r\n    case INVENTORY_GROUP_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventory: action.payload,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case INVENTORY_GROUP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventoryDetailReducer = (\r\n  state = { loading: true, inventory: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORY_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case INVENTORY_DETAILS_SUCCESS:\r\n      return { loading: false, inventory: action.payload };\r\n    case INVENTORY_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventoryCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case INVENTORY_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case INVENTORY_CREATE_SUCCESS:\r\n        return { loading: false, success: true, inventory: action.payload }\r\n      case INVENTORY_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case INVENTORY_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n\r\n  export const inventoryDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case INVENTORY_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case INVENTORY_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case INVENTORY_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const InventoryUpdateReducer = (state = {  inventory: {} }, action) => {\r\n    switch (action.type) {\r\n      case INVENTORY_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case INVENTORY_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, inventory: action.payload }\r\n      case INVENTORY_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case INVENTORY_UPDATE_RESET:\r\n        return { inventory: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n  INVENTORYCATEGORY_LIST_REQUEST,\r\n  INVENTORYCATEGORY_LIST_SUCCESS,\r\n  INVENTORYCATEGORY_LIST_FAIL,\r\n  INVENTORYCATEGORY_DETAILS_REQUEST,\r\n  INVENTORYCATEGORY_DETAILS_SUCCESS,\r\n  INVENTORYCATEGORY_DETAILS_FAIL,\r\n} from \"../constants/inventoryCategoryConstants\";\r\n\r\nexport const inventoryCategoryListReducer = (\r\n  state = { loading: true, inventoryCategory: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORYCATEGORY_LIST_REQUEST:\r\n      return { loading: true, inventoryCategory: [] };\r\n    case INVENTORYCATEGORY_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventoryCategory: action.payload,\r\n      };\r\n    case INVENTORYCATEGORY_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const inventoryCategoryDetailReducer = (\r\n  state = { loading: true, inventoryCategory: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORYCATEGORY_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case INVENTORYCATEGORY_DETAILS_SUCCESS:\r\n      return { loading: false, inventoryCategory: action.payload };\r\n    case INVENTORYCATEGORY_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    RECEIPT_LIST_REQUEST,\r\n    RECEIPT_LIST_SUCCESS,\r\n    RECEIPT_LIST_FAIL,\r\n    RECEIPT_UNPAID_REQUEST,\r\n    RECEIPT_UNPAID_SUCCESS,\r\n    RECEIPT_UNPAID_FAIL,\r\n    RECEIPT_DETAILS_REQUEST,\r\n    RECEIPT_DETAILS_SUCCESS,\r\n    RECEIPT_DETAILS_FAIL,\r\n    RECEIPT_DETAILS_RESET,\r\n    RECEIPT_PAID_REQUEST,\r\n    RECEIPT_PAID_SUCCESS,\r\n    RECEIPT_PAID_FAIL,\r\n    RECEIPT_REMOVE_REQUEST,\r\n    RECEIPT_REMOVE_SUCCESS,\r\n    RECEIPT_REMOVE_FAIL,\r\n\r\n  } from \"../constants/receiptConstants\";\r\n  \r\n  export const receiptListReducer = (\r\n    state = { loading: true, receipt: [] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case RECEIPT_LIST_REQUEST:\r\n        return { loading: true, receipt: [] };\r\n      case RECEIPT_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          receipt: action.payload,\r\n          pages: action.payload.pages,\r\n          page: action.payload.page,\r\n          \r\n        };\r\n      case RECEIPT_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n    \r\n  export const receiptUnpaidReducer = (\r\n    state = { loading: true, receipt: [] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case RECEIPT_UNPAID_REQUEST:\r\n        return { loading: true, receipt: [] };\r\n      case RECEIPT_UNPAID_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          receipt: action.payload,\r\n        };\r\n      case RECEIPT_UNPAID_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n\r\n  \r\nexport const receiptDetailReducer = (\r\n  state = { loading: true, receipt: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case RECEIPT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case RECEIPT_DETAILS_SUCCESS:\r\n      return { loading: false, receipt: action.payload };\r\n    case RECEIPT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n      case RECEIPT_DETAILS_RESET:\r\n        return {}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const receiptPaidReducer = (\r\n  state = { loading: true, receipt: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case RECEIPT_PAID_REQUEST:\r\n      return { loading: true, ...state };\r\n    case RECEIPT_PAID_SUCCESS:\r\n      return { loading: false, receipt: action.payload };\r\n    case RECEIPT_PAID_FAIL:\r\n      return { loading: false, error: action.payload };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const receiptRemoveReducer = (\r\n  state = { loading: true, receipt: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case RECEIPT_REMOVE_REQUEST:\r\n      return { loading: true, ...state };\r\n    case RECEIPT_REMOVE_SUCCESS:\r\n      return { loading: false, receipt: action.payload };\r\n    case RECEIPT_REMOVE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  RECIPE_LIST_REQUEST,\r\n  RECIPE_LIST_SUCCESS,\r\n  RECIPE_LIST_FAIL,\r\n  RECIPE_DETAILS_REQUEST,\r\n  RECIPE_DETAILS_SUCCESS,\r\n  RECIPE_DETAILS_FAIL,\r\n  RECIPE_DETAILS_RESET,\r\n  RECIPE_CREATE_RESET,\r\n  RECIPE_CREATE_FAIL,\r\n  RECIPE_CREATE_SUCCESS,\r\n  RECIPE_CREATE_REQUEST,\r\n  RECIPE_DELETE_REQUEST,\r\n  RECIPE_DELETE_SUCCESS,\r\n  RECIPE_DELETE_FAIL,\r\n  RECIPE_UPDATE_REQUEST,\r\n  RECIPE_UPDATE_SUCCESS,\r\n  RECIPE_UPDATE_FAIL,\r\n  RECIPE_UPDATE_RESET,\r\n} from \"../constants/recipeConstants\";\r\n\r\nexport const recipeListReducer = (\r\n  state = { loading: true, recipe: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case RECIPE_LIST_REQUEST:\r\n      return { loading: true, recipe: [] };\r\n    case RECIPE_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        recipe: action.payload,\r\n      };\r\n    case RECIPE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const recipeDetailReducer = (\r\n  state = { loading: true, recipe: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case RECIPE_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case RECIPE_DETAILS_SUCCESS:\r\n      return { loading: false, success: true, recipe: action.payload };\r\n    case RECIPE_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n      case RECIPE_DETAILS_RESET:\r\n        return {}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const recipeCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case RECIPE_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case RECIPE_CREATE_SUCCESS:\r\n        return { loading: false, success: true, recipe: action.payload }\r\n      case RECIPE_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case RECIPE_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const recipeDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case RECIPE_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case RECIPE_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case RECIPE_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const recipeUpdateReducer = (state = {  recipe: {} }, action) => {\r\n    switch (action.type) {\r\n      case RECIPE_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case RECIPE_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, recipe: action.payload }\r\n      case RECIPE_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case RECIPE_UPDATE_RESET:\r\n        return { recipe: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    INVENTORYLEVEL_LIST_REQUEST,\r\n    INVENTORYLEVEL_LIST_SUCCESS,\r\n    INVENTORYLEVEL_LIST_FAIL,\r\n    INVENTORYLEVEL_CREATE_RESET,\r\n    INVENTORYLEVEL_CREATE_FAIL,\r\n    INVENTORYLEVEL_CREATE_SUCCESS,\r\n    INVENTORYLEVEL_CREATE_REQUEST,\r\n    INVENTORYLEVEL_DELETE_REQUEST,\r\n    INVENTORYLEVEL_DELETE_SUCCESS,\r\n    INVENTORYLEVEL_DELETE_FAIL,\r\n    INVENTORYLEVEL_UPDATE_REQUEST,\r\n    INVENTORYLEVEL_UPDATE_SUCCESS,\r\n    INVENTORYLEVEL_UPDATE_FAIL,\r\n    INVENTORYLEVEL_UPDATE_RESET,\r\n    INVENTORYLEVEL_DETAILS_REQUEST,\r\n    INVENTORYLEVEL_DETAILS_SUCCESS,\r\n    INVENTORYLEVEL_DETAILS_FAIL,\r\n    INVENTORYLEVEL_GROUPED_REQUEST,\r\n    INVENTORYLEVEL_GROUPED_SUCCESS,\r\n    INVENTORYLEVEL_GROUPED_FAIL,\r\n    INVENTORYLEVEL_SALARY_REQUEST,\r\n    INVENTORYLEVEL_SALARY_SUCCESS,\r\n    INVENTORYLEVEL_SALARY_FAIL,\r\n  } from \"../constants/inventoryLevelConstants\";\r\n\r\n  \r\nexport const inventoryLevelListReducer = (\r\n    state = { loading: true, inventoryLevel: [] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case INVENTORYLEVEL_LIST_REQUEST:\r\n        return { loading: true, inventoryLevel: [] };\r\n      case INVENTORYLEVEL_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          inventoryLevel: action.payload,\r\n          success: true\r\n        };\r\n      case INVENTORYLEVEL_LIST_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n    \r\nexport const inventoryLevelSalaryReducer = (\r\n  state = { loading: true, inventoryLevel: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case INVENTORYLEVEL_SALARY_REQUEST:\r\n      return { loading: true, inventoryLevel: [] };\r\n    case INVENTORYLEVEL_SALARY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        inventoryLevel: action.payload,\r\n      };\r\n    case INVENTORYLEVEL_SALARY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n  \r\n  export const inventoryLevelGroupedReducer = (\r\n    state = { loading: true, inventoryLevelGrouped: [] },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case INVENTORYLEVEL_GROUPED_REQUEST:\r\n        return { loading: true, inventoryLevelGrouped: [] };\r\n      case INVENTORYLEVEL_GROUPED_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          inventoryLevelGrouped: action.payload,\r\n        };\r\n      case INVENTORYLEVEL_GROUPED_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const inventoryLevelDetailReducer = (\r\n    state = { loading: true, inventoryLevelDetail: {} },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case INVENTORYLEVEL_DETAILS_REQUEST:\r\n        return { loading: true, ...state };\r\n      case INVENTORYLEVEL_DETAILS_SUCCESS:\r\n        return { loading: false, inventoryLevelDetail: action.payload };\r\n      case INVENTORYLEVEL_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export const inventoryLevelCreateReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n        case INVENTORYLEVEL_CREATE_REQUEST:\r\n          return { loading: true }\r\n        case INVENTORYLEVEL_CREATE_SUCCESS:\r\n          return { loading: false, success: true, inventoryLevel: action.payload }\r\n        case INVENTORYLEVEL_CREATE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n        case INVENTORYLEVEL_CREATE_RESET:\r\n          return {}\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n  \r\n  \r\n    export const inventoryLevelDeleteReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n        case INVENTORYLEVEL_DELETE_REQUEST:\r\n          return { loading: true }\r\n        case INVENTORYLEVEL_DELETE_SUCCESS:\r\n          return { loading: false, success: true }\r\n        case INVENTORYLEVEL_DELETE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n  \r\n    export const InventoryLevelUpdateReducer = (state = {  inventoryLevel: {} }, action) => {\r\n      switch (action.type) {\r\n        case INVENTORYLEVEL_UPDATE_REQUEST:\r\n          return { loading: true }\r\n        case INVENTORYLEVEL_UPDATE_SUCCESS:\r\n          return { loading: false, success: true, inventoryLevel: action.payload }\r\n        case INVENTORYLEVEL_UPDATE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n        case INVENTORYLEVEL_UPDATE_RESET:\r\n          return { inventoryLevel: {} }\r\n        default:\r\n          return state\r\n      }\r\n    }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}